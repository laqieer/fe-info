[{"desc": "Interrupt setup", "label": "InterruptSetup", "addr": {"J": "C0", "U": "C0", "E": "C0"}, "size": "44", "mode": "arm", "params": null, "return": null}, {"desc": "Interrupt code", "label": "InterruptCode", "addr": {"J": "104", "U": "104", "E": "104"}, "size": "138", "mode": "arm", "params": null, "return": null}, {"desc": "Main game loop", "label": "MainGameLoop", "addr": {"J": "23C", "U": "23C", "E": "23C"}, "size": {"J": "464", "U": "464", "E": "498"}, "mode": "thumb", "params": null, "return": null}, {"desc": "Initialize game", "label": "InitGame", "addr": {"J": "6A0", "U": "6A0", "E": "6D4"}, "size": "124", "mode": "thumb", "params": null, "return": null}, {"desc": "Soft reset check", "label": "SoftResetCheck", "addr": {"J": "7D0", "U": "7D0", "E": "804"}, "size": "34", "mode": "thumb", "params": null, "return": null}, {"desc": "Soft reset", "label": "SoftReset", "addr": {"J": "804", "U": "804", "E": "838"}, "size": {"J": "108", "U": "108", "E": "128"}, "mode": "thumb", "params": null, "return": null}, {"desc": "Call LZ77UnComp16Bit", "label": "CallLZ77UnComp16Bit", "addr": {"J": "90C", "U": "90C", "E": "960"}, "size": "C", "mode": "thumb", "params": [{"desc": "Source address", "type": "ptr"}, {"desc": "Destination address", "type": "ptr"}], "return": null}, {"desc": "Call LZ77UnComp8Bit", "label": "CallLZ77UnComp8Bit", "addr": {"J": "918", "U": "918", "E": "96C"}, "size": "C", "mode": "thumb", "params": [{"desc": "Source address", "type": "ptr"}, {"desc": "Destination address", "type": "ptr"}], "return": null}, {"desc": "Call SoundBias", "label": "CallSoundBias", "addr": {"J": "940", "U": "940", "E": "994"}, "size": "10", "mode": "thumb", "params": null, "return": null}, {"desc": "Call MultiBoot", "label": "CallMultiBoot", "addr": {"J": "950", "U": "950", "E": "9A4"}, "size": "C", "mode": "thumb", "params": null, "return": null}, {"desc": "Call VBlankIntrWait", "label": "CallVBlankIntrWait", "addr": {"J": "95C", "U": "95C", "E": "9B0"}, "size": "C", "mode": "thumb", "params": null, "return": null}, {"desc": "Update input", "label": "UpdateInput", "addr": {"J": "968", "U": "968", "E": "9BC"}, "size": "38", "mode": "thumb", "params": null, "return": null}, {"desc": "Clear RAM", "label": "ClearRAM", "addr": {"J": "9A0", "U": "9A0", "E": "9F4"}, "size": "48", "mode": "thumb", "params": null, "return": null}, {"desc": "Load interrupt code", "label": "LoadInterruptCode", "addr": {"J": "9E8", "U": "9E8", "E": "A3C"}, "size": "30", "mode": "thumb", "params": null, "return": null}, {"desc": "Reset free OAM", "label": "ResetFreeOam", "addr": {"J": "A18", "U": "A18", "E": "A6C"}, "size": "34", "mode": "thumb", "params": null, "return": null}, {"desc": "Fixed-point multiply", "label": "FixedPointMultiply", "addr": {"J": "A4C", "U": "A4C", "E": "AA0"}, "size": "1C", "mode": "thumb", "params": [{"desc": "Multiplicand", "type": "s16"}, {"desc": "Multiplier (1/256)", "type": "s16"}], "return": {"desc": "Product", "type": "s16"}, "notes": "Fixed-point multiplication of two values, where the second has a scaling factor of 1/256 (ranges from -128 to 127.99)"}, {"desc": "Fixed-point divide", "label": "FixedPointDivide", "addr": {"J": "A68", "U": "A68", "E": "ABC"}, "size": "18", "mode": "thumb", "params": [{"desc": "Dividend", "type": "s16"}, {"desc": "Divisor (1/4)", "type": "s16"}], "return": {"desc": "Quotient", "type": "s16"}, "notes": "Fixed-point division of two values, where the second has a scaling factor of 1/4 (ranges from -8192 to 8191.75)"}, {"desc": "Fixed-point inverse", "label": "FixedPointInverse", "addr": {"J": "A80", "U": "A80", "E": "AD4"}, "size": "18", "mode": "thumb", "params": [{"desc": "Value", "type": "s16"}], "return": {"desc": "Inverse (1/65536)", "type": "s16"}, "notes": "Fixed-point inverse of a value, with a scaling factor of 1/65536"}, {"desc": "Call V-Blank code", "label": "CallVBlankCode", "addr": {"J": "A98", "U": "A98", "E": "AEC"}, "size": "4C", "mode": "thumb", "params": null, "return": null}, {"desc": "Set V-Blank code pointer", "label": "SetVBlankCodePtr", "addr": {"J": "AE4", "U": "AE4", "E": "B38"}, "size": "1C", "mode": "thumb", "params": [{"desc": "V-Blank code pointer", "type": "ptr.thumb"}], "return": null}, {"desc": "Call H-Blank code", "label": "CallHBlankCode", "addr": {"J": "B00", "U": "B00", "E": "B54"}, "size": "24", "mode": "thumb", "params": null, "return": null}, {"desc": "Set H-Blank code pointer", "label": "SetHBlankCodePtr", "addr": {"J": "B24", "U": "B24", "E": "B78"}, "size": "1C", "mode": "thumb", "params": [{"desc": "H-Blank code pointer", "type": "ptr.thumb"}], "return": null}, {"desc": "Call V-Count code", "label": "CallVCountCode", "addr": {"J": "B40", "U": "B40", "E": "B94"}, "size": "24", "mode": "thumb", "params": null, "return": null}, {"desc": "Set V-Count code pointer", "label": "SetVCountCodePtr", "addr": {"J": "B64", "U": "B64", "E": "BB8"}, "size": "1C", "mode": "thumb", "params": [{"desc": "V-Count code pointer", "type": "ptr.thumb"}], "return": null}, {"desc": "Call serial communication code", "label": "CallSerialCommunicationCode", "addr": {"J": "B80", "U": "B80", "E": "BD4"}, "size": "24", "mode": "thumb", "params": null, "return": null}, {"desc": "Set serial communication code", "label": "SetSerialCommunicationCode", "addr": {"J": "BA4", "U": "BA4", "E": "BF8"}, "size": "1C", "mode": "thumb", "params": [{"desc": "Function pointer", "type": "ptr.thumb"}], "return": null}, {"desc": "Call timer 3 overflow code", "label": "CallTimer3OverflowCode", "addr": {"J": "BC0", "U": "BC0", "E": "C14"}, "size": "24", "mode": "thumb", "params": null, "return": null}, {"desc": "Set timer 3 overflow code", "label": "SetTimer3OverflowCode", "addr": {"J": "BE4", "U": "BE4", "E": "C38"}, "size": "1C", "mode": "thumb", "params": [{"desc": "Function pointer", "type": "ptr.thumb"}], "return": null}, {"desc": "Empty function", "label": "EmptyFunction_C00", "addr": {"J": "C00", "U": "C00", "E": "C54"}, "size": "4", "mode": "thumb", "params": null, "return": null}, {"desc": "Empty function", "label": "Music_EmptyFunction", "addr": {"J": "24BC", "U": "24BC", "E": "2510"}, "size": "4", "mode": "thumb", "params": null, "return": null}, {"desc": "Initialize sound", "label": "InitSound", "addr": {"J": "2564", "U": "2564", "E": "25B8"}, "size": "294", "mode": "thumb", "params": null, "return": null}, {"desc": "Transfer sound data to FIFO channels", "label": "TransferSound", "addr": {"J": "28F4", "U": "28F4", "E": "2948"}, "size": "124", "mode": "thumb", "params": null, "return": null}, {"desc": "Play sound 1", "label": "PlaySound1", "addr": {"J": "2A18", "U": "2A18", "E": "2A6C"}, "size": "10", "mode": "thumb", "params": [{"desc": "Sound ID", "type": "u16"}], "return": null}, {"desc": "Play sound 2", "label": "PlaySound2", "addr": {"J": "2A28", "U": "2A28", "E": "2A7C"}, "size": "10", "mode": "thumb", "params": [{"desc": "Sound ID", "type": "u16"}], "return": null}, {"desc": "Call play sound", "label": "CallPlaySound", "addr": {"J": "2C80", "U": "2C80", "E": "2CD4"}, "size": "14", "mode": "thumb", "params": [{"desc": "Sound ID", "type": "u16"}, {"desc": "Action? (0 = play, 4 = stop)", "type": "u8"}], "return": null}, {"desc": "DMA transfer", "label": "DMATransfer", "addr": {"J": "31E4", "U": "31E4", "E": "3238"}, "size": "D0", "mode": "thumb", "params": [{"desc": "DMA channel", "type": "u8"}, {"desc": "Source address", "type": "ptr"}, {"desc": "Destination address", "type": "ptr"}, {"desc": "Length", "type": "u16"}, {"desc": "Bit size", "type": "u8"}], "return": null}, {"desc": "FillBytes", "label": "FillBytes", "addr": {"J": "32B4", "U": "32B4", "E": "3308"}, "size": "CC", "mode": "thumb", "params": [{"desc": "DMA channel", "type": "u8"}, {"desc": "Value", "type": "u8"}, {"desc": "Destination address", "type": "ptr"}, {"desc": "Length", "type": "u16"}, {"desc": "Bit size", "type": "u8"}], "return": null}, {"desc": "Check set new music track", "label": "CheckSetNewMusicTrack", "addr": {"J": "36D0", "U": "36D0", "E": "3724"}, "size": "BC", "mode": "thumb", "params": [{"desc": "Music track", "type": "u16"}], "return": null}, {"desc": "Check play new music track", "label": "CheckPlayNewMusicTrack", "addr": {"J": "3878", "U": "3878", "E": "38CC"}, "size": "60", "mode": "thumb", "params": null, "return": null}, {"desc": "Update music after alarm stops", "label": "UpdateMusicAfterAlarmStops", "addr": {"J": "3930", "U": "3930", "E": "3984"}, "size": "50", "mode": "thumb", "params": null, "return": null}, {"desc": "Play music", "label": "PlayMusic", "addr": {"J": "39F4", "U": "39F4", "E": "3A48"}, "size": "78", "mode": "thumb", "params": [{"desc": "Music track", "type": "u16"}, {"desc": "Priority", "type": "u8"}], "return": null}, {"desc": "Fades the current music track", "label": "FadeMusic", "addr": {"J": "3A98", "U": "3A98", "E": "3AEC"}, "size": "4C", "mode": "thumb", "params": [{"desc": "Fade time", "type": "u16"}], "return": null}, {"desc": "Call sound code B", "label": "CallSoundCodeB", "addr": {"J": "4310", "U": "4310", "E": "4364"}, "size": "10", "mode": "thumb", "params": [{"desc": "Source RAM address", "type": "ptr"}, {"desc": "Source RAM address copy", "type": "ptr"}, {"desc": "Destination RAM address", "type": "ptr"}, {"desc": "?", "type": "u8"}], "return": {"desc": "End destination address", "type": "ptr"}}, {"desc": "Sound code B", "label": "SoundCodeB", "addr": {"J": "4320", "U": "4320", "E": "4374"}, "size": "94", "mode": "arm", "params": [{"desc": "Source RAM address", "type": "ptr"}, {"desc": "Source RAM address copy", "type": "ptr"}, {"desc": "Destination RAM address", "type": "ptr"}, {"desc": "?", "type": "u8"}], "return": {"desc": "End destination address", "type": "ptr"}}, {"desc": "Call sound code C", "label": "CallSoundCodeC", "addr": {"J": "43B4", "U": "43B4", "E": "4408"}, "size": "10", "mode": "thumb", "params": [{"desc": "Destination RAM address", "type": "ptr"}, {"desc": "Source RAM address", "type": "ptr"}, {"desc": "?", "type": "u8"}], "return": {"desc": "End source address", "type": "ptr"}}, {"desc": "Sound code C", "label": "SoundCodeC", "addr": {"J": "43C4", "U": "43C4", "E": "4418"}, "size": "A0", "mode": "arm", "params": [{"desc": "Destination RAM address", "type": "ptr"}, {"desc": "Source RAM address", "type": "ptr"}, {"desc": "?", "type": "u8"}], "return": {"desc": "End source address", "type": "ptr"}}, {"desc": "Call sound code A", "label": "CallSoundCodeA", "addr": {"J": "4464", "U": "4464", "E": "44B8"}, "size": "10", "mode": "thumb", "params": [{"desc": "Source address?", "type": "ptr"}, {"desc": "Destination address?", "type": "ptr"}, {"desc": "?", "type": "u8"}], "return": {"desc": "End source address?", "type": "ptr"}}, {"desc": "Sound code A", "label": "SoundCodeA", "addr": {"J": "4474", "U": "4474", "E": "44C8"}, "size": "648", "mode": "arm", "params": [{"desc": "Source address?", "type": "ptr"}, {"desc": "Destination address?", "type": "ptr"}, {"desc": "?", "type": "u8"}], "return": {"desc": "End source address?", "type": "ptr"}}, {"desc": "Call get note frequency", "label": "CallGetNoteFrenquency", "addr": {"J": "4ABC", "U": "4ABC", "E": "4B10"}, "size": "4", "mode": "thumb", "params": [{"desc": "Frequency", "type": "u32"}, {"desc": "Music Pitch", "type": "u32"}], "return": {"desc": "Frequency", "type": "u32"}}, {"desc": "Get note frequency", "label": "GetNoteFrequency", "addr": {"J": "4AC0", "U": "4AC0", "E": "4B14"}, "size": "18", "mode": "arm", "params": [{"desc": "Frequency", "type": "u32"}, {"desc": "Music Pitch", "type": "u32"}], "return": {"desc": "Frequency", "type": "u32"}}, {"desc": "CpuFastSet", "label": "CpuFastSet", "addr": {"J": "5190", "U": "5190", "E": "51E4"}, "size": "4", "mode": "thumb", "params": [{"desc": "Source address", "type": "ptr"}, {"desc": "Destination address", "type": "ptr"}, {"desc": "Length/Mode", "type": "u32"}], "return": null}, {"desc": "CpuSet", "label": "CpuSet", "addr": {"J": "5194", "U": "5194", "E": "51E8"}, "size": "4", "mode": "thumb", "params": [{"desc": "Source address", "type": "ptr"}, {"desc": "Destination address", "type": "ptr"}, {"desc": "Length/Mode", "type": "u32"}], "return": null}, {"desc": "DivArm (divide)", "label": "DivArm_Divide", "addr": {"J": "5198", "U": "5198", "E": "51EC"}, "size": "4", "mode": "thumb", "params": [{"desc": "Denominator", "type": "s32"}, {"desc": "Numerator", "type": "s32"}], "return": {"desc": "Quotient", "type": "s32"}}, {"desc": "DivArm (modulo)", "label": "DivArm_Modulo", "addr": {"J": "519C", "U": "519C", "E": "51F0"}, "size": "8", "mode": "thumb", "params": [{"desc": "Denominator", "type": "s32"}, {"desc": "Numerator", "type": "s32"}], "return": {"desc": "Remainder", "type": "s32"}}, {"desc": "LZ77UnCompReadNormalWrite16bit", "label": "LZ77UnCompReadNormalWrite16bit", "addr": {"J": "51A4", "U": "51A4", "E": "51F8"}, "size": "4", "mode": "thumb", "params": [{"desc": "Source address", "type": "ptr"}, {"desc": "Destination address", "type": "ptr"}, {"desc": "Callback parameter", "type": "u32"}, {"desc": "Callback structure", "type": "u32"}], "return": null}, {"desc": "LZ77UnCompReadNormalWrite8bit", "label": "LZ77UnCompReadNormalWrite8bit", "addr": {"J": "51A8", "U": "51A8", "E": "51FC"}, "size": "4", "mode": "thumb", "params": [{"desc": "Source address", "type": "ptr"}, {"desc": "Destination address", "type": "ptr"}, {"desc": "Callback parameter", "type": "u32"}, {"desc": "Callback structure", "type": "u32"}], "return": null}, {"desc": "MidiKey2Freq", "label": "MidiKey2Freq", "addr": {"J": "51AC", "U": "51AC", "E": "5200"}, "size": "4", "mode": "thumb", "params": [{"desc": "Source address", "type": "ptr"}, {"desc": "Midi key", "type": "u8"}, {"desc": "Adjustment value", "type": "u8"}], "return": {"desc": "Frequency", "type": "u16"}}, {"desc": "MultiBoot", "label": "MultiBoot", "addr": {"J": "51B0", "U": "51B0", "E": "5204"}, "size": "8", "mode": "thumb", "params": [{"desc": "Pointer to MultiBootParam structure", "type": "ptr"}], "return": {"desc": "Failure flag", "type": "bool"}}, {"desc": "SoundBias (level 0)", "label": "SoundBias_0", "addr": {"J": "51B8", "U": "51B8", "E": "520C"}, "size": "8", "mode": "thumb", "params": null, "return": null}, {"desc": "SoundBias (level 0x200)", "label": "SoundBias_200", "addr": {"J": "51C0", "U": "51C0", "E": "5214"}, "size": "8", "mode": "thumb", "params": null, "return": null}, {"desc": "Sqrt", "label": "Sqrt", "addr": {"J": "51C8", "U": "51C8", "E": "521C"}, "size": "4", "mode": "thumb", "params": [{"desc": "Number", "type": "u32"}], "return": {"desc": "Result", "type": "u32"}}, {"desc": "VBlankIntrWait", "label": "VBlankIntrWait", "addr": {"J": "51CC", "U": "51CC", "E": "5220"}, "size": "8", "mode": "thumb", "params": null, "return": null}, {"desc": "Samus check screw attack or speedbooster affecting environment", "label": "SamusCheckScrewSpeedAffectingEnvironment", "addr": {"J": "5368", "U": "5368", "E": "53BC"}, "size": "10C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}, {"desc": "Samus physics pointer", "type": "ptr.SamusPhysics"}], "return": null}, {"desc": "Samus walking check sides collision", "label": "SamusWalkingCheckSidesCollision", "addr": {"J": "58A0", "U": "58A0", "E": "58F4"}, "size": "238", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}, {"desc": "Samus physics pointer", "type": "ptr.SamusPhysics"}], "return": null}, {"desc": "Samus standing check ground collision", "label": "SamusStandingCheckGroundCollision", "addr": {"J": "5B8C", "U": "5B8C", "E": "5BE0"}, "size": "C0", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}, {"desc": "Samus physics pointer", "type": "ptr.SamusPhysics"}], "return": {"desc": "New pose", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus check landing collision", "label": "SamusCheckLandingCollision", "addr": {"J": "5C4C", "U": "5C4C", "E": "5CA0"}, "size": "1D0", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}, {"desc": "Samus physics pointer", "type": "ptr.SamusPhysics"}], "return": {"desc": "New pose", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus check top collision", "label": "SamusCheckTopCollision", "addr": {"J": "5E1C", "U": "5E1C", "E": "5E70"}, "size": "11C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}, {"desc": "Samus physics pointer", "type": "ptr.SamusPhysics"}], "return": {"desc": "New pose", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus check collision", "label": "SamusCheckCollision", "addr": {"J": "5F38", "U": "5F38", "E": "5F8C"}, "size": "2DC", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}, {"desc": "Samus physics pointer", "type": "ptr.SamusPhysics"}], "return": null}, {"desc": "Samus check set environment effect", "label": "SamusCheckSetEnvironmentEffect", "addr": {"J": "6214", "U": "6214", "E": "6268"}, "size": "3DC", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}, {"desc": "?", "type": "u8"}, {"desc": "?", "type": "u8"}], "return": null}, {"desc": "Samus update environment effects", "label": "SamusUpdateEnvironmentEffects", "addr": {"J": "65F0", "U": "65F0", "E": "6644"}, "size": "360", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": null}, {"desc": "Samus update jump velocity", "label": "SamusUpdateJumpVelocity", "addr": {"J": "6950", "U": "6950", "E": "69A4"}, "size": "2DC", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}, {"desc": "Samus data copy pointer", "type": "ptr.SamusData"}, {"desc": "Samus weapon info pointer", "type": "ptr.SamusWeaponInfo"}], "return": null, "notes": "Updates the velocity of samus mid-air (spin breaking, starting to spin, forced movements)"}, {"desc": "Samus set landing pose", "label": "SamusSetLandingPose", "addr": {"J": "6C2C", "U": "6C2C", "E": "6C80"}, "size": "280", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}, {"desc": "Samus data copy pointer", "type": "ptr.SamusData"}], "return": null}, {"desc": "Samus set hurt pose", "label": "SamusSetHurtPose", "addr": {"J": "6EAC", "U": "6EAC", "E": "6F00"}, "size": "19C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}, {"desc": "Samus data copy pointer", "type": "ptr.SamusData"}, {"desc": "Samus weapon info pointer", "type": "ptr.SamusWeaponInfo"}], "return": null}, {"desc": "Samus set knockback pose", "label": "SamusSetKnockbackPose", "addr": {"J": "7048", "U": "7048", "E": "709C"}, "size": "11C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}, {"desc": "Samus data copy pointer", "type": "ptr.SamusData"}, {"desc": "Samus weapon info pointer", "type": "ptr.SamusWeaponInfo"}], "return": null}, {"desc": "Samus turn around arm cannon", "label": "SamusTurnAroundArmCannon", "addr": {"J": "7164", "U": "7164", "E": "71B8"}, "size": "384", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}, {"desc": "Samus data copy pointer", "type": "ptr.SamusData"}, {"desc": "Samus weapon info pointer", "type": "ptr.SamusWeaponInfo"}], "return": null, "notes": "Handles arm cannon direction when Samus turns around (except when spinning), shinespark direction selection and samus using an elevator"}, {"desc": "Samus set pose", "label": "SamusSetPose", "addr": {"J": "74E8", "U": "74E8", "E": "753C"}, "size": "D4", "mode": "thumb", "params": [{"desc": "Samus pose", "type": "u8", "enum": "SamusPose"}], "return": null}, {"desc": "Samus copy data", "label": "SamusCopyData", "addr": {"J": "75BC", "U": "75BC", "E": "7610"}, "size": "60", "mode": "thumb", "params": null, "return": null}, {"desc": "Samus update physics", "label": "SamusUpdatePhysics", "addr": {"J": "761C", "U": "761C", "E": "7670"}, "size": "110", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": null, "notes": "Sets Samus physics default values and check if slowed by liquid"}, {"desc": "Samus get X velocity on slope", "label": "SamusGetXVelocityOnSlope", "addr": {"J": "772C", "U": "772C", "E": "7780"}, "size": "44", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New X velocity", "type": "s16"}}, {"desc": "Samus copy palette", "label": "SamusCopyPalette", "addr": {"J": "7770", "U": "7770", "E": "77C4"}, "size": "2C", "mode": "thumb", "params": [{"desc": "Source address", "type": "ptr"}, {"desc": "Palette offset", "type": "u32"}, {"desc": "Number of colors", "type": "u32"}], "return": null}, {"desc": "Samus update", "label": "SamusUpdate", "addr": {"J": "779C", "U": "779C", "E": "77F0"}, "size": "4C", "mode": "thumb", "params": null, "return": null}, {"desc": "Samus update hitbox", "label": "SamusUpdateHitbox", "addr": {"J": "77E8", "U": "77E8", "E": "783C"}, "size": {"J": "F8", "U": "F8", "E": "100"}, "mode": "thumb", "params": null, "return": null}, {"desc": "Samus update graphics", "label": "SamusUpdateGfx", "addr": {"J": "78E0", "U": "78E0", "E": "793C"}, "size": "3C", "mode": "thumb", "params": null, "return": null}, {"desc": "Call check play low health sound", "label": "CallCheckPlayLowHealthSound", "addr": {"J": "791C", "U": "791C", "E": "7978"}, "size": "C", "mode": "thumb", "params": null, "return": null}, {"desc": "Call update arm cannon offset", "label": "CallUpdateArmCannonOffset", "addr": {"J": "7928", "U": "7928", "E": "7984"}, "size": "20", "mode": "thumb", "params": null, "return": null}, {"desc": "Samus bomb jump", "label": "SamusBombJump", "addr": {"J": "7948", "U": "7948", "E": "79A4"}, "size": "5C", "mode": "thumb", "params": [{"desc": "Direction (0xA = right, 0xB = up, 0xC = left, 0x80 = Bomb above Samus flag)", "type": "u8"}], "return": null}, {"desc": "Samus aim cannon", "label": "SamusAimCannon", "addr": {"J": "79A4", "U": "79A4", "E": "7A00"}, "size": "354", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": null}, {"desc": "Samus fire beam or missile", "label": "SamusFireBeamOrMissile", "addr": {"J": "7CF8", "U": "7CF8", "E": "7D54"}, "size": "BC", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}, {"desc": "Samus weapon info pointer", "type": "ptr.SamusWeaponInfo"}, {"desc": "Samus equipment pointer", "type": "ptr.Equipment"}], "return": {"desc": "Fired beam or missile", "type": "bool"}, "notes": "Checks if Samus is firing a beam or a missile, also handles the charge counter going up"}, {"desc": "Samus check fire pistol", "label": "SamusCheckFirePistol", "addr": {"J": "7DB4", "U": "7DB4", "E": "7E10"}, "size": "6C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}, {"desc": "Samus weapon info pointer", "type": "ptr.SamusWeaponInfo"}], "return": {"desc": "New projectile (0 = none, 1 = pistol, 2 = charged pistol)", "type": "u8"}}, {"desc": "Samus spawn new projectile", "label": "SamusSpawnNewProjectile", "addr": {"J": "7E20", "U": "7E20", "E": "7E7C"}, "size": "23C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}, {"desc": "Samus weapon info pointer", "type": "ptr.SamusWeaponInfo"}, {"desc": "Samus equipment pointer", "type": "ptr.Equipment"}], "return": null}, {"desc": "Samus check A button pressed", "label": "SamusCheckAButtonPressed", "addr": {"J": "805C", "U": "805C", "E": "80B8"}, "size": "24", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "A button pressed", "type": "bool"}, "notes": "Checks if A is pressed and if so sets forced movement flag to 1, used in the standing pose subroutines (morphball, turning around and standing)"}, {"desc": "Samus set highlighted weapon", "label": "SamusSetHighlightedWeapon", "addr": {"J": "8080", "U": "8080", "E": "80DC"}, "size": "140", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}, {"desc": "Samus weapon info pointer", "type": "ptr.SamusWeaponInfo"}, {"desc": "Samus equipment pointer", "type": "ptr.Equipment"}], "return": null}, {"desc": "Samus set spinning pose", "label": "SamusSetSpinningPose", "addr": {"J": "81C0", "U": "81C0", "E": "821C"}, "size": "B8", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}, {"desc": "Samus equipment pointer", "type": "ptr.Equipment"}], "return": null}, {"desc": "Apply X acceleration to Samus", "label": "SamusApplyXAcceleration", "addr": {"J": "8278", "U": "8278", "E": "82D4"}, "size": "40", "mode": "thumb", "params": [{"desc": "X Acceleration", "type": "s16"}, {"desc": "X Velocity", "type": "s16"}, {"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": null}, {"desc": "Samus check hazard damage", "label": "SamusCheckHazardDamage", "addr": {"J": "82B8", "U": "82B8", "E": "8314"}, "size": "168", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}, {"desc": "Samus equipment pointer", "type": "ptr.Equipment"}, {"desc": "Samus hazard damage pointer", "type": "ptr.SamusHazardDamage"}], "return": {"desc": "Getting knocked back or dying", "type": "bool"}}, {"desc": "Samus check shinesparking pose", "label": "SamusCheckShinesparkingPose", "addr": {"J": "8420", "U": "8420", "E": "847C"}, "size": "58", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": null}, {"desc": "Samus inactive pose", "label": "SamusInactivity", "addr": {"J": "8478", "U": "8478", "E": "84D4"}, "size": "4", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "Always 0xFF", "type": "u8"}, "notes": "Default function used for pose subroutines that don't have any behavior (generally when the player isn't in control of Samus)"}, {"desc": "Samus running pose", "label": "SamusRunning", "addr": {"J": "84DC", "U": "84DC", "E": "8538"}, "size": "D4", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus running pose graphics update", "label": "SamusRunningGfx", "addr": {"J": "85B0", "U": "85B0", "E": "860C"}, "size": "124", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus standing pose", "label": "SamusStanding", "addr": {"J": "86D4", "U": "86D4", "E": "8730"}, "size": "148", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus standing pose graphics update", "label": "SamusStandingGfx", "addr": {"J": "881C", "U": "881C", "E": "8878"}, "size": "20", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus turning around pose", "label": "SamusTurningAround", "addr": {"J": "883C", "U": "883C", "E": "8898"}, "size": "BC", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus turning around pose graphics update", "label": "SamusTurningAroundGfx", "addr": {"J": "88F8", "U": "88F8", "E": "8954"}, "size": "48", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus shooting pose graphics update", "label": "SamusShootingGfx", "addr": {"J": "8940", "U": "8940", "E": "899C"}, "size": "1C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus crouching pose", "label": "SamusCrouching", "addr": {"J": "895C", "U": "895C", "E": "89B8"}, "size": "1B8", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus turning around and crouching pose", "label": "SamusTurningAroundAndCrouching", "addr": {"J": "8B14", "U": "8B14", "E": "8B70"}, "size": "110", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus turning around and crouching pose graphics update", "label": "SamusTurningAroundAndCrouchingGfx", "addr": {"J": "8C24", "U": "8C24", "E": "8C80"}, "size": "2C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus shooting and crouching pose graphics update", "label": "SamusShootingAndCrouchingGfx", "addr": {"J": "8C50", "U": "8C50", "E": "8CAC"}, "size": "1C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus skidding pose", "label": "SamusSkidding", "addr": {"J": "8C6C", "U": "8C6C", "E": "8CC8"}, "size": "8C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus jumping/falling pose", "label": "SamusMidair", "addr": {"J": "8CF8", "U": "8CF8", "E": "8D54"}, "size": "100", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus jumping/falling pose graphics update", "label": "SamusMidAirGfx", "addr": {"J": "8DF8", "U": "8DF8", "E": "8E54"}, "size": "40", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus turning around and jumping/falling pose", "label": "SamusTurningAroundMidAir", "addr": {"J": "8E38", "U": "8E38", "E": "8E94"}, "size": "80", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus turning around and jumping/falling pose graphics update", "label": "SamusTurningAroundMidAirGfx", "addr": {"J": "8EB8", "U": "8EB8", "E": "8F14"}, "size": "20", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus starting a spin jump pose graphics update", "label": "SamusStartingSpinJumpGfx", "addr": {"J": "8ED8", "U": "8ED8", "E": "8F34"}, "size": "24", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus spinning pose", "label": "SamusSpinning", "addr": {"J": "8EFC", "U": "8EFC", "E": "8F58"}, "size": "144", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus spinning pose graphics update", "label": "SamusSpinningGfx", "addr": {"J": "9040", "U": "9040", "E": "909C"}, "size": "5C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus starting wall jump pose", "label": "SamusStartingWallJump", "addr": {"J": "909C", "U": "909C", "E": "90F8"}, "size": "44", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus starting wall jump pose graphics update", "label": "SamusStartingWallJumpGfx", "addr": {"J": "90E0", "U": "90E0", "E": "913C"}, "size": "24", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus space jumping pose graphics update", "label": "SamusSpaceJumpingGfx", "addr": {"J": "9104", "U": "9104", "E": "9160"}, "size": "4C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus screw attacking pose graphics update", "label": "SamusScrewAttackingGfx", "addr": {"J": "9150", "U": "9150", "E": "91AC"}, "size": "C0", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus morphing pose", "label": "SamusMorphing", "addr": {"J": "9210", "U": "9210", "E": "926C"}, "size": "20", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus morphing pose graphics update", "label": "SamusMorphingGfx", "addr": {"J": "9230", "U": "9230", "E": "928C"}, "size": "1C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus morphball pose", "label": "SamusMorphball", "addr": {"J": "924C", "U": "924C", "E": "92A8"}, "size": "170", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus rolling pose", "label": "SamusRolling", "addr": {"J": "93BC", "U": "93BC", "E": "9418"}, "size": "CC", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus rolling pose graphics update", "label": "SamusRollingGfx", "addr": {"J": "9488", "U": "9488", "E": "94E4"}, "size": "38", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus unmorphing pose", "label": "SamusUnmorphing", "addr": {"J": "94C0", "U": "94C0", "E": "951C"}, "size": "48", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus unmorphing pose graphics update", "label": "SamusUnmorphingGfx", "addr": {"J": "9508", "U": "9508", "E": "9564"}, "size": "24", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus jumping/falling in morphball pose", "label": "SamusMorphballMidAir", "addr": {"J": "952C", "U": "952C", "E": "9588"}, "size": "D8", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus hanging on ledge pose", "label": "SamusHangingOnLedge", "addr": {"J": "9604", "U": "9604", "E": "9660"}, "size": "16C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus hanging on ledge pose graphics update", "label": "SamusHangingOnLedgeGfx", "addr": {"J": "9770", "U": "9770", "E": "97CC"}, "size": "28", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus turning to aim while hanging pose", "label": "SamusTurningToAimWhileHanging", "addr": {"J": "9798", "U": "9798", "E": "97F4"}, "size": "C8", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus turning to aim while hanging pose graphics update", "label": "SamusTurningToAimWhileHangingGfx", "addr": {"J": "9860", "U": "9860", "E": "98BC"}, "size": "24", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus hiding arm cannon while hanging pose graphics update", "label": "SamusHidingArmCannonWhileHangingGfx", "addr": {"J": "9884", "U": "9884", "E": "98E0"}, "size": "30", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus aiming while hanging pose", "label": "SamusAimingWhileHanging", "addr": {"J": "98B4", "U": "98B4", "E": "9910"}, "size": "18C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus pulling self up from hanging pose", "label": "SamusPullingSelfUp", "addr": {"J": "9A40", "U": "9A40", "E": "9A9C"}, "size": "28", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus pulling self up pose graphics update", "label": "SamusPullingSelfUpGfx", "addr": {"J": "9A68", "U": "9A68", "E": "9AC4"}, "size": "2C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus pulling self forward from hanging pose", "label": "SamusPullingSelfForward", "addr": {"J": "9A94", "U": "9A94", "E": "9AF0"}, "size": "20", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus pulling self forward pose graphics update", "label": "SamusPullingSelfForwardGfx", "addr": {"J": "9AB4", "U": "9AB4", "E": "9B10"}, "size": "2C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus pulling self into morphball tunnel pose graphics update", "label": "SamusPullingSelfIntoMorphballTunnelGfx", "addr": {"J": "9AE0", "U": "9AE0", "E": "9B3C"}, "size": "48", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus using an elevator pose", "label": "SamusUsingAnElevator", "addr": {"J": "9B28", "U": "9B28", "E": "9B84"}, "size": "8C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus using an elevator pose graphics update", "label": "SamusUsingAnElevatorGfx", "addr": {"J": "9BB4", "U": "9BB4", "E": "9C10"}, "size": "50", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus facing the foreground pose", "label": "SamusFacingTheForeground", "addr": {"J": "9C04", "U": "9C04", "E": "9C60"}, "size": "28", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus turning from facing the foreground pose graphics update", "label": "SamusTurningFromFacingForegroundGfx", "addr": {"J": "9C2C", "U": "9C2C", "E": "9C88"}, "size": "3C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus delay before shinesparking pose graphics update", "label": "SamusDelayBeforeShinesparkingGfx", "addr": {"J": "9C68", "U": "9C68", "E": "9CC4"}, "size": "38", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus shinesparking pose", "label": "SamusShinesparking", "addr": {"J": "9CA0", "U": "9CA0", "E": "9CFC"}, "size": "B0", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus shinesparking pose graphics update", "label": "SamusShinesparkingGfx", "addr": {"J": "9D50", "U": "9D50", "E": "9DAC"}, "size": "8C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus shinesparking collision pose graphics update", "label": "SamusShinesparkCollisionGfx", "addr": {"J": "9DDC", "U": "9DDC", "E": "9E38"}, "size": "14", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus delay after Shinesparking pose graphics update", "label": "SamusDelayAfterShinesparkingGfx", "addr": {"J": "9DF0", "U": "9DF0", "E": "9E4C"}, "size": "1C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus delay before ballsparking pose", "label": "SamusDelayBeforeBallsparking", "addr": {"J": "9E0C", "U": "9E0C", "E": "9E68"}, "size": "28", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus delay before ballparking pose graphics update", "label": "SamusDelayBeforeBallsparkingGfx", "addr": {"J": "9E34", "U": "9E34", "E": "9E90"}, "size": "88", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus ballparking pose graphics update", "label": "SamusBallsparkingGfx", "addr": {"J": "9EBC", "U": "9EBC", "E": "9F18"}, "size": "7C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus ballparking collision pose graphics update", "label": "SamusBallsparkCollisionGfx", "addr": {"J": "9F38", "U": "9F38", "E": "9F94"}, "size": "14", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus on zipline pose", "label": "SamusOnZipline", "addr": {"J": "9F4C", "U": "9F4C", "E": "9FA8"}, "size": "58", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus shooting on zipline pose graphics update", "label": "SamusShootingOnZiplineGfx", "addr": {"J": "9FA4", "U": "9FA4", "E": "A000"}, "size": "1C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus morphball on zipline pose", "label": "SamusMorphballOnZipline", "addr": {"J": "9FC0", "U": "9FC0", "E": "A01C"}, "size": "30", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus saving/loading game pose", "label": "SamusSavingLoadingGame", "addr": {"J": "9FF0", "U": "9FF0", "E": "A04C"}, "size": "18", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus turning around to download map data pose graphics update", "label": "SamusTurningAroundToDowloadMapDataGfx", "addr": {"J": "A008", "U": "A008", "E": "A064"}, "size": "1C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus getting hurt pose", "label": "SamusGettingHurt", "addr": {"J": "A024", "U": "A024", "E": "A080"}, "size": "68", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus getting hurt pose graphics update", "label": "SamusGettingHurtGfx", "addr": {"J": "A08C", "U": "A08C", "E": "A0E8"}, "size": "20", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus getting knocked back pose", "label": "SamusGettingKnockedBack", "addr": {"J": "A0AC", "U": "A0AC", "E": "A108"}, "size": "30", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus dying pose", "label": "SamusDying", "addr": {"J": "A0DC", "U": "A0DC", "E": "A138"}, "size": "10C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus crouching to crawl pose graphics update", "label": "SamusCrouchingToCrawlGfx", "addr": {"J": "A1E8", "U": "A1E8", "E": "A244"}, "size": "34", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus crawling stopped pose", "label": "SamusCrawlingStopped", "addr": {"J": "A21C", "U": "A21C", "E": "A278"}, "size": "68", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus starting to crawl pose graphics update", "label": "SamusStartingToCrawlGfx", "addr": {"J": "A284", "U": "A284", "E": "A2E0"}, "size": "1C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus crawling pose", "label": "SamusCrawling", "addr": {"J": "A2A0", "U": "A2A0", "E": "A2FC"}, "size": "74", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus dying pose graphics update", "label": "SamusDyingGfx", "addr": {"J": "A314", "U": "A314", "E": "A370"}, "size": "44", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus turning around while crawling pose", "label": "SamusTurningAroundWhileCrawling", "addr": {"J": "A358", "U": "A358", "E": "A3B4"}, "size": "1C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus crawling pose graphics update", "label": "SamusCrawlingGfx", "addr": {"J": "A374", "U": "A374", "E": "A3D0"}, "size": "1C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus grabbing a ledge suitless pose graphics update", "label": "SamusGrabbingALedgeSuitlessGfx", "addr": {"J": "A390", "U": "A390", "E": "A3EC"}, "size": "1C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus facing the background pose", "label": "SamusFacingTheBackground", "addr": {"J": "A3AC", "U": "A3AC", "E": "A408"}, "size": "28", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus turning from facing the background pose graphics update", "label": "SamusTurningFromFacingBackgroundGfx", "addr": {"J": "A3D4", "U": "A3D4", "E": "A430"}, "size": "54", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus turning to enter escape ship pose graphics update", "label": "SamusTurningToEnterEscapeShipGfx", "addr": {"J": "A428", "U": "A428", "E": "A484"}, "size": "1C", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New Samus pose (0xFF if none)", "type": "u8", "enum": "SamusPose"}}, {"desc": "Samus execute pose subroutine", "label": "SamusExecutePoseSubroutine", "addr": {"J": "A444", "U": "A444", "E": "A4A0"}, "size": {"J": "BC", "U": "BC", "E": "D8"}, "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "New pose", "type": "u8", "enum": "SamusPose"}, "notes": "Executes the subroutine for the current pose, calls Samus check hazard damage, Samus set highlighted weapon, Samus check shinesparking pose, Samus set spinning pose and Samus spawn new projectile"}, {"desc": "Samus update velocity and position", "label": "SamusUpdateVelocityAndPosition", "addr": {"J": "A500", "U": "A500", "E": "A578"}, "size": "188", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": null}, {"desc": "Samus update graphics RAM", "label": "SamusUpdateGraphicsRam", "addr": {"J": "A688", "U": "A688", "E": "A700"}, "size": "DE4", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}, {"desc": "0 if facing right, 1 if facing left", "type": "u8"}], "return": null}, {"desc": "Samus update palette", "label": "SamusUpdatePalette", "addr": {"J": "B46C", "U": "B46C", "E": "B4E4"}, "size": "3FC", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": null}, {"desc": "Check play low health sound", "label": "CheckPlayLowHealthSound", "addr": {"J": "B868", "U": "B868", "E": "B8E0"}, "size": "40", "mode": "thumb", "params": null, "return": null}, {"desc": "Samus update draw distance and standing status", "label": "SamusUpdateDrawDistanceAndStandingStatus", "addr": {"J": "B8A8", "U": "B8A8", "E": "B920"}, "size": "68", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}, {"desc": "Samus physics pointer", "type": "ptr.SamusPhysics"}], "return": null}, {"desc": "Update arm cannon offset", "label": "UpdateArmCannonOffset", "addr": {"J": "B910", "U": "B910", "E": "B988"}, "size": "3A8", "mode": "thumb", "params": [{"desc": "0 if facing right, 1 if facing left", "type": "u8"}], "return": null}, {"desc": "Initialize Samus data", "label": "InitSamusData", "addr": {"J": "BCB8", "U": "BCB8", "E": "BD30"}, "size": "130", "mode": "thumb", "params": null, "return": null}, {"desc": "Draw Samus", "label": "DrawSamus", "addr": {"J": "BDE8", "U": "BDE8", "E": "BE60"}, "size": "4F0", "mode": "thumb", "params": null, "return": null}, {"desc": "Demo main loop", "label": "DemoMainLoop", "addr": {"J": "C2D8", "U": "C2D8", "E": "C350"}, "size": "24", "mode": "thumb", "params": null, "return": null}, {"desc": "Update demo input", "label": "UpdateDemoInput", "addr": {"J": "C384", "U": "C384", "E": "C3FC"}, "size": "90", "mode": "thumb", "params": null, "return": null}, {"desc": "Copy demo button input", "label": "CopyDemoButtonInput", "addr": {"J": "C414", "U": "C414", "E": "C48C"}, "size": "34", "mode": "thumb", "params": null, "return": null}, {"desc": "In-game subroutine", "label": "InGameSubroutine", "addr": {"J": "C4B4", "U": "C4B4", "E": "C52C"}, "size": {"J": "244", "U": "244", "E": "234"}, "mode": "thumb", "params": null, "return": {"desc": "Return to title screen", "type": "bool"}}, {"desc": "Set V-Blank code for in-game", "label": "SetVBlankCodeForInGame", "addr": {"J": "C6F8", "U": "C6F8", "E": "C760"}, "size": "3C", "mode": "thumb", "params": null, "return": null}, {"desc": "Update Samus graphics", "label": "UpdateSamusGfx", "addr": {"J": "C734", "U": "C734", "E": "C7E8"}, "size": "160", "mode": "thumb", "params": [{"desc": "Samus data pointer", "type": "ptr.SamusData"}, {"desc": "Samus physics pointer", "type": "ptr.SamusPhysics"}], "return": null}, {"desc": "V-Blank code during in-game loads", "label": "VBlankCodeDuringInGameLoads", "addr": {"J": "C894", "U": "C894", "E": "C948"}, "size": "158", "mode": "thumb", "params": null, "return": null}, {"desc": "V-Blank code during in-game", "label": "VBlankCodeDuringInGame", "addr": {"J": "CA6C", "U": "CA6C", "E": "CB20"}, "size": "134", "mode": "thumb", "params": null, "return": null}, {"desc": "Loads and initializes generic data", "label": "InitAndLoadGenerics", "addr": {"J": "CBAC", "U": "CBAC", "E": "CC60"}, "size": "23C", "mode": "thumb", "params": null, "return": null}, {"desc": "Update sprites", "label": "UpdateSprites", "addr": {"J": "CF00", "U": "CF00", "E": "CFB4"}, "size": "42C", "mode": "thumb", "params": null, "return": null}, {"desc": "Update sprite animation", "label": "UpdateSpriteAnimation", "addr": {"J": "D32C", "U": "D32C", "E": "D3E0"}, "size": "40", "mode": "thumb", "params": [{"desc": "Sprite data pointer", "type": "ptr.SpriteData"}], "return": null}, {"desc": "Draw on-screen sprites", "label": "DrawOnScreenSprites", "addr": {"J": "D430", "U": "D430", "E": "D4E4"}, "size": "8C", "mode": "thumb", "params": null, "return": null}, {"desc": "Draw sprite", "label": "DrawSprite", "addr": {"J": "D544", "U": "D544", "E": "D5F8"}, "size": "890", "mode": "thumb", "params": [{"desc": "Sprite data pointer", "type": "ptr.SpriteData"}, {"desc": "RAM slot?", "type": "u32"}], "return": null}, {"desc": "Check sprite is on-screen", "label": "CheckSpriteIsOnScreen", "addr": {"J": "DDD4", "U": "DDD4", "E": "DE88"}, "size": "150", "mode": "thumb", "params": [{"desc": "Sprite data pointer", "type": "ptr.SpriteData"}], "return": null}, {"desc": "Load sprite data for room", "label": "LoadSpriteDataForRoom", "addr": {"J": "DF24", "U": "DF24", "E": "DFD8"}, "size": "60", "mode": "thumb", "params": null, "return": null}, {"desc": "Load spriteset", "label": "LoadSpriteset", "addr": {"J": "DF84", "U": "DF84", "E": "E038"}, "size": "100", "mode": "thumb", "params": null, "return": null}, {"desc": "Load new sprite graphics", "label": "LoadNewSpriteGfx", "addr": {"J": "E084", "U": "E084", "E": "E138"}, "size": "2C", "mode": "thumb", "params": [{"desc": "Sprite ID", "type": "u8", "enum": "PrimarySpriteID"}, {"desc": "Sprite graphics row", "type": "u8"}], "return": null}, {"desc": "Load new sprite palette", "label": "LoadNewSpritePalette", "addr": {"J": "E0B0", "U": "E0B0", "E": "E164"}, "size": "40", "mode": "thumb", "params": [{"desc": "Sprite ID", "type": "u8", "enum": "PrimarySpriteID"}, {"desc": "Sprite graphics row", "type": "u8"}, {"desc": "Length (rows)", "type": "u8"}], "return": null}, {"desc": "Clear sprite data", "label": "ClearSpriteData", "addr": {"J": "E0F0", "U": "E0F0", "E": "E1A4"}, "size": "44", "mode": "thumb", "params": null, "return": null}, {"desc": "Initialize sprites in room", "label": "InitSpritesInRoom", "addr": {"J": "E134", "U": "E134", "E": "E1E8"}, "size": "48", "mode": "thumb", "params": null, "return": null}, {"desc": "Initialize primary sprite", "label": "InitPrimarySprite", "addr": {"J": "E17C", "U": "E17C", "E": "E230"}, "size": "DC", "mode": "thumb", "params": [{"desc": "Sprite property/spriteset slot", "type": "u8"}, {"desc": "Sprite Y position", "type": "u16"}, {"desc": "Sprite X position", "type": "u16"}, {"desc": "Room sprite number", "type": "u8"}], "return": null}, {"desc": "Spawn new secondary sprite", "label": "SpawnNewSecondarySprite", "addr": {"J": "E258", "U": "E258", "E": "E30C"}, "size": "C4", "mode": "thumb", "params": [{"desc": "Sprite ID", "type": "u8", "enum": "SecondarySpriteID"}, {"desc": "Part number", "type": "u8"}, {"desc": "Spriteset graphics row", "type": "u8"}, {"desc": "Primary sprite RAM slot", "type": "u8"}, {"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}, {"desc": "Status", "type": "flags16", "enum": "SpriteStatus"}], "return": {"desc": "Assigned sprite RAM slot, 0xFF otherwise", "type": "u8"}}, {"desc": "Spawn new primary sprite", "label": "SpawnNewPrimarySprite", "addr": {"J": "E31C", "U": "E31C", "E": "E3D0"}, "size": "B8", "mode": "thumb", "params": [{"desc": "Sprite ID", "type": "u8", "enum": "PrimarySpriteID"}, {"desc": "Room slot", "type": "u8"}, {"desc": "Spriteset graphics row", "type": "u8"}, {"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}, {"desc": "Status", "type": "flags16", "enum": "SpriteStatus"}], "return": {"desc": "Assigned sprite RAM slot, 0xFF otherwise", "type": "u8"}}, {"desc": "Spawn drops and followers", "label": "SpawnDropsAndFollowers", "addr": {"J": "E3D4", "U": "E3D4", "E": "E488"}, "size": "C4", "mode": "thumb", "params": [{"desc": "Sprite ID", "type": "u8", "enum": "PrimarySpriteID"}, {"desc": "Room slot", "type": "u8"}, {"desc": "Spriteset graphics row", "type": "u8"}, {"desc": "Primary sprite RAM slot", "type": "u8"}, {"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}, {"desc": "Status", "type": "flags16", "enum": "SpriteStatus"}], "return": {"desc": "Assigned sprite RAM slot, 0xFF otherwise", "type": "u8"}}, {"desc": "Load location text sprite", "label": "LoadLocationTextSprite", "addr": {"J": "E498", "U": "E498", "E": "E54C"}, "size": "7C", "mode": "thumb", "params": null, "return": null}, {"desc": "Take damage from sprite", "label": "TakeDamageFromSprite", "addr": {"J": "E634", "U": "E634", "E": "E6E8"}, "size": "C4", "mode": "thumb", "params": [{"desc": "Knockback flag", "type": "bool"}, {"desc": "Sprite data pointer", "type": "ptr.SpriteData"}, {"desc": "Damage multiplier", "type": "u16"}], "return": {"desc": "Energy at 0", "type": "bool"}}, {"desc": "Check objects touching", "label": "CheckObjectsTouching", "addr": {"J": "E6F8", "U": "E6F8", "E": "E7AC"}, "size": "50", "mode": "thumb", "params": [{"desc": "Object 1 top position", "type": "u16"}, {"desc": "Object 1 bottom position", "type": "u16"}, {"desc": "Object 1 left position", "type": "u16"}, {"desc": "Object 1 right position", "type": "u16"}, {"desc": "Object 2 top position", "type": "u16"}, {"desc": "Object 2 bottom position", "type": "u16"}, {"desc": "Object 2 left position", "type": "u16"}, {"desc": "Object 2 right position", "type": "u16"}], "return": {"desc": "Objects touching", "type": "bool"}}, {"desc": "Samus and sprite collision", "label": "SamusAndSpriteCollision", "addr": {"J": "E748", "U": "E748", "E": "E7FC"}, "size": "C18", "mode": "thumb", "params": null, "return": null}, {"desc": "Check vertical collision at position", "label": "CheckVerticalCollisionAtPosition", "addr": {"J": "F360", "U": "F360", "E": "F414"}, "size": "11C", "mode": "thumb", "params": [{"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}], "return": {"desc": "Block top edge Y position", "type": "u16"}}, {"desc": "Check vertical collision at position (account for slopes)", "label": "CheckVerticalCollisionAtPosition_Slopes", "addr": {"J": "F47C", "U": "F47C", "E": "F530"}, "size": "118", "mode": "thumb", "params": [{"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}], "return": {"desc": "Block top edge Y position", "type": "u16"}}, {"desc": "Check collision at position", "label": "CheckCollisionAtPosition", "addr": {"J": "F688", "U": "F688", "E": "F73C"}, "size": "98", "mode": "thumb", "params": [{"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}], "return": null}, {"desc": "Get collision at position", "label": "GetCollisionAtPosition", "addr": {"J": "F720", "U": "F720", "E": "F7D4"}, "size": "7C", "mode": "thumb", "params": [{"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}], "return": {"desc": "Collision check", "type": "u32"}}, {"desc": "Current sprite falling (unused?)", "label": "CurrSpriteFalling", "addr": {"J": "F79C", "U": "F79C", "E": "F850"}, "size": "70", "mode": "thumb", "params": null, "return": null}, {"desc": "Sprite choose random X flip", "label": "SpriteChooseRandomXFlip", "addr": {"J": "F80C", "U": "F80C", "E": "F8C0"}, "size": "38", "mode": "thumb", "params": null, "return": null}, {"desc": "Sprite choose random X direction", "label": "SpriteChooseRandomXDirection", "addr": {"J": "F844", "U": "F844", "E": "F8F8"}, "size": "3C", "mode": "thumb", "params": null, "return": null}, {"desc": "Sprite choose random X direction with room slot", "label": "SpriteChooseRandomXDirection_RoomSlot", "addr": {"J": "F880", "U": "F880", "E": "F934"}, "size": "30", "mode": "thumb", "params": null, "return": null}, {"desc": "Make sprite face Samus (X-flip)", "label": "MakeSpriteFaceSamus_XFlip", "addr": {"J": "F8B0", "U": "F8B0", "E": "F964"}, "size": "30", "mode": "thumb", "params": null, "return": null}, {"desc": "Make sprite face Samus (direction)", "label": "MakeSpriteFaceSamus_Direction", "addr": {"J": "F8E0", "U": "F8E0", "E": "F994"}, "size": "34", "mode": "thumb", "params": null, "return": null}, {"desc": "Make sprite face away from Samus (X-flip)", "label": "MakeSpriteFaceAwayFromSamus_XFlip", "addr": {"J": "F914", "U": "F914", "E": "F9C8"}, "size": "30", "mode": "thumb", "params": null, "return": null}, {"desc": "Make sprite face away from Samus (direction)", "label": "MakeSpriteFaceAwayFromSamus_Direction", "addr": {"J": "F944", "U": "F944", "E": "F9F8"}, "size": "34", "mode": "thumb", "params": null, "return": null}, {"desc": "Mecha Ridley missile rotation", "label": "MechaRidleyMissileRotation", "addr": {"J": "FA78", "U": "FA78", "E": "FB2C"}, "size": "150", "mode": "thumb", "params": [{"desc": "OAM rotation", "type": "u16"}, {"desc": "Samus Y position", "type": "u16"}, {"desc": "Samus X position", "type": "u16"}, {"desc": "Sprite Y position", "type": "u16"}, {"desc": "Sprite X position", "type": "u16"}], "return": {"desc": "New OAM rotation", "type": "u16"}}, {"desc": "Check end of sprite animation (current)", "label": "CheckEndOfSpriteAnimation_Curr", "addr": {"J": "FBC8", "U": "FBC8", "E": "FC7C"}, "size": "38", "mode": "thumb", "params": null, "return": {"desc": "Animation ended", "type": "bool"}}, {"desc": "Check near end of sprite animation (current)", "label": "CheckNearEndOfSpriteAnimation_Curr", "addr": {"J": "FC00", "U": "FC00", "E": "FCB4"}, "size": "3C", "mode": "thumb", "params": null, "return": {"desc": "Animation near end", "type": "bool"}}, {"desc": "Check end of sprite animation (slot)", "label": "CheckEndOfSpriteAnimation_Slot", "addr": {"J": "FC3C", "U": "FC3C", "E": "FCF0"}, "size": "48", "mode": "thumb", "params": [{"desc": "Sprite slot number", "type": "u8"}], "return": {"desc": "Animation ended", "type": "bool"}}, {"desc": "Check near end of sprite animation (slot)", "label": "CheckNearEndOfSpriteAnimation_Slot", "addr": {"J": "FC84", "U": "FC84", "E": "FD38"}, "size": "4C", "mode": "thumb", "params": [{"desc": "Sprite slot number", "type": "u8"}], "return": {"desc": "Animation near end", "type": "bool"}}, {"desc": "Check end of sub-sprite data 1 animation", "label": "CheckEndOfSubSpriteData1Animation", "addr": {"J": "FCD0", "U": "FCD0", "E": "FD84"}, "size": "38", "mode": "thumb", "params": null, "return": {"desc": "Animation ended", "type": "bool"}}, {"desc": "Check near end of sub-sprite data 1 animation", "label": "CheckNearEndOfSubSpriteData1Animation", "addr": {"J": "FD08", "U": "FD08", "E": "FDBC"}, "size": "3C", "mode": "thumb", "params": null, "return": {"desc": "Animation near end", "type": "bool"}}, {"desc": "Check end of sub-sprite data 2 animation", "label": "CheckEndOfSubSpriteData2Animation", "addr": {"J": "FD44", "U": "FD44", "E": "FDF8"}, "size": "38", "mode": "thumb", "params": null, "return": {"desc": "Animation ended", "type": "bool"}}, {"desc": "Check end of sub-sprite animation with pointer", "label": "CheckEndOfSubSpriteAnimation_Ptr", "addr": {"J": "FD7C", "U": "FD7C", "E": "FE30"}, "size": "30", "mode": "thumb", "params": [{"desc": "Sub-sprite data pointer", "type": "ptr.SubSpriteData"}], "return": {"desc": "Animation ended", "type": "bool"}}, {"desc": "Check near end of sub-sprite animation with pointer", "label": "CheckNearEndOfSubSpriteAnimation_Ptr", "addr": {"J": "FDAC", "U": "FDAC", "E": "FE60"}, "size": "34", "mode": "thumb", "params": [{"desc": "Sub-sprite data pointer", "type": "ptr.SubSpriteData"}], "return": {"desc": "Animation near end", "type": "bool"}}, {"desc": "Check Samus near sprite (left/right)", "label": "CheckSamusNearSprite_LeftRight", "addr": {"J": "FDE0", "U": "FDE0", "E": "FE94"}, "size": "68", "mode": "thumb", "params": [{"desc": "Y range", "type": "u16"}, {"desc": "X range", "type": "u16"}], "return": {"desc": "4 if left of sprite, 8 if right of sprite, 0 if out of range", "type": "u8"}}, {"desc": "Check Samus near sprite (above/below)", "label": "CheckSamusNearSprite_AboveBelow", "addr": {"J": "FE48", "U": "FE48", "E": "FEFC"}, "size": "68", "mode": "thumb", "params": [{"desc": "Y range", "type": "u16"}, {"desc": "X range", "type": "u16"}], "return": {"desc": "1 if above sprite, 2 if below sprite, 0 if out of range", "type": "u8"}}, {"desc": "Check Samus near sprite (front/behind X)", "label": "CheckSamusNearSprite_FrontBehindX", "addr": {"J": "FEB0", "U": "FEB0", "E": "FF64"}, "size": "B0", "mode": "thumb", "params": [{"desc": "Y range", "type": "u16"}, {"desc": "X range (front)", "type": "u16"}, {"desc": "X range (behind)", "type": "u16"}], "return": {"desc": "3 if in range in front, 0xC if in range behind, 0 if out of range", "type": "u8"}}, {"desc": "Samus standing on sprite", "label": "SamusStandingOnSprite", "addr": {"J": "FF60", "U": "FF60", "E": "10014"}, "size": "88", "mode": "thumb", "params": [{"desc": "Sprite data pointer", "type": "ptr.SpriteData"}], "return": null}, {"desc": "Update sprite freeze timer", "label": "UpdateSpriteFreezeTimer", "addr": {"J": "FFE8", "U": "FFE8", "E": "1009C"}, "size": "64", "mode": "thumb", "params": null, "return": null}, {"desc": "Sprite unfreeze animation easy mode", "label": "SpriteUnfreezeAnimation_EasyMode", "addr": {"J": "1004C", "U": "1004C", "E": "10100"}, "size": "58", "mode": "thumb", "params": null, "return": null}, {"desc": "Metroid unfreeze animation", "label": "MetroidUnfreezeAnimation", "addr": {"J": "100A4", "U": "100A4", "E": "10158"}, "size": "58", "mode": "thumb", "params": null, "return": null}, {"desc": "Update secondary sprite freeze timer", "label": "UpdateSecondarySpriteFreezeTimer", "addr": {"J": "100FC", "U": "100FC", "E": "101B0"}, "size": "9C", "mode": "thumb", "params": [{"desc": "Sprite ID", "type": "u8", "enum": "SecondarySpriteID"}, {"desc": "Primary RAM slot", "type": "u8"}], "return": null}, {"desc": "Update primary sprite freeze timer", "label": "UpdatePrimarySpriteFreezeTimer", "addr": {"J": "10198", "U": "10198", "E": "1024C"}, "size": "5C", "mode": "thumb", "params": null, "return": null}, {"desc": "Unfreeze secondary sprites (unused?)", "label": "UnfreezeSecondarySprites", "addr": {"J": "101F4", "U": "101F4", "E": "102A8"}, "size": "68", "mode": "thumb", "params": null, "return": null}, {"desc": "Refill energy", "label": "RefillEnergy", "addr": {"J": "1025C", "U": "1025C", "E": "10310"}, "size": "44", "mode": "thumb", "params": null, "return": {"desc": "Energy not full at start", "type": "bool"}}, {"desc": "Refill missiles", "label": "RefillMissiles", "addr": {"J": "102A0", "U": "102A0", "E": "10354"}, "size": "44", "mode": "thumb", "params": null, "return": {"desc": "Missiles not full at start", "type": "bool"}}, {"desc": "Refill super missiles", "label": "RefillSuperMissiles", "addr": {"J": "102E4", "U": "102E4", "E": "10398"}, "size": "44", "mode": "thumb", "params": null, "return": {"desc": "Super missiles not full at start", "type": "bool"}}, {"desc": "Refill power bombs", "label": "RefillPowerBombs", "addr": {"J": "10328", "U": "10328", "E": "103DC"}, "size": "44", "mode": "thumb", "params": null, "return": {"desc": "Power bombs not full at start", "type": "bool"}}, {"desc": "Check crouching or morphed", "label": "CheckCrouchingOrMorphed", "addr": {"J": "1036C", "U": "1036C", "E": "10420"}, "size": "110", "mode": "thumb", "params": null, "return": {"desc": "Crouching or morphed", "type": "bool"}}, {"desc": "Check crouching or crawling", "label": "CheckCrouchingOrCrawling", "addr": {"J": "1047C", "U": "1047C", "E": "10530"}, "size": "2C", "mode": "thumb", "params": null, "return": {"desc": "Crouching or crawling", "type": "bool"}}, {"desc": "Check morphed", "label": "CheckMorphed", "addr": {"J": "104A8", "U": "104A8", "E": "1055C"}, "size": "24", "mode": "thumb", "params": null, "return": {"desc": "Morphed", "type": "bool"}}, {"desc": "Check Samus pose pauses sprites", "label": "CheckSamusPosePausesSprites", "addr": {"J": "104CC", "U": "104CC", "E": "10580"}, "size": "2C", "mode": "thumb", "params": null, "return": {"desc": "Paused", "type": "bool"}}, {"desc": "Sprite take damage from Samus contact", "label": "SpriteTakeDamageFromSamusContact", "addr": {"J": "104F8", "U": "104F8", "E": "105AC"}, "size": "1B0", "mode": "thumb", "params": [{"desc": "Sprite data pointer", "type": "ptr.SpriteData"}, {"desc": "Samus data pointer", "type": "ptr.SamusData"}], "return": {"desc": "Damage contact type (0 = none, 1 = shinespark, 2 = speedbooster, 3 = screw attack, 4 = pseudo screw)", "type": "u8"}}, {"desc": "Check pulling self up", "label": "CheckPullingSelfUp", "addr": {"J": "106A8", "U": "106A8", "E": "1075C"}, "size": "20", "mode": "thumb", "params": null, "return": {"desc": "Pulling self up", "type": "bool"}}, {"desc": "Check on a zipline", "label": "CheckOnZipline", "addr": {"J": "106C8", "U": "106C8", "E": "1077C"}, "size": "20", "mode": "thumb", "params": null, "return": {"desc": "On a zipline", "type": "bool"}}, {"desc": "Count primary sprites", "label": "CountPrimarySprites", "addr": {"J": "106E8", "U": "106E8", "E": "1079C"}, "size": "50", "mode": "thumb", "params": [{"desc": "Sprite ID", "type": "u8", "enum": "PrimarySpriteID"}], "return": {"desc": "Primary sprite count", "type": "u8"}}, {"desc": "Count secondary sprites with current sprite's primary slot", "label": "CountSecondarySpritesWithCurrPrimarySlot", "addr": {"J": "10738", "U": "10738", "E": "107EC"}, "size": "60", "mode": "thumb", "params": [{"desc": "Sprite ID", "type": "u8", "enum": "SecondarySpriteID"}], "return": {"desc": "Secondary sprite count", "type": "u8"}}, {"desc": "Count primary sprites with current sprite's primary slot", "label": "CountPrimarySpritesWithCurrPrimarySlot", "addr": {"J": "10798", "U": "10798", "E": "1084C"}, "size": "60", "mode": "thumb", "params": [{"desc": "Sprite ID", "type": "u8", "enum": "PrimarySpriteID"}], "return": {"desc": "Primary sprite count", "type": "u8"}}, {"desc": "Find primary sprite", "label": "FindPrimarySprite", "addr": {"J": "107F8", "U": "107F8", "E": "108AC"}, "size": "58", "mode": "thumb", "params": [{"desc": "Sprite ID", "type": "u8", "enum": "PrimarySpriteID"}], "return": {"desc": "Sprite RAM slot, 0xFF otherwise", "type": "u8"}}, {"desc": "Find secondary sprite with part number", "label": "FindSecondarySpriteWithPartNumber", "addr": {"J": "10850", "U": "10850", "E": "10904"}, "size": "60", "mode": "thumb", "params": [{"desc": "Sprite ID", "type": "u8", "enum": "SecondarySpriteID"}, {"desc": "Part number", "type": "u8"}], "return": {"desc": "Sprite RAM slot, 0xFF otherwise", "type": "u8"}}, {"desc": "Check current enemy has drop", "label": "CheckCurrEnemyHasDrop", "addr": {"J": "108B0", "U": "108B0", "E": "10964"}, "size": "50", "mode": "thumb", "params": null, "return": {"desc": "Current enemy has drop", "type": "bool"}}, {"desc": "Count enemy drops", "label": "CountEnemyDrops", "addr": {"J": "10900", "U": "10900", "E": "109B4"}, "size": "44", "mode": "thumb", "params": null, "return": {"desc": "Enemy drop count", "type": "u8"}}, {"desc": "Move Mecha Ridley missile", "label": "MoveMechaRidleyMissile", "addr": {"J": "10944", "U": "10944", "E": "109F8"}, "size": "254", "mode": "thumb", "params": [{"desc": "Samus Y position", "type": "u16"}, {"desc": "Samus X position", "type": "u16"}, {"desc": "Missile Y speed", "type": "u8"}, {"desc": "Missile X speed", "type": "u8"}, {"desc": "Speed divisor", "type": "u8"}], "return": null}, {"desc": "Ridley fireball move", "label": "RidleyFireballMove", "addr": {"J": "10B98", "U": "10B98", "E": "10C4C"}, "size": "158", "mode": "thumb", "params": [{"desc": "Samus Y position", "type": "u16"}, {"desc": "Samus X position", "type": "u16"}, {"desc": "Y speed", "type": "u8"}, {"desc": "X speed", "type": "u8"}, {"desc": "Speed divisor", "type": "u8"}], "return": null}, {"desc": "Update sprite stun timer", "label": "UpdateSpriteStunTimer", "addr": {"J": "10CF0", "U": "10CF0", "E": "10DA4"}, "size": "78", "mode": "thumb", "params": [{"desc": "Sprite data pointer", "type": "ptr.SpriteData"}], "return": null}, {"desc": "Random sprite debris", "label": "RandomSpriteDebris", "addr": {"J": "10D68", "U": "10D68", "E": "10E1C"}, "size": "128", "mode": "thumb", "params": [{"desc": "Cloud type", "type": "u8", "enum": "DebrisCloudType"}, {"desc": "Number of debris", "type": "u8"}, {"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}], "return": null}, {"desc": "Get ammo drop sprite ID", "label": "GetAmmoDropSpriteID", "addr": {"J": "10E90", "U": "10E90", "E": "10F44"}, "size": "5C", "mode": "thumb", "params": null, "return": {"desc": "Ammo drop sprite ID, 0 otherwise", "type": "u8", "enum": "PrimarySpriteID"}}, {"desc": "Determine enemy drop sprite ID", "label": "DetermineEnemyDropSpriteID", "addr": {"J": "10EEC", "U": "10EEC", "E": "10FA0"}, "size": "198", "mode": "thumb", "params": null, "return": {"desc": "Enemy drop sprite ID, 0 otherwise", "type": "u8", "enum": "PrimarySpriteID"}}, {"desc": "Sprite death", "label": "SpriteDeath", "addr": {"J": "11084", "U": "11084", "E": "11138"}, "size": "1FC", "mode": "thumb", "params": [{"desc": "Death type (0 = normal, 1 = respawning, 2 = already has drop)", "type": "u8"}, {"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}, {"desc": "Play sound flag", "type": "bool"}, {"desc": "Particle effect", "type": "u8", "enum": "ParticleEffect"}], "return": null}, {"desc": "Is sprite stunned", "label": "IsSpriteStunned", "addr": {"J": "11280", "U": "11280", "E": "11334"}, "size": "48", "mode": "thumb", "params": null, "return": {"desc": "Sprite is stunned", "type": "bool"}}, {"desc": "Is sprite on-screen and shaking", "label": "IsSpriteOnScreenAndShaking", "addr": {"J": "112C8", "U": "112C8", "E": "1137C"}, "size": "38", "mode": "thumb", "params": null, "return": {"desc": "Sprite on-screen and screen shake is active", "type": "bool"}}, {"desc": "Update sub-sprite 1 animation", "label": "UpdateSubSprite1Animation", "addr": {"J": "11330", "U": "11330", "E": "113E4"}, "size": "3C", "mode": "thumb", "params": null, "return": null}, {"desc": "Sync current sprite position with sub-sprite 1 position", "label": "SyncCurrSpritePositionWithSubSprite1Position", "addr": {"J": "1136C", "U": "1136C", "E": "11420"}, "size": "44", "mode": "thumb", "params": null, "return": null}, {"desc": "Update sub-sprite 2 animation", "label": "UpdateSubSprite2Animation", "addr": {"J": "11410", "U": "11410", "E": "114C4"}, "size": "3C", "mode": "thumb", "params": null, "return": null}, {"desc": "Update sub-sprite animation", "label": "UpdateSubSpriteAnimation", "addr": {"J": "114AC", "U": "114AC", "E": "11560"}, "size": "38", "mode": "thumb", "params": [{"desc": "Sub-sprite data pointer", "type": "ptr.SubSpriteData"}], "return": null}, {"desc": "Sync current sprite position with sub-sprite position", "label": "SyncCurrSpritePositionWithSubSpritePosition", "addr": {"J": "114E4", "U": "114E4", "E": "11598"}, "size": "3C", "mode": "thumb", "params": [{"desc": "Sub-sprite data pointer", "type": "ptr.SubSpriteData"}], "return": null}, {"desc": "Sprite check overlapping with Samus", "label": "SpriteCheckOverlappingSamus", "addr": {"J": "1157C", "U": "1157C", "E": "11630"}, "size": "A4", "mode": "thumb", "params": null, "return": {"desc": "Overlapping", "type": "bool"}, "notes": "Calls CheckObjectsTouching to detect collision between the current sprite and Samus' draw distance offsets"}, {"desc": "Set sprite splash effect", "label": "SetSpriteSplashEffect", "addr": {"J": "11620", "U": "11620", "E": "116D4"}, "size": "AC", "mode": "thumb", "params": [{"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}, {"desc": "Splash size (0 = none, 1 = small, 2 = big, 3 = huge)", "type": "u8"}], "return": null}, {"desc": "Check sprite leaving liquid", "label": "CheckSpriteLeavingLiquid", "addr": {"J": "116CC", "U": "116CC", "E": "11780"}, "size": "4C", "mode": "thumb", "params": [{"desc": "Previous Y position", "type": "u16"}, {"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}, {"desc": "Splash size", "type": "u8"}], "return": {"desc": "Leaving liquid", "type": "bool"}}, {"desc": "Check sprite entering liquid", "label": "CheckSpriteEnteringLiquid", "addr": {"J": "11718", "U": "11718", "E": "117CC"}, "size": "44", "mode": "thumb", "params": [{"desc": "Previous Y position", "type": "u16"}, {"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}, {"desc": "Splash size", "type": "u8"}], "return": {"desc": "Entering liquid", "type": "bool"}}, {"desc": "Get number of items collected", "label": "GetNumOfItemsCollected", "addr": {"J": "1175C", "U": "1175C", "E": "11810"}, "size": "2C", "mode": "thumb", "params": null, "return": {"desc": "Number of items collected", "type": "u32"}}, {"desc": "Set debris splash effect", "label": "SetDebrisSplashEffect", "addr": {"J": "11788", "U": "11788", "E": "1183C"}, "size": "2C", "mode": "thumb", "params": [{"desc": "Previous Y position", "type": "u16"}, {"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}], "return": null}, {"desc": "Process sprite debris", "label": "ProcessSpriteDebris", "addr": {"J": "117B4", "U": "117B4", "E": "11868"}, "size": "4D4", "mode": "thumb", "params": [{"desc": "Debris data pointer", "type": "ptr.SpriteDebris"}], "return": null}, {"desc": "Update all sprite debris", "label": "UpdateAllSpriteDebris", "addr": {"J": "11C88", "U": "11C88", "E": "11D3C"}, "size": "6C", "mode": "thumb", "params": null, "return": null, "notes": "Loops through all sprite debris and calls Process sprite debris, also updates the animation related info"}, {"desc": "Draw sprite debris", "label": "DrawSpriteDebris", "addr": {"J": "11CF4", "U": "11CF4", "E": "11DA8"}, "size": "110", "mode": "thumb", "params": [{"desc": "Sprite debris pointer", "type": "ptr.SpriteDebris"}], "return": null}, {"desc": "Draw all sprite debris", "label": "DrawAllSpriteDebris", "addr": {"J": "11E04", "U": "11E04", "E": "11EB8"}, "size": "44", "mode": "thumb", "params": null, "return": null}, {"desc": "Initialize sprite debris", "label": "InitSpriteDebris", "addr": {"J": "11E48", "U": "11E48", "E": "11EFC"}, "size": "90", "mode": "thumb", "params": [{"desc": "Cloud type", "type": "u8"}, {"desc": "Debris type", "type": "u8", "enum": "SpriteDebrisType"}, {"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}], "return": null}, {"desc": "Get Brinstar room location text number", "label": "GetBrinstarLocationTextNum", "addr": {"J": "11ED8", "U": "11ED8", "E": "11F8C"}, "size": "B8", "mode": "thumb", "params": null, "return": {"desc": "Location text number, 0xFF otherwise", "type": "u8"}}, {"desc": "Get Kraid room location text number", "label": "GetKraidLocationTextNum", "addr": {"J": "11F90", "U": "11F90", "E": "12044"}, "size": "D0", "mode": "thumb", "params": null, "return": {"desc": "Location text number, 0xFF otherwise", "type": "u8"}}, {"desc": "Get Crateria room location text number", "label": "GetCrateriaLocationTextNum", "addr": {"J": "12060", "U": "12060", "E": "12114"}, "size": "7C", "mode": "thumb", "params": null, "return": {"desc": "Location text number, 0xFF otherwise", "type": "u8"}}, {"desc": "Get Norfair room location text number", "label": "GetNorfairLocationTextNum", "addr": {"J": "120DC", "U": "120DC", "E": "12190"}, "size": "E8", "mode": "thumb", "params": null, "return": {"desc": "Location text number, 0xFF otherwise", "type": "u8"}}, {"desc": "Get Ridley room location text number", "label": "GetRidleyLocationTextNum", "addr": {"J": "121C4", "U": "121C4", "E": "12278"}, "size": "98", "mode": "thumb", "params": null, "return": {"desc": "Location text number, 0xFF otherwise", "type": "u8"}}, {"desc": "Get Chozodia room location text number", "label": "GetChozodiaLocationTextNum", "addr": {"J": "1225C", "U": "1225C", "E": "12310"}, "size": "1A8", "mode": "thumb", "params": null, "return": {"desc": "Location text number, 0xFF otherwise", "type": "u8"}}, {"desc": "Get Tourian room location text number", "label": "GetTourianLocationTextNum", "addr": {"J": "12404", "U": "12404", "E": "124B8"}, "size": "80", "mode": "thumb", "params": null, "return": {"desc": "Location text number, 0xFF otherwise", "type": "u8"}}, {"desc": "Load area banner graphics", "label": "LoadAreaBannerGfx", "addr": {"J": "12484", "U": "12484", "E": "12538"}, "size": "58", "mode": "thumb", "params": null, "return": {"desc": "Graphics slot", "type": "u8"}}, {"desc": "Get location text graphics slot", "label": "GetLocationTextGfxSlot", "addr": {"J": "124DC", "U": "124DC", "E": "12590"}, "size": "10C", "mode": "thumb", "params": null, "return": {"desc": "Graphics slot", "type": "u8"}}, {"desc": "Chozo statue echo", "label": "ChozoStatueEcho", "addr": {"J": "125E8", "U": "125E8", "E": "1269C"}, "size": "160", "mode": "thumb", "params": [{"desc": "Stage", "type": "u8"}], "return": null}, {"desc": "Chozo statue movement AI", "label": "ChozoStatueMovement_AI", "addr": {"J": "12748", "U": "12748", "E": "127FC"}, "size": "38", "mode": "thumb", "params": null, "return": null}, {"desc": "Water drop initialize", "label": "WaterDropInit", "addr": {"J": "12780", "U": "12780", "E": "12834"}, "size": "2C", "mode": "thumb", "params": null, "return": null}, {"desc": "Water drop AI", "label": "WaterDrop_AI", "addr": {"J": "127AC", "U": "127AC", "E": "12860"}, "size": "288", "mode": "thumb", "params": null, "return": null}, {"desc": "Explosion (Zebes escape) AI", "label": "Explosion_ZebesEscape_AI", "addr": {"J": "12A34", "U": "12A34", "E": "12AE8"}, "size": "2E0", "mode": "thumb", "params": null, "return": null}, {"desc": "Enemy drop initialize", "label": "EnemyDropInit", "addr": {"J": "12D14", "U": "12D14", "E": "12DC8"}, "size": "184", "mode": "thumb", "params": null, "return": null}, {"desc": "Enemy drop collision handler", "label": "EnemyDropGet", "addr": {"J": "12E98", "U": "12E98", "E": "12F4C"}, "size": "158", "mode": "thumb", "params": null, "return": null}, {"desc": "Enemy drop AI", "label": "EnemyDrop_AI", "addr": {"J": "12FF0", "U": "12FF0", "E": "130A4"}, "size": "34", "mode": "thumb", "params": null, "return": null}, {"desc": "Unused primary sprite 0-10 AI", "label": "UnusedPrimarySprite_0_to_10_AI", "addr": {"J": "13024", "U": "13024", "E": "130D8"}, "size": "5C", "mode": "thumb", "params": null, "return": null}, {"desc": "Morph ball initialize", "label": "MorphBallInit", "addr": {"J": "13080", "U": "13080", "E": "13134"}, "size": "AC", "mode": "thumb", "params": null, "return": null}, {"desc": "Morph ball collision handler", "label": "MorphBallGet", "addr": {"J": "1312C", "U": "1312C", "E": "131E0"}, "size": "74", "mode": "thumb", "params": null, "return": null}, {"desc": "Morph ball flash animationation", "label": "MorphBallFlashAnimation", "addr": {"J": "131A0", "U": "131A0", "E": "13254"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the morph ball flashing animationation when Samus is grabbing it"}, {"desc": "Morph ball outside initialize", "label": "MorphBallOutsideInit", "addr": {"J": "131DC", "U": "131DC", "E": "13290"}, "size": "58", "mode": "thumb", "params": null, "return": null}, {"desc": "Morph ball outside animationation", "label": "MorphBallOutsideAnim", "addr": {"J": "13234", "U": "13234", "E": "132E8"}, "size": "3C", "mode": "thumb", "params": null, "return": null}, {"desc": "Morph ball AI", "label": "MorphBall_AI", "addr": {"J": "13270", "U": "13270", "E": "13324"}, "size": "38", "mode": "thumb", "params": null, "return": null}, {"desc": "Morph ball (outside) AI", "label": "MorphBall_Outside_AI", "addr": {"J": "132A8", "U": "132A8", "E": "1335C"}, "size": "2C", "mode": "thumb", "params": null, "return": null}, {"desc": "Power grip AI", "label": "PowerGrip_AI", "addr": {"J": "132D4", "U": "132D4", "E": "13388"}, "size": "13C", "mode": "thumb", "params": null, "return": null}, {"desc": "Power grip glow AI", "label": "PowerGripGlow_AI", "addr": {"J": "13410", "U": "13410", "E": "134C4"}, "size": "88", "mode": "thumb", "params": null, "return": null}, {"desc": "Charge beam initialize", "label": "ChargeBeamInit", "addr": {"J": "13498", "U": "13498", "E": "1354C"}, "size": "A4", "mode": "thumb", "params": null, "return": null}, {"desc": "Charge beam spawn glow", "label": "ChargeBeamSpawnGlow", "addr": {"J": "1353C", "U": "1353C", "E": "135F0"}, "size": "4C", "mode": "thumb", "params": null, "return": null}, {"desc": "Charge beam initialize graphics and Samus collision", "label": "ChargeBeamInitGfxAndCollision", "addr": {"J": "13588", "U": "13588", "E": "1363C"}, "size": "44", "mode": "thumb", "params": null, "return": null}, {"desc": "Charge beam collision handler", "label": "ChargeBeamGet", "addr": {"J": "135CC", "U": "135CC", "E": "13680"}, "size": "C8", "mode": "thumb", "params": null, "return": null}, {"desc": "Charge beam flashing animationation", "label": "ChargeBeamFlashingAnim", "addr": {"J": "13694", "U": "13694", "E": "13748"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Charge beam Handles the flashing animationation when Samus is grabbing it"}, {"desc": "Charge beam glow Initialize a sprite", "label": "ChargeBeamGlowInit", "addr": {"J": "136D8", "U": "136D8", "E": "1378C"}, "size": "64", "mode": "thumb", "params": null, "return": null}, {"desc": "Charge beam glow movement", "label": "ChargeBeamGlowMovement", "addr": {"J": "1373C", "U": "1373C", "E": "137F0"}, "size": "20", "mode": "thumb", "params": null, "return": null}, {"desc": "Charge beam AI", "label": "ChargeBeam_AI", "addr": {"J": "1375C", "U": "1375C", "E": "13810"}, "size": "D0", "mode": "thumb", "params": null, "return": null}, {"desc": "Charge beam glow AI", "label": "ChargeBeamGlow_AI", "addr": {"J": "1382C", "U": "1382C", "E": "138E0"}, "size": "24", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo Status sync body position", "label": "ChozoStatueSyncBodyPosition", "addr": {"J": "13850", "U": "13850", "E": "13904"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Synchronizes the Chozo statue body sprites position with the Chozo statue main sprite"}, {"desc": "Set Chozo statue event/equipment flags", "label": "SetChozoStatueEventAndEquipmentFlags", "addr": {"J": "138D8", "U": "138D8", "E": "1398C"}, "size": "30C", "mode": "thumb", "params": [{"desc": "Sprite ID", "type": "u8", "enum": "PrimarySpriteID"}], "return": null, "notes": "Sets event and equipment flags according to the statue's Sprite ID"}, {"desc": "Set Chozo statue direction", "label": "SetChozoStatueDirection", "addr": {"J": "13BE4", "U": "13BE4", "E": "13C98"}, "size": "1FC", "mode": "thumb", "params": null, "return": null}, {"desc": "Check Chozo item collected", "label": "CheckChozoItemCollected", "addr": {"J": "13DE0", "U": "13DE0", "E": "13E94"}, "size": "2BC", "mode": "thumb", "params": [{"desc": "Sprite ID", "type": "u8", "enum": "PrimarySpriteID"}], "return": {"desc": "Chozo statue behavior (0 = Item, 1 = Refill, 2 = Hint, 3 = Hint taken)", "type": "u8"}, "notes": "Checks for events/equipment flags to determine the behavior of a chozo statue"}, {"desc": "Chozo statue initialize", "label": "ChozoStatueInit", "addr": {"J": "1409C", "U": "1409C", "E": "14150"}, "size": "1F8", "mode": "thumb", "params": null, "return": null}, {"desc": "Call register statue item and update sprite", "label": "ChozoStatueRegisterItem", "addr": {"J": "14298", "U": "14298", "E": "1434C"}, "size": "64", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo statue hint flash", "label": "ChozoStatueHintFlashing", "addr": {"J": "142FC", "U": "142FC", "E": "143B0"}, "size": "BC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the flashing before displaying the minimap for a hint"}, {"desc": "Chozo statue hint end", "label": "ChozoStatueHintEnd", "addr": {"J": "143B8", "U": "143B8", "E": "1446C"}, "size": "40", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo statue sitting animationation", "label": "ChozoStatueHintSit", "addr": {"J": "143F8", "U": "143F8", "E": "144AC"}, "size": "4C", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo statue sitting animationation end", "label": "ChozoStatueHintSitFinish", "addr": {"J": "14444", "U": "14444", "E": "144F8"}, "size": "24", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo statue check Samus collecting item", "label": "ChozoStatueCheckCollectItem", "addr": {"J": "14468", "U": "14468", "E": "1451C"}, "size": "2C", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo statue before item banner spawns", "label": "ChozoStatueItemBeforeBanner", "addr": {"J": "14494", "U": "14494", "E": "14548"}, "size": "24", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo statue spawn refill sprite", "label": "ChozoStatueSpawnRefill", "addr": {"J": "144B8", "U": "144B8", "E": "1456C"}, "size": "48", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo statue refill flashing animationation", "label": "ChozoStatueRefillFlashingAnim", "addr": {"J": "14500", "U": "14500", "E": "145B4"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the Chozo statue flashing animationation when Samus is refilling"}, {"desc": "Chozo statue refill end", "label": "ChozoStatueRefillEnd", "addr": {"J": "1454C", "U": "1454C", "E": "14600"}, "size": "20", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo statue replay current room music", "label": "ChozoStatueReplayRoomMusic", "addr": {"J": "1456C", "U": "1456C", "E": "14620"}, "size": "58", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo statue body initialize", "label": "ChozoStatueBodyInit", "addr": {"J": "145C4", "U": "145C4", "E": "14678"}, "size": "174", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo statue body hand refill animationation", "label": "ChozoStatueBodyHandRefillAnim", "addr": {"J": "14738", "U": "14738", "E": "147EC"}, "size": "5C", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo statue body check grab Samus", "label": "ChozoStatueBodyGrabSamus", "addr": {"J": "14794", "U": "14794", "E": "14848"}, "size": "A0", "mode": "thumb", "params": null, "return": null, "notes": "Detects if Samus needs to be grabbed, if so sets Samus pose to grabbed by Chozo statue and updates Chozo statue graphics"}, {"desc": "Chozo statue body sync Samus position", "label": "ChozoStatueBodySyncSamusPosition", "addr": {"J": "14834", "U": "14834", "E": "148E8"}, "size": "30", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo statue body sync Samus position while sitting", "label": "ChozoStatueBodySyncSamusPositionWhileSitting", "addr": {"J": "14864", "U": "14864", "E": "14918"}, "size": "44", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo statue body sync Samus position after sitting", "label": "ChozoStatueBodySyncSamusPositionAfterSitting", "addr": {"J": "148A8", "U": "148A8", "E": "1495C"}, "size": "40", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo statue body detect Samus should be grabbed", "label": "ChozoStatueBodyDetectSamus", "addr": {"J": "148E8", "U": "148E8", "E": "1499C"}, "size": "FC", "mode": "thumb", "params": null, "return": null, "notes": "Detects if Samus needs to be grabbed, if so sets Samus pose to grabbed by Chozo statue and updates Chozo statue graphics"}, {"desc": "Chozo statue body refill Samus energy and weapons", "label": "ChozoStatueBodyRefill", "addr": {"J": "149E4", "U": "149E4", "E": "14A98"}, "size": "140", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo statue body empty function", "label": "ChozoStatueBody_Empty", "addr": {"J": "14B24", "U": "14B24", "E": "14BD8"}, "size": "4", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo statue body refill end", "label": "ChozoStatueBodyEndRefill", "addr": {"J": "14B28", "U": "14B28", "E": "14BDC"}, "size": "30", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo statue body release Samus", "label": "ChozoStatueBodyReleaseSamus", "addr": {"J": "14B58", "U": "14B58", "E": "14C0C"}, "size": "38", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo statue body initialize hint graphics", "label": "ChozoStatueBodyInitHintGfx", "addr": {"J": "14B90", "U": "14B90", "E": "14C44"}, "size": "20", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo statue body check eye fully opened", "label": "ChozoStatueBodyCheckEyeOpenedHint", "addr": {"J": "14BB0", "U": "14BB0", "E": "14C64"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the Chozo statue's eyes are fully opened at the beginning of a hint"}, {"desc": "Chozo Statue item banner spawns", "label": "ChozoStatueItemAfterBanner", "addr": {"J": "14BDC", "U": "14BDC", "E": "14C90"}, "size": "20", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo statue body check eye fully closed", "label": "ChozoStatueBodyCheckEyeClosedRefill", "addr": {"J": "14BFC", "U": "14BFC", "E": "14CB0"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the Chozo statue's eyes are fully closed after a refill"}, {"desc": "Chozo statue AI", "label": "ChozoStatue_AI", "addr": {"J": "14C70", "U": "14C70", "E": "14D24"}, "size": "148", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo statue body AI", "label": "ChozoStatueBody_AI", "addr": {"J": "14DB8", "U": "14DB8", "E": "14E6C"}, "size": "248", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo statue refill AI", "label": "ChozoStatueRefill_AI", "addr": {"J": "15000", "U": "15000", "E": "150B4"}, "size": "A8", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue synchronize body position", "label": "UnknownItemChozoStatueSyncBodyPosition", "addr": {"J": "150A8", "U": "150A8", "E": "1515C"}, "size": "88", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue body initialize", "label": "UnknownItemChozoStatueInit", "addr": {"J": "15130", "U": "15130", "E": "151E4"}, "size": "1F8", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue register item", "label": "UnknownItemChozoStatueRegisterItem", "addr": {"J": "1532C", "U": "1532C", "E": "153E0"}, "size": "50", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue hint flash (unused)", "label": "UnknownItemChozoStatueHintFlashing_Unused", "addr": {"J": "1537C", "U": "1537C", "E": "15430"}, "size": "BC", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue hint end (unused)", "label": "UnknownItemChozoItemEndHint_Unused", "addr": {"J": "15438", "U": "15438", "E": "154EC"}, "size": "40", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue hint sit (unused)", "label": "UnknownItemChozoStatueHintSit_Unused", "addr": {"J": "15478", "U": "15478", "E": "1552C"}, "size": "4C", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue hint sit finish (unused)", "label": "UnknownItemChozoStatueHintSitFinish_Unused", "addr": {"J": "154C4", "U": "154C4", "E": "15578"}, "size": "24", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue check Samus collecting item", "label": "UnknownItemChozoStatueCheckCollectItem", "addr": {"J": "154E8", "U": "154E8", "E": "1559C"}, "size": "2C", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue check item banner spawned", "label": "UnknownItemChozoStatueCheckItemBannerSpawned", "addr": {"J": "15514", "U": "15514", "E": "155C8"}, "size": "24", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue spawn refill sprite", "label": "UnknownItemChozoStatueSpawnRefill", "addr": {"J": "15538", "U": "15538", "E": "155EC"}, "size": "48", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue refill flashing animationation", "label": "UnknownItemChozoStatueRefillFlashingAnim", "addr": {"J": "15580", "U": "15580", "E": "15634"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the unknown item Chozo statue flashing animationation when Samus is refilling"}, {"desc": "Unknown item Chozo statue refill end", "label": "UnknownItemChozoStatueRefillEnd", "addr": {"J": "155CC", "U": "155CC", "E": "15680"}, "size": "20", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue replay room music", "label": "UnknownItemChozoStatueReplayRoomMusic", "addr": {"J": "155EC", "U": "155EC", "E": "156A0"}, "size": "58", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue body initialize", "label": "UnknownItemChozoStatueBodyInit", "addr": {"J": "15644", "U": "15644", "E": "156F8"}, "size": "174", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue body hand refill animationation", "label": "UnknownItemChozoStatueBodyHandRefillAnim", "addr": {"J": "157B8", "U": "157B8", "E": "1586C"}, "size": "5C", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue body grab Samus", "label": "UnknwonItemChozoStatueBodyGrabSamus", "addr": {"J": "15814", "U": "15814", "E": "158C8"}, "size": "A0", "mode": "thumb", "params": null, "return": null, "notes": "Detects if Samus needs to be grabbed, if so sets Samus pose to grabbed by Chozo statue and updates Chozo statue graphics"}, {"desc": "Unknown item Chozo statue body sync Samus position", "label": "UnknownItemChozoStatueBodySyncSamusPosition", "addr": {"J": "158B4", "U": "158B4", "E": "15968"}, "size": "30", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue body sync Samus position while sitting", "label": "UnknownItemChozoStatueBodySyncSamusPositionWhileSitting", "addr": {"J": "158E4", "U": "158E4", "E": "15998"}, "size": "44", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue body sync Samus position after sitting", "label": "UnknownItemChozoStatueBodySyncSamusPositionAfterSitting", "addr": {"J": "15928", "U": "15928", "E": "159DC"}, "size": "40", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue body detect Samus", "label": "UnknownItemChozoStatueBodyDetectSamus", "addr": {"J": "15968", "U": "15968", "E": "15A1C"}, "size": "FC", "mode": "thumb", "params": null, "return": null, "notes": "Detects if Samus needs to be grabbed, if so sets Samus pose to grabbed by Chozo statue and updates Chozo statue graphics"}, {"desc": "Unknown item Chozo statue body refill energy and weapons", "label": "UnknownItemChozoStatueBodyRefill", "addr": {"J": "15A64", "U": "15A64", "E": "15B18"}, "size": "140", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue body empty function", "label": "UnknownItemChozoStatueBody_Empty", "addr": {"J": "15BA4", "U": "15BA4", "E": "15C58"}, "size": "4", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue body refill end", "label": "UnknownItemChozoStatueBodyEndRefill", "addr": {"J": "15BA8", "U": "15BA8", "E": "15C5C"}, "size": "30", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue body release Samus", "label": "UnknownItemChozoStatueBodyReleaseSamus", "addr": {"J": "15BD8", "U": "15BD8", "E": "15C8C"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Releases Samus and updates Chozo statue graphics after a refill"}, {"desc": "Unknown item Chozo statue body initialize hint graphics (unused)", "label": "UnknownItemChozoStatueBodyInitHintGfx_Unused", "addr": {"J": "15C10", "U": "15C10", "E": "15CC4"}, "size": "20", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue body check eye fully open", "label": "UnknownItemChozoStatueBodyCheckEyeOpenedHint", "addr": {"J": "15C30", "U": "15C30", "E": "15CE4"}, "size": "2C", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue item after banner", "label": "UnknownItemChozoStatueItemAfterBanner", "addr": {"J": "15C5C", "U": "15C5C", "E": "15D10"}, "size": "20", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue body check eye fully closed", "label": "UnknownItemChozoStatueBodyCheckEyeClosedRefill", "addr": {"J": "15C7C", "U": "15C7C", "E": "15D30"}, "size": "2C", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue AI", "label": "UnknownItemChozoStatue_AI", "addr": {"J": "15CF0", "U": "15CF0", "E": "15DA4"}, "size": "148", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue body AI", "label": "UnknownItemChozoStatueBody_AI", "addr": {"J": "15E38", "U": "15E38", "E": "15EEC"}, "size": "248", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item Chozo statue refill AI", "label": "UnknownItemChozoStatueRefill_AI", "addr": {"J": "16080", "U": "16080", "E": "16134"}, "size": "A8", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo statue hint change current clipdata affecting action", "label": "ChozoStatueHintChangeClipAction", "addr": {"J": "16128", "U": "16128", "E": "161DC"}, "size": "104", "mode": "thumb", "params": [{"desc": "Clipdata Affecting Action 1", "type": "u8", "enum": "ClipdataAffectingAction"}, {"desc": "Clipdata Affecting Action 2", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Enable/Disable Chozo statue hitbox related to hint poses (standing and sitting)"}, {"desc": "Chozo statue sitting change current clipdata affecting action", "label": "ChozoStatueSittingChangeClipAction", "addr": {"J": "1622C", "U": "1622C", "E": "162E0"}, "size": "84", "mode": "thumb", "params": [{"desc": "Clipdata Affecting Action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Enable/Disable Chozo statue hitbox when sitting"}, {"desc": "Chozo ball spawn item banner", "label": "ChozoBallSpawnItemBanner", "addr": {"J": "162B0", "U": "162B0", "E": "16364"}, "size": "94", "mode": "thumb", "params": [{"desc": "Sprite ID", "type": "u8", "enum": "PrimarySpriteID"}], "return": null}, {"desc": "Chozo ball set OAM pointer", "label": "ChozoBallSetOamPtr", "addr": {"J": "16344", "U": "16344", "E": "163F8"}, "size": "64", "mode": "thumb", "params": [{"desc": "Sprite ID", "type": "u8", "enum": "PrimarySpriteID"}], "return": null}, {"desc": "Chozo ball revealed set OAM poitner", "label": "ChozoBallRevealedSetOamPtr", "addr": {"J": "163A8", "U": "163A8", "E": "1645C"}, "size": "64", "mode": "thumb", "params": [{"desc": "Sprite ID", "type": "u8", "enum": "PrimarySpriteID"}], "return": null}, {"desc": "Sets the OAM pointer of the Chozo ball depending on r0 when it's revealing", "label": "ChozoBallRevealingSetOamPtr", "addr": {"J": "1640C", "U": "1640C", "E": "164C0"}, "size": "64", "mode": "thumb", "params": [{"desc": "Sprite ID", "type": "u8", "enum": "PrimarySpriteID"}], "return": null}, {"desc": "Chozo ball initialize", "label": "ChozoBallInit", "addr": {"J": "16470", "U": "16470", "E": "16524"}, "size": "74", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo ball empty function", "label": "ChozoBall_Empty", "addr": {"J": "164E4", "U": "164E4", "E": "16598"}, "size": "4", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo ball revealed", "label": "ChozoBallRevealed", "addr": {"J": "164E8", "U": "164E8", "E": "1659C"}, "size": "70", "mode": "thumb", "params": null, "return": null, "notes": "Calls ChozoBallRevealedSetOamPtr and updates the sprite data"}, {"desc": "Chozo ball revealing animationation", "label": "ChozoBallRevealingAnim", "addr": {"J": "16558", "U": "16558", "E": "1660C"}, "size": "3C", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo ball register item", "label": "ChozoBallRegisterItem", "addr": {"J": "16594", "U": "16594", "E": "16648"}, "size": "6C", "mode": "thumb", "params": null, "return": null, "notes": "Registers the item grabbed and calls ChozoBallSpawnIemBanner"}, {"desc": "Chozo ball flash animationation", "label": "ChozoBallFlashAnimation", "addr": {"J": "16600", "U": "16600", "E": "166B4"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the morph ball flashing animationation when Samus is grabbing it"}, {"desc": "Chozo ball AI", "label": "ChozoBall_AI", "addr": {"J": "1663C", "U": "1663C", "E": "166F0"}, "size": "58", "mode": "thumb", "params": null, "return": null}, {"desc": "Zoomer check midair", "label": "ZoomerCheckMidair", "addr": {"J": "16694", "U": "16694", "E": "16748"}, "size": "94", "mode": "thumb", "params": null, "return": {"desc": "Midair", "type": "bool"}, "notes": "Checks if the zoomer is midair, used to see if it's still crawling on something and if it's colliding on ground when falling"}, {"desc": "Zoomer collision initialize", "label": "ZoomerCollisionInit", "addr": {"J": "16728", "U": "16728", "E": "167DC"}, "size": "80", "mode": "thumb", "params": null, "return": null}, {"desc": "Zoomer graphics initialize", "label": "ZoomerGfxInit", "addr": {"J": "167A8", "U": "167A8", "E": "1685C"}, "size": "30", "mode": "thumb", "params": null, "return": null}, {"desc": "Zoomer normal direction graphics initialize", "label": "ZoomerNormalDirectionGfxInit", "addr": {"J": "167D8", "U": "167D8", "E": "1688C"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a zoomer's graphics facing the normal direction (used when a zoomer is falling)"}, {"desc": "Zoomer initialize", "label": "ZoomerInit", "addr": {"J": "16808", "U": "16808", "E": "168BC"}, "size": "114", "mode": "thumb", "params": null, "return": null}, {"desc": "Zoomer call graphics initialize", "label": "ZoomerCallGfxInit", "addr": {"J": "1691C", "U": "1691C", "E": "169D0"}, "size": "18", "mode": "thumb", "params": null, "return": null}, {"desc": "Zoomer move", "label": "ZoomerMove", "addr": {"J": "16934", "U": "16934", "E": "169E8"}, "size": "3E8", "mode": "thumb", "params": null, "return": null}, {"desc": "Zoomer graphics rotation update", "label": "ZoomerGfxRotationUpdate", "addr": {"J": "16D1C", "U": "16D1C", "E": "16DD0"}, "size": "194", "mode": "thumb", "params": null, "return": null, "notes": "Updates the graphics of a zoomer while it's turning"}, {"desc": "Zoomer turning", "label": "ZoomerTurning", "addr": {"J": "16EB0", "U": "16EB0", "E": "16F64"}, "size": "1CC", "mode": "thumb", "params": null, "return": null, "notes": "Updates the position of a zoomer while it's turning"}, {"desc": "Zoomer (unused)", "label": "Zoomer_Unused", "addr": {"J": "1707C", "U": "1707C", "E": "17130"}, "size": "18", "mode": "thumb", "params": null, "return": null, "notes": "Calls ZoomerNormalDirectionGfxInit and sets pose to F, seems unused"}, {"desc": "Zoomer back on ground", "label": "ZoomerBackOnGround", "addr": {"J": "17094", "U": "17094", "E": "17148"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Handles a zoomer touching ground again after falling"}, {"desc": "Zoomer start falling", "label": "ZoomerStartFalling", "addr": {"J": "170C4", "U": "170C4", "E": "17178"}, "size": "68", "mode": "thumb", "params": null, "return": null}, {"desc": "Zoomer falling", "label": "ZoomerFalling", "addr": {"J": "1712C", "U": "1712C", "E": "171E0"}, "size": "84", "mode": "thumb", "params": null, "return": null}, {"desc": "Zoomer death", "label": "ZoomerDeath", "addr": {"J": "171B0", "U": "171B0", "E": "17264"}, "size": "5C", "mode": "thumb", "params": null, "return": null}, {"desc": "Zoomer AI", "label": "Zoomer_AI", "addr": {"J": "1720C", "U": "1720C", "E": "172C0"}, "size": "11C", "mode": "thumb", "params": null, "return": null}, {"desc": "Zeela spawn eyes", "label": "ZeelaSpawnEyes", "addr": {"J": "17328", "U": "17328", "E": "173DC"}, "size": "118", "mode": "thumb", "params": null, "return": null}, {"desc": "Zeela check midair", "label": "ZeelaCheckMidair", "addr": {"J": "17440", "U": "17440", "E": "174F4"}, "size": "B8", "mode": "thumb", "params": null, "return": {"desc": "Midair", "type": "bool"}, "notes": "Checks if the zeela is midair, used to see if it's still crawling on something and if it's colliding on ground when falling"}, {"desc": "Zeela hitbox initialize", "label": "ZeelaHitboxInit", "addr": {"J": "174F8", "U": "174F8", "E": "175AC"}, "size": "80", "mode": "thumb", "params": null, "return": null}, {"desc": "Zeela graphics initialize", "label": "ZeelaGfxInit", "addr": {"J": "17578", "U": "17578", "E": "1762C"}, "size": "48", "mode": "thumb", "params": null, "return": null}, {"desc": "Zeela normal direction graphics initialize", "label": "ZeelaNormalDirectionGfxInit", "addr": {"J": "175C0", "U": "175C0", "E": "17674"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a zeela's graphics facing the normal direction (used when a zeela is falling)"}, {"desc": "Zeela initialize", "label": "ZeelaInit", "addr": {"J": "175F0", "U": "175F0", "E": "176A4"}, "size": "128", "mode": "thumb", "params": null, "return": null}, {"desc": "Zeela call graphics initialize", "label": "ZeelaCallGfxInit", "addr": {"J": "17718", "U": "17718", "E": "177CC"}, "size": "18", "mode": "thumb", "params": null, "return": null}, {"desc": "Zeela move", "label": "ZeelaMove", "addr": {"J": "17730", "U": "17730", "E": "177E4"}, "size": "418", "mode": "thumb", "params": null, "return": null}, {"desc": "Zeela graphics rotation update", "label": "ZeelaGfxRotationUpdate", "addr": {"J": "17B48", "U": "17B48", "E": "17BFC"}, "size": "194", "mode": "thumb", "params": null, "return": null, "notes": "Updates the graphics of a zeela while it's turning"}, {"desc": "Zeela turning", "label": "ZeelaTurning", "addr": {"J": "17CDC", "U": "17CDC", "E": "17D90"}, "size": "1CC", "mode": "thumb", "params": null, "return": null, "notes": "Updates the position of a zeela while it's turning"}, {"desc": "Zeela (unused)", "label": "Zeela_Unused", "addr": {"J": "17EA8", "U": "17EA8", "E": "17F5C"}, "size": "18", "mode": "thumb", "params": null, "return": null, "notes": "Calls ZeelaNormalDirectionGfxInit and sets pose to F, seems unused"}, {"desc": "Zeela back on ground", "label": "ZeelaBackOnGround", "addr": {"J": "17EC0", "U": "17EC0", "E": "17F74"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Handles a zeela touching gorund again after falling"}, {"desc": "Zeela start falling", "label": "ZeelaStartFalling", "addr": {"J": "17EF8", "U": "17EF8", "E": "17FAC"}, "size": "68", "mode": "thumb", "params": null, "return": null}, {"desc": "Zeela falling", "label": "ZeelaFalling", "addr": {"J": "17F60", "U": "17F60", "E": "18014"}, "size": "88", "mode": "thumb", "params": null, "return": null}, {"desc": "Zeela death", "label": "ZeelaDeath", "addr": {"J": "17FE8", "U": "17FE8", "E": "1809C"}, "size": "6C", "mode": "thumb", "params": null, "return": null}, {"desc": "Zeela eyes initialize", "label": "ZeelaEyesInit", "addr": {"J": "18054", "U": "18054", "E": "18108"}, "size": "AC", "mode": "thumb", "params": null, "return": null}, {"desc": "Zeela eyes move", "label": "ZeelaEyesMove", "addr": {"J": "18100", "U": "18100", "E": "181B4"}, "size": "134", "mode": "thumb", "params": null, "return": null}, {"desc": "Zeela eyes ground collision", "label": "ZeelaEyesGroundCollision", "addr": {"J": "18234", "U": "18234", "E": "182E8"}, "size": "2C", "mode": "thumb", "params": null, "return": null}, {"desc": "Zeela eyes check explosion done", "label": "ZeelaEyesCheckExplosionDone", "addr": {"J": "18260", "U": "18260", "E": "18314"}, "size": "24", "mode": "thumb", "params": null, "return": null}, {"desc": "Zeela AI", "label": "Zeela_AI", "addr": {"J": "18284", "U": "18284", "E": "18338"}, "size": "11C", "mode": "thumb", "params": null, "return": null}, {"desc": "Zeela eyes AI", "label": "ZeelaEyes_AI", "addr": {"J": "183A0", "U": "183A0", "E": "18454"}, "size": "38", "mode": "thumb", "params": null, "return": null}, {"desc": "Kraid mouth determine spike position", "label": "KraidMouthDetermineSpikePosition", "addr": {"J": "183D8", "U": "183D8", "E": "1848C"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Determines the position of a spike Kraid is throwing depending on its room slot"}, {"desc": "Kraid check projectiles colliding with belly", "label": "KraidCheckProjectilesCollidingWithBelly", "addr": {"J": "18440", "U": "18440", "E": "184F4"}, "size": "1AC", "mode": "thumb", "params": null, "return": null, "notes": "Checks if any projectile is colliding with Kraid's belly, if so spaws appropriate particle effect, 2 random sprite debris, starts an horizontal screen shake and destroys the projectile"}, {"desc": "Kraid open close routine and projectile collision", "label": "KraidOpenCloseRoutineAndProjectileCollision", "addr": {"J": "185EC", "U": "185EC", "E": "186A0"}, "size": "470", "mode": "thumb", "params": null, "return": null, "notes": "Handles the opening/closing of the mouth and the projectile collision damage and bouncing off"}, {"desc": "Kraid random sprite debris on ceiling", "label": "KraidRandomSpriteDebrisOnCeiling", "addr": {"J": "18A5C", "U": "18A5C", "E": "18B10"}, "size": "1A0", "mode": "thumb", "params": [{"desc": "Timer 2 of current sprite", "type": "u8"}], "return": null, "notes": "Spawns random sprite debris on the ceiling when Kraid appears/dies"}, {"desc": "Kraid mouth update arm idle hitbox", "label": "KraidMouthUpdateArmIdleHitbox", "addr": {"J": "18C18", "U": "18C18", "E": "18CCC"}, "size": "11C", "mode": "thumb", "params": null, "return": null, "notes": "Updates the arm hitbox depending on the current animationation frame when it's idle"}, {"desc": "Kraid mouth update arm attacking hitbox", "label": "KraidMouthUpdateArmAttackingHitbox", "addr": {"J": "18D34", "U": "18D34", "E": "18DE8"}, "size": "154", "mode": "thumb", "params": null, "return": null, "notes": "Updates the arm hitbox depending on the current animationation frame when it's attacking"}, {"desc": "Kraid mouth update left arm idle hitbox", "label": "KraidMouthUpdateLeftArmIdleHitbox", "addr": {"J": "18EB0", "U": "18EB0", "E": "18F64"}, "size": "11C", "mode": "thumb", "params": null, "return": null, "notes": "Updates the left arm hitbox depending on the current animationation frame when it's idle"}, {"desc": "Kraid mouth update left arm attacking hitbox", "label": "KraidMouthUpdateLeftArmAttackingHitbox", "addr": {"J": "19104", "U": "19104", "E": "191B8"}, "size": "22C", "mode": "thumb", "params": null, "return": null, "notes": "Updates the left arm hitbox depending on the current animationation frame when it's throwing nails"}, {"desc": "Kraid initialize", "label": "KraidInit", "addr": {"J": "19370", "U": "19370", "E": "19424"}, "size": "22C", "mode": "thumb", "params": null, "return": null}, {"desc": "Kraid is fully up", "label": "KraidIsFullyUp", "addr": {"J": "1959C", "U": "1959C", "E": "19650"}, "size": "50", "mode": "thumb", "params": null, "return": {"desc": "Fully up", "type": "bool"}, "notes": "Checks if Kraid has finished going up at the beginning of the fight calls KraidRandomSpriteDebrisOnCeiling"}, {"desc": "Kraid go up", "label": "KraidGoUp", "addr": {"J": "195EC", "U": "195EC", "E": "196A0"}, "size": "54", "mode": "thumb", "params": null, "return": null, "notes": "Makes Kraid go up at the beginning of the fight"}, {"desc": "Kraid check fully up", "label": "KraidCheckFullyUp", "addr": {"J": "19640", "U": "19640", "E": "196F4"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if Kraid is fully up"}, {"desc": "Kraid move feet", "label": "KraidMoveFeet", "addr": {"J": "1966C", "U": "1966C", "E": "19720"}, "size": "1A4", "mode": "thumb", "params": null, "return": {"desc": "Movement stage", "type": "u8"}}, {"desc": "Kraid start moving feet same direction as position", "label": "KraidStartMovingFeetSameDirectionAsPosition", "addr": {"J": "19810", "U": "19810", "E": "198C4"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Starts the feet movement (left foot to the left, right foot to the right)"}, {"desc": "Kraid feet movement same direction as position update", "label": "KraidFeetMovementSameDirectionAsPositionUpdate", "addr": {"J": "19854", "U": "19854", "E": "19908"}, "size": "E0", "mode": "thumb", "params": null, "return": null, "notes": "Updates the feet movement (same direction as position)"}, {"desc": "Kraid move feet to opposite direction as position", "label": "KraidMoveFeetToOppositeDirectionAsPosition", "addr": {"J": "19934", "U": "19934", "E": "199E8"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Starts the feet movement (left foot to the right, right foot to the left)"}, {"desc": "Kraid feet movement oppsite direction as position update", "label": "KraidFeetMovementOppsiteDirectionAsPositionUpdate", "addr": {"J": "19978", "U": "19978", "E": "19A2C"}, "size": "E0", "mode": "thumb", "params": null, "return": null, "notes": "Updates the feet movement (opposite direction as position)"}, {"desc": "Kraid end two steps", "label": "KraidEndTwoSteps", "addr": {"J": "19A58", "U": "19A58", "E": "19B0C"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Called after Kraid takes two steps (when he doesn't stop in the middle while moving horizontally)"}, {"desc": "Kraid before start moving feet same direction as position", "label": "KraidBeforeStartMovingFeetSameDirectionAsPosition", "addr": {"J": "19A7C", "U": "19A7C", "E": "19B30"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Called before KraidStartMovingFeetSameDirectionAsPosition"}, {"desc": "Kraid after moving feet same direction as position", "label": "KraidAfterMovingFeetSameDirectionAsPosition", "addr": {"J": "19AB4", "U": "19AB4", "E": "19B68"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Called once after the feet movement (same direction as position) is done"}, {"desc": "Kraid before start moving feet opposite direction as position", "label": "KraidBeforeStartMovingFeetOppositeDirectionAsPosition", "addr": {"J": "19AD8", "U": "19AD8", "E": "19B8C"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Called before KraidStartMovingFeetOppositeDirectionAsPosition"}, {"desc": "Kraid prevent Samus going through", "label": "KraidPreventSamusGoingThrough", "addr": {"J": "19B10", "U": "19B10", "E": "19BC4"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Prevents Samus from going through Kraid when he is dying"}, {"desc": "Kraid death", "label": "KraidDeath", "addr": {"J": "19B34", "U": "19B34", "E": "19BE8"}, "size": "B0", "mode": "thumb", "params": null, "return": null, "notes": "Sets the Kraid killed event and updates the minimap"}, {"desc": "Kraid dying", "label": "KraidDying", "addr": {"J": "19BE4", "U": "19BE4", "E": "19C98"}, "size": "160", "mode": "thumb", "params": null, "return": null, "notes": "Calls KraidPreventSamusGoingThrough, KraidRandomSpriteDebrisOnCeiling, starts screen shake, sets particle effects and plays the Kraid statue opening cutscene"}, {"desc": "Kraid before death", "label": "KraidBeforeDeath", "addr": {"J": "19D44", "U": "19D44", "E": "19DF8"}, "size": "184", "mode": "thumb", "params": null, "return": null, "notes": "Called when Kraid is stationary when dying, saves the in game time at Kraid and spawns a bunch of particle effects"}, {"desc": "Kraid mouth initialize", "label": "KraidMouthInit", "addr": {"J": "19EC8", "U": "19EC8", "E": "19F7C"}, "size": "360", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a Kraid mouth sprite depending on the room slot"}, {"desc": "Kraid mouth throw nails", "label": "KraidMouthThrowNails", "addr": {"J": "1A228", "U": "1A228", "E": "1A2DC"}, "size": "E8", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the nails should spawn, if so spawns 2 Kraid nail secondary sprite"}, {"desc": "Kraid mouth check Samus near", "label": "KraidMouthCheckSamusNear", "addr": {"J": "1A310", "U": "1A310", "E": "1A3C4"}, "size": "D4", "mode": "thumb", "params": null, "return": null, "notes": "Checks if Samus is near enough for the hand attack"}, {"desc": "Kraid mouth call Kraid check prokectiles colliding with belly", "label": "KraidMouthCallKraidCheckProkectilesCollidingWithBelly", "addr": {"J": "1A3E4", "U": "1A3E4", "E": "1A498"}, "size": "C", "mode": "thumb", "params": null, "return": null, "notes": "Calls KraidCheckProjectilesCollidingWithBelly"}, {"desc": "Kraid mouth check should spawn spikes", "label": "KraidMouthCheckShouldSpawnSpikes", "addr": {"J": "1A3F0", "U": "1A3F0", "E": "1A4A4"}, "size": "11C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if spikes should spawn"}, {"desc": "Kraid mouth spawn spike", "label": "KraidMouthSpawnSpike", "addr": {"J": "1A50C", "U": "1A50C", "E": "1A5C0"}, "size": "8C", "mode": "thumb", "params": null, "return": null, "notes": "Spawns a Kraid spike secondary sprite"}, {"desc": "Kraid mouth arm movement dying", "label": "KraidMouthArmMovementDying", "addr": {"J": "1A648", "U": "1A648", "E": "1A6FC"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the arms when Kraid is dying"}, {"desc": "Kraid mouth arm movement dying stationary", "label": "KraidMouthArmMovementDyingStationary", "addr": {"J": "1A6C8", "U": "1A6C8", "E": "1A77C"}, "size": "188", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the arms when Kraid is dying and stationary"}, {"desc": "Kraid nail movement", "label": "KraidNailMovement", "addr": {"J": "1A850", "U": "1A850", "E": "1A904"}, "size": "1EC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of a Kraid nail"}, {"desc": "Kraid AI", "label": "Kraid_AI", "addr": {"J": "1AA3C", "U": "1AA3C", "E": "1AAF0"}, "size": "474", "mode": "thumb", "params": null, "return": null}, {"desc": "Kraid mouth AI", "label": "KraidMouth_AI", "addr": {"J": "1AEB0", "U": "1AEB0", "E": "1AF64"}, "size": "198", "mode": "thumb", "params": null, "return": null}, {"desc": "Kraid spike AI", "label": "KraidSpike_AI", "addr": {"J": "1B048", "U": "1B048", "E": "1B0FC"}, "size": "4AC", "mode": "thumb", "params": null, "return": null}, {"desc": "Kraid nail AI", "label": "KraidNail_AI", "addr": {"J": "1B4F4", "U": "1B4F4", "E": "1B5A8"}, "size": "1C4", "mode": "thumb", "params": null, "return": null}, {"desc": "Item banner initialize", "label": "ItemBannerInit", "addr": {"J": "1B6B8", "U": "1B6B8", "E": "1B76C"}, "size": "110", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an item banner sprite"}, {"desc": "Item banner graphics initialize", "label": "ItemBannerGfxInit", "addr": {"J": "1B7C8", "U": "1B7C8", "E": "1B87C"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Loads the item banner graphics and sets the PreventMovementTimer to 3e8"}, {"desc": "Item banner pop up", "label": "ItemBannerPopUp", "addr": {"J": "1B824", "U": "1B824", "E": "1B8D8"}, "size": "184", "mode": "thumb", "params": null, "return": null, "notes": "Handles the pop up animationaion of an item banner, alos spawns the save yes no cursor secondary sprite if necessary"}, {"desc": "Item banner static", "label": "ItemBannerStatic", "addr": {"J": "1B9A8", "U": "1B9A8", "E": "1BA5C"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Handles the part when the item banner is static (checks for input)"}, {"desc": "Item banner removal", "label": "ItemBannerRemoval", "addr": {"J": "1BA10", "U": "1BA10", "E": "1BAC4"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Called once at the beginning of the removal animationation, calls FinishCollectingTank if Samus is collecting a tank"}, {"desc": "Item banner removal animationation", "label": "ItemBannerRemovalAnimation", "addr": {"J": "1BA60", "U": "1BA60", "E": "1BB14"}, "size": "B4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the removal animationation, spawns a falling Chozo pillar primary sprite if the item banner is the fully powered suit one"}, {"desc": "Item banner AI", "label": "ItemBanner_AI", "addr": {"J": "1BB14", "U": "1BB14", "E": "1BBC8"}, "size": "E8", "mode": "thumb", "params": null, "return": null}, {"desc": "Save yes/no cursor AI", "label": "SaveYesNoCursor_AI", "addr": {"J": "1BBFC", "U": "1BBFC", "E": "1BCB0"}, "size": "190", "mode": "thumb", "params": null, "return": null}, {"desc": "Ripper initialize", "label": "RipperInit", "addr": {"J": "1BD8C", "U": "1BD8C", "E": "1BE40"}, "size": "70", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a ripper sprite"}, {"desc": "Ripper graphics initialize", "label": "RipperGfxInit", "addr": {"J": "1BDFC", "U": "1BDFC", "E": "1BEB0"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a ripper graphics"}, {"desc": "Ripper move", "label": "RipperMove", "addr": {"J": "1BE1C", "U": "1BE1C", "E": "1BED0"}, "size": "6C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of a ripper"}, {"desc": "Ripper turn around graphics initialize", "label": "RipperTurnAroundGfxInit", "addr": {"J": "1BE88", "U": "1BE88", "E": "1BF3C"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Updates the graphics of a ripper when it's turning around"}, {"desc": "Ripper turn around begin", "label": "RipperTurnAroundBegin", "addr": {"J": "1BEA8", "U": "1BEA8", "E": "1BF5C"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Handles the first half of a ripper turning around, updates the status and the graphics"}, {"desc": "Ripper check turned around", "label": "RipperCheckTurnedAround", "addr": {"J": "1BEE0", "U": "1BEE0", "E": "1BF94"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the ripper has finished turning around, if so resumes normal behavior"}, {"desc": "Ripper AI", "label": "Ripper_AI", "addr": {"J": "1BEFC", "U": "1BEFC", "E": "1BFB0"}, "size": "DC", "mode": "thumb", "params": null, "return": null}, {"desc": "Ripper2 initialize", "label": "Ripper2Init", "addr": {"J": "1BFD8", "U": "1BFD8", "E": "1C08C"}, "size": "7C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a ripper 2 sprite"}, {"desc": "Ripper2 graphics initialize", "label": "Ripper2GfxInit", "addr": {"J": "1C054", "U": "1C054", "E": "1C108"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a ripper 2 graphics"}, {"desc": "Ripper2 move", "label": "Ripper2Move", "addr": {"J": "1C074", "U": "1C074", "E": "1C128"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of a ripper 2"}, {"desc": "Ripper2 turn around graphics initialize", "label": "Ripper2TurnAroundGfxInit", "addr": {"J": "1C0D4", "U": "1C0D4", "E": "1C188"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Called once before a ripper 2 turns around"}, {"desc": "Ripper2 turn around begin", "label": "Ripper2TurnAroundBegin", "addr": {"J": "1C10C", "U": "1C10C", "E": "1C1C0"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Handles the first half of a ripper 2 turning around, updates the status and the graphics"}, {"desc": "Ripper2 check turned around", "label": "Ripper2CheckTurnedAround", "addr": {"J": "1C144", "U": "1C144", "E": "1C1F8"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the ripper 2 has finished turning around, if so resumes normal behavior"}, {"desc": "Ripper II AI", "label": "RipperII_AI", "addr": {"J": "1C160", "U": "1C160", "E": "1C214"}, "size": "D8", "mode": "thumb", "params": null, "return": null}, {"desc": "Zeb initialize", "label": "ZebInit", "addr": {"J": "1C238", "U": "1C238", "E": "1C2EC"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a zeb sprite"}, {"desc": "Zeb graphics initialize", "label": "ZebGfxInit", "addr": {"J": "1C298", "U": "1C298", "E": "1C34C"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a zeb graphics"}, {"desc": "Zeb check spawn", "label": "ZebCheckSpawn", "addr": {"J": "1C2D4", "U": "1C2D4", "E": "1C388"}, "size": "98", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the zeb has no drop and if Samus is in range to determine if it should spawn"}, {"desc": "Zeb going up", "label": "ZebGoingUp", "addr": {"J": "1C36C", "U": "1C36C", "E": "1C420"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Handles a zeb going up after spawning"}, {"desc": "Zeb reset", "label": "ZebReset", "addr": {"J": "1C3EC", "U": "1C3EC", "E": "1C4A0"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Resets a zeb sprite after it dies or when it's out of range"}, {"desc": "Zeb move", "label": "ZebMove", "addr": {"J": "1C444", "U": "1C444", "E": "1C4F8"}, "size": "C8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of a zeb"}, {"desc": "Zeb AI", "label": "Zeb_AI", "addr": {"J": "1C50C", "U": "1C50C", "E": "1C5C0"}, "size": "138", "mode": "thumb", "params": null, "return": null}, {"desc": "Skree initialize", "label": "SkreeInit", "addr": {"J": "1C644", "U": "1C644", "E": "1C6F8"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a skree sprite"}, {"desc": "Skree graphics initialize", "label": "SkreeGfxInit", "addr": {"J": "1C694", "U": "1C694", "E": "1C748"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a skree graphics"}, {"desc": "Skree detect Samus", "label": "SkreeDetectSamus", "addr": {"J": "1C6B0", "U": "1C6B0", "E": "1C764"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Detects if Samus is in range of the skree"}, {"desc": "Skree spin graphics initialize", "label": "SkreeSpinGfxInit", "addr": {"J": "1C700", "U": "1C700", "E": "1C7B4"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the spinning animationation of the skree"}, {"desc": "Skree check spin ended", "label": "SkreeCheckSpinEnded", "addr": {"J": "1C71C", "U": "1C71C", "E": "1C7D0"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the skree finished spinning"}, {"desc": "Skree start going down", "label": "SkreeStartGoingDown", "addr": {"J": "1C738", "U": "1C738", "E": "1C7EC"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Called once before the skree starts going down, sets the facing direction and updates graphics"}, {"desc": "Skree go down", "label": "SkreeGoDown", "addr": {"J": "1C7A0", "U": "1C7A0", "E": "1C854"}, "size": "FC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of a skree that goes down, both vertically and horizontally"}, {"desc": "Skree crash ground", "label": "SkreeCrashGround", "addr": {"J": "1C89C", "U": "1C89C", "E": "1C950"}, "size": "128", "mode": "thumb", "params": null, "return": null, "notes": "Initialize 4 sprite debris and spawns 4 skree explosion/blue skree explosion secondary sprites"}, {"desc": "Skree explosion initialize", "label": "SkreeExplosionInit", "addr": {"J": "1C9C4", "U": "1C9C4", "E": "1CA78"}, "size": "B4", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a skree explosion sprite"}, {"desc": "Skree explosion move", "label": "SkreeExplosionMove", "addr": {"J": "1CA78", "U": "1CA78", "E": "1CB2C"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of a skree explosion sprite"}, {"desc": "Skree AI", "label": "Skree_AI", "addr": {"J": "1CAE0", "U": "1CAE0", "E": "1CB94"}, "size": "194", "mode": "thumb", "params": null, "return": null}, {"desc": "Skree explosion AI", "label": "SkreeExplosion_AI", "addr": {"J": "1CC74", "U": "1CC74", "E": "1CD28"}, "size": "24", "mode": "thumb", "params": null, "return": null}, {"desc": "Reo initialize", "label": "ReoInit", "addr": {"J": "1CC98", "U": "1CC98", "E": "1CD4C"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a reo sprite"}, {"desc": "Reo RNG", "label": "ReoRNG", "addr": {"J": "1CD20", "U": "1CD20", "E": "1CDD4"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Called once after the initialization, sets 2 unknown values of the sprite data to a random number based on the sprite random number"}, {"desc": "Reo Samus detection", "label": "ReoSamusDetection", "addr": {"J": "1CD44", "U": "1CD44", "E": "1CDF8"}, "size": "84", "mode": "thumb", "params": null, "return": null, "notes": "Checks if Samus is in range and handles idle animationation"}, {"desc": "Reo Samus detected", "label": "ReoSamusDetected", "addr": {"J": "1CDC8", "U": "1CDC8", "E": "1CE7C"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Makes reo face Samus and initialize movement related data"}, {"desc": "Reo move", "label": "ReoMove", "addr": {"J": "1CE50", "U": "1CE50", "E": "1CF04"}, "size": "394", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of a reo"}, {"desc": "Reo AI", "label": "Reo_AI", "addr": {"J": "1D1E4", "U": "1D1E4", "E": "1D298"}, "size": "134", "mode": "thumb", "params": null, "return": null}, {"desc": "Zipline check colliding", "label": "ZiplineCheckColliding", "addr": {"J": "1D318", "U": "1D318", "E": "1D3CC"}, "size": "8C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the zipline is colliding with a solid block on both sides"}, {"desc": "Zipline moving", "label": "ZiplineMoving", "addr": {"J": "1D3A4", "U": "1D3A4", "E": "1D458"}, "size": {"J": "C8", "U": "C8", "E": "E0"}, "mode": "thumb", "params": null, "return": {"desc": "Releasing Samus", "type": "bool"}, "notes": "Handles the movement of a zipline"}, {"desc": "Zipline graphics update", "label": "ZiplineGfxUpdate", "addr": {"J": "1D46C", "U": "1D46C", "E": "1D538"}, "size": "1DC", "mode": "thumb", "params": null, "return": null, "notes": "Updates the graphics of a zipline (checks if Samus is on it, if releasing, if activated and the timers)"}, {"desc": "Zipline initialize", "label": "ZiplineInit", "addr": {"J": "1D648", "U": "1D648", "E": "1D714"}, "size": "A4", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a zipline sprite"}, {"desc": "Zipline update", "label": "ZiplineUpdate", "addr": {"J": "1D6EC", "U": "1D6EC", "E": "1D7B8"}, "size": "84", "mode": "thumb", "params": null, "return": null, "notes": "Updates the zipline, calls ZiplineGFXUpdate and ZiplineMoving"}, {"desc": "Zipline button initialize", "label": "ZiplineButton_Init", "addr": {"J": "1D770", "U": "1D770", "E": "1D83C"}, "size": "98", "mode": "thumb", "params": null, "return": null}, {"desc": "Zipline button activated graphics initialize", "label": "ZiplineButtonActivatedGfxInit", "addr": {"J": "1D808", "U": "1D808", "E": "1D8D4"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for an activated zipline button"}, {"desc": "Zipline button spawn", "label": "ZiplineButtonSpawn", "addr": {"J": "1D828", "U": "1D828", "E": "1D8F4"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if there's a zipline sprite in the current room and if ziplines are activated sets data accordingly"}, {"desc": "Zipline button check ziplines activated", "label": "ZiplineButtonCheckZiplinesActivated", "addr": {"J": "1D874", "U": "1D874", "E": "1D940"}, "size": "18", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the ziplines are activated (called each frame if the ziplines aren't activated when ZiplineButtonSpawn is called)"}, {"desc": "Zipline button idle", "label": "ZiplineButtonIdle", "addr": {"J": "1D88C", "U": "1D88C", "E": "1D958"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Handles the idle animationation"}, {"desc": "Zipline button zipline moving", "label": "ZiplineButtonZiplineMoving", "addr": {"J": "1D904", "U": "1D904", "E": "1D9D0"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Called when the zipline is moving"}, {"desc": "Zipline AI", "label": "Zipline_AI", "addr": {"J": "1D92C", "U": "1D92C", "E": "1D9F8"}, "size": "28", "mode": "thumb", "params": null, "return": null}, {"desc": "Zipline button AI", "label": "ZiplineButton_AI", "addr": {"J": "1D954", "U": "1D954", "E": "1DA20"}, "size": "D0", "mode": "thumb", "params": null, "return": null}, {"desc": "Sova check midair", "label": "SovaCheckMidair", "addr": {"J": "1DA24", "U": "1DA24", "E": "1DAF0"}, "size": "B8", "mode": "thumb", "params": null, "return": {"desc": "Midair", "type": "bool"}, "notes": "Checks if the sova is midair, used to see if it's still crawling on something and if it's colliding on ground when falling"}, {"desc": "Sova hitbox update", "label": "SovaHitboxUpdate", "addr": {"J": "1DADC", "U": "1DADC", "E": "1DBA8"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Updates the hitbox of the sova (called in SovaInit and when turning around)"}, {"desc": "Sova graphics update", "label": "SovaGfxUpdate", "addr": {"J": "1DB5C", "U": "1DB5C", "E": "1DC28"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Updates the graphics of a sova"}, {"desc": "Sova initialize", "label": "SovaInit", "addr": {"J": "1DBD4", "U": "1DBD4", "E": "1DCA0"}, "size": "150", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a sova sprite"}, {"desc": "Sova graphics initialize", "label": "SovaGfxInit", "addr": {"J": "1DD24", "U": "1DD24", "E": "1DDF0"}, "size": "18", "mode": "thumb", "params": null, "return": null, "notes": "Calls SovaGFXUpdate, is called once after SovaInit"}, {"desc": "Sova move", "label": "SovaMove", "addr": {"J": "1DD3C", "U": "1DD3C", "E": "1DE08"}, "size": "4B0", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the sova"}, {"desc": "Sova turning around graphics update", "label": "SovaTurningAroundGfxUpdate", "addr": {"J": "1E1EC", "U": "1E1EC", "E": "1E2B8"}, "size": "194", "mode": "thumb", "params": null, "return": null, "notes": "Updates the graphics of the sova when it's turning around"}, {"desc": "Sova turning around", "label": "SovaTurningAround", "addr": {"J": "1E380", "U": "1E380", "E": "1E44C"}, "size": "1F0", "mode": "thumb", "params": null, "return": null, "notes": "Handles the sova turning around, calls SovaTurningAroundGFXUpdate, SovaHitboxUpdate and updates the sprite data (direction facing and position)"}, {"desc": "Sova back on ground", "label": "SovaBackOnGround", "addr": {"J": "1E570", "U": "1E570", "E": "1E63C"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Handles the sova touching gorund again after falling"}, {"desc": "Sova check back on ground animation ended", "label": "SovaCheckBackOnGroundAnimEnded", "addr": {"J": "1E5B4", "U": "1E5B4", "E": "1E680"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the back on ground animation ended"}, {"desc": "Sova start falling", "label": "SovaStartFalling", "addr": {"J": "1E5E4", "U": "1E5E4", "E": "1E6B0"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Updates the X and Y position of the sova, calls SovaHitboxUpdate and updates graphics in order to prepare it to fall"}, {"desc": "Sova falling", "label": "SovaFalling", "addr": {"J": "1E65C", "U": "1E65C", "E": "1E728"}, "size": "7C", "mode": "thumb", "params": null, "return": null, "notes": "Handles a sova falling"}, {"desc": "Sova death", "label": "SovaDeath", "addr": {"J": "1E6D8", "U": "1E6D8", "E": "1E7A4"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Handles the death of a sova, calls SpriteDeath"}, {"desc": "Sova AI", "label": "Sova_AI", "addr": {"J": "1E738", "U": "1E738", "E": "1E804"}, "size": "11C", "mode": "thumb", "params": null, "return": null}, {"desc": "Multiviola initialize", "label": "MultiviolaInit", "addr": {"J": "1E854", "U": "1E854", "E": "1E920"}, "size": "70", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a multiviola sprite"}, {"desc": "Multiviola move", "label": "MultiviolaMove", "addr": {"J": "1E8C4", "U": "1E8C4", "E": "1E990"}, "size": "108", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of a multiviola"}, {"desc": "Unused multiviola empty 1", "label": "UnusedMultiviola_Empty1", "addr": {"J": "1E9CC", "U": "1E9CC", "E": "1EA98"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "Empty function (very likely related to the unused multiviola sprite)"}, {"desc": "Unused multiviola empty 2", "label": "UnusedMultiviola_Empty2", "addr": {"J": "1E9D0", "U": "1E9D0", "E": "1EA9C"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "Empty function (very likely related to the unused multiviola sprite)"}, {"desc": "Multiviola AI", "label": "Multiviola_AI", "addr": {"J": "1E9D4", "U": "1E9D4", "E": "1EAA0"}, "size": "90", "mode": "thumb", "params": null, "return": null}, {"desc": "Unused Multiviola sprite AI", "label": "UnusedMultiviolaSprite_AI", "addr": {"J": "1EA64", "U": "1EA64", "E": "1EB30"}, "size": "4", "mode": "thumb", "params": null, "return": null}, {"desc": "Geruta Y movement", "label": "GerutaYMovement", "addr": {"J": "1EA68", "U": "1EA68", "E": "1EB34"}, "size": "B0", "mode": "thumb", "params": [{"desc": "Y movement", "type": "u16"}], "return": {"desc": "Bouncing", "type": "bool"}, "notes": "Handles the Y movement of the geruta"}, {"desc": "Geruta X movement", "label": "GerutaXMovement", "addr": {"J": "1EB18", "U": "1EB18", "E": "1EBE4"}, "size": "74", "mode": "thumb", "params": [{"desc": "X movement", "type": "u16"}], "return": {"desc": "Bouncing", "type": "bool"}, "notes": "Handles the X movement of the geruta"}, {"desc": "Geruta initialize", "label": "GerutaInit", "addr": {"J": "1EB8C", "U": "1EB8C", "E": "1EC58"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a geruta sprite"}, {"desc": "Geruta graphics initialize", "label": "GerutaGfxInit", "addr": {"J": "1EC0C", "U": "1EC0C", "E": "1ECD8"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics of a geruta"}, {"desc": "Geruta detect Samus", "label": "GerutaDetectSamus", "addr": {"J": "1EC2C", "U": "1EC2C", "E": "1ECF8"}, "size": "6C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if Samus is in range"}, {"desc": "Geruta go down graphics initialize", "label": "GerutaGoDownGfxInit", "addr": {"J": "1EC98", "U": "1EC98", "E": "1ED64"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Updates the graphics of a geruta for when he goes down"}, {"desc": "Geruta check warning ended", "label": "GerutaCheckWarningEnded", "addr": {"J": "1ECCC", "U": "1ECCC", "E": "1ED98"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the warning animationation has ended"}, {"desc": "Geruta check going down animation ended", "label": "GerutaCheckGoingDownAnimEnded", "addr": {"J": "1ECF8", "U": "1ECF8", "E": "1EDC4"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the second warning animationation has ended"}, {"desc": "Geruta going down", "label": "GerutaGoingDown", "addr": {"J": "1ED48", "U": "1ED48", "E": "1EE14"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Handles the geruta going down"}, {"desc": "Geruta check bouncing animation ended", "label": "GerutaCheckBouncingAnimEnded", "addr": {"J": "1ED8C", "U": "1ED8C", "E": "1EE58"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the bouncing animationation has ended"}, {"desc": "Geruta going up", "label": "GerutaGoingUp", "addr": {"J": "1EDD4", "U": "1EDD4", "E": "1EEA0"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Handles the geruta going up"}, {"desc": "Geruta check reset animation ended", "label": "GerutaCheckResetAnimEnded", "addr": {"J": "1EE1C", "U": "1EE1C", "E": "1EEE8"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the resetting animationation (when the geruta hits the ceiling after moving) has ended"}, {"desc": "Geruta AI", "label": "Geruta_AI", "addr": {"J": "1EE38", "U": "1EE38", "E": "1EF04"}, "size": "1BC", "mode": "thumb", "params": null, "return": null}, {"desc": "Squeept graphics reset", "label": "SqueeptGfxReset", "addr": {"J": "1EFF4", "U": "1EFF4", "E": "1F0C0"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Resets the graphics related infos of the squeept"}, {"desc": "Squeept turning around graphics initialize", "label": "SqueeptTurningAroundGfxInit", "addr": {"J": "1F018", "U": "1F018", "E": "1F0E4"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for when the squeept turns around"}, {"desc": "Squeept going down graphics initialize", "label": "SqueeptGoingDownGfxInit", "addr": {"J": "1F03C", "U": "1F03C", "E": "1F108"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for when the squeept goes down"}, {"desc": "Squeept initialize", "label": "SqueeptInit", "addr": {"J": "1F05C", "U": "1F05C", "E": "1F128"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a squeept sprite"}, {"desc": "Squeept reset", "label": "SqueeptReset", "addr": {"J": "1F0A8", "U": "1F0A8", "E": "1F174"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Resets the squeept when he touches the ground"}, {"desc": "Squeept detect Samus", "label": "SqueeptDetectSamus", "addr": {"J": "1F0D0", "U": "1F0D0", "E": "1F19C"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Checks if Samus is in range"}, {"desc": "Squeept go up", "label": "SqueeptGoUp", "addr": {"J": "1F120", "U": "1F120", "E": "1F1EC"}, "size": "BC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the squeept going up"}, {"desc": "Squeept turn around", "label": "SqueeptTurnAround", "addr": {"J": "1F1DC", "U": "1F1DC", "E": "1F2A8"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the turning around animationation ended"}, {"desc": "Squeept go down", "label": "SqueeptGoDown", "addr": {"J": "1F204", "U": "1F204", "E": "1F2D0"}, "size": "84", "mode": "thumb", "params": null, "return": null, "notes": "Handles the squeept going down"}, {"desc": "Squeept AI", "label": "Squeept_AI", "addr": {"J": "1F288", "U": "1F288", "E": "1F354"}, "size": "194", "mode": "thumb", "params": null, "return": null}, {"desc": "Map station initialize", "label": "MapStationInit", "addr": {"J": "1F41C", "U": "1F41C", "E": "1F4E8"}, "size": "F0", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a map station sprite"}, {"desc": "Map station Samus detection", "label": "MapStationSamusDetection", "addr": {"J": "1F50C", "U": "1F50C", "E": "1F5D8"}, "size": "98", "mode": "thumb", "params": null, "return": null, "notes": "Checks if Samus is in range"}, {"desc": "Map station check grabbing Samus animation ended", "label": "MapStationCheckGrabbingSamusAnimEnded", "addr": {"J": "1F5A4", "U": "1F5A4", "E": "1F670"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the grabbing animationation has ended"}, {"desc": "Map station downloading animation", "label": "MapStationDownloadingAnim", "addr": {"J": "1F5E0", "U": "1F5E0", "E": "1F6AC"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the downloading animationation"}, {"desc": "Map station spawn message", "label": "MapStationSpawnMessage", "addr": {"J": "1F62C", "U": "1F62C", "E": "1F6F8"}, "size": "B4", "mode": "thumb", "params": null, "return": null, "notes": "Determines what message banner should be spawned depending on the current area"}, {"desc": "Map station after download", "label": "MapStationAfterDownload", "addr": {"J": "1F6E0", "U": "1F6E0", "E": "1F7AC"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Called once after the map is downloaded"}, {"desc": "Map station before retraction", "label": "MapStationBeforeRetraction", "addr": {"J": "1F718", "U": "1F718", "E": "1F7E4"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Delay before the map retracts"}, {"desc": "Map station retraction", "label": "MapStationRetraction", "addr": {"J": "1F73C", "U": "1F73C", "E": "1F808"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Retracts the map station"}, {"desc": "Map station AI", "label": "MapStation_AI", "addr": {"J": "1F770", "U": "1F770", "E": "1F83C"}, "size": "114", "mode": "thumb", "params": null, "return": null}, {"desc": "Map station screen AI", "label": "MapStationScreen_AI", "addr": {"J": "1F884", "U": "1F884", "E": "1F950"}, "size": "12C", "mode": "thumb", "params": null, "return": null}, {"desc": "Save platform detect Samus", "label": "SavePlatformDetectSamus", "addr": {"J": "1F9B0", "U": "1F9B0", "E": "1FA7C"}, "size": "38", "mode": "thumb", "params": null, "return": {"desc": "Colliding", "type": "bool"}, "notes": "Detecs if Samus is on the save platform (used in both save platform AI)"}, {"desc": "Save platform initialize", "label": "SavePlatformInit", "addr": {"J": "1F9E8", "U": "1F9E8", "E": "1FAB4"}, "size": "128", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a map platform sprite"}, {"desc": "Save platform Samus detection", "label": "SavePlatformSamusDetection", "addr": {"J": "1FB10", "U": "1FB10", "E": "1FBDC"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Detects if Samus is on the save platform (calls SavePlatformDetectSamus and checks if morphed/crouching)"}, {"desc": "Save platform check opening animation ended", "label": "SavePlatformCheckOpeningAnimEnded", "addr": {"J": "1FB68", "U": "1FB68", "E": "1FC34"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the opening animationation has ended"}, {"desc": "Save platform second Samus detection", "label": "SavePlatformSecondSamusDetection", "addr": {"J": "1FB94", "U": "1FB94", "E": "1FC60"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Re-Detects if Samus in on the save platform after the opening animationation"}, {"desc": "Save plaform check closing animation ended", "label": "SavePlaformCheckClosingAnimEnded", "addr": {"J": "1FC14", "U": "1FC14", "E": "1FCE0"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the closing animationation has ended"}, {"desc": "Save platform release Samus", "label": "SavePlatformReleaseSamus", "addr": {"J": "1FC44", "U": "1FC44", "E": "1FD10"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Releases Samus (sets pose to facing the foreground)"}, {"desc": "Save platform Samus detection out", "label": "SavePlatformSamusDetectionOut", "addr": {"J": "1FC78", "U": "1FC78", "E": "1FD44"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Detects if Samus is out of the platform after being released"}, {"desc": "Save platform spawn sprites", "label": "SavePlatformSpawnSprites", "addr": {"J": "1FCB0", "U": "1FCB0", "E": "1FD7C"}, "size": "D0", "mode": "thumb", "params": null, "return": null, "notes": "Spawns the save platform top and an item banner"}, {"desc": "Save platform flashing animation", "label": "SavePlatformFlashingAnim", "addr": {"J": "1FD80", "U": "1FD80", "E": "1FE4C"}, "size": "40", "mode": "thumb", "params": null, "return": null, "notes": "Handles the flashing animationation when saving"}, {"desc": "Save platform flashing animation end", "label": "SavePlatformFlashingAnimEnd", "addr": {"J": "1FDC0", "U": "1FDC0", "E": "1FE8C"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Ends the flahsing animationation"}, {"desc": "Save platform text timer", "label": "SavePlatformTextTimer", "addr": {"J": "1FE04", "U": "1FE04", "E": "1FED0"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Timer before displaying the \"save complete\" banner"}, {"desc": "Save platform check message banner out", "label": "SavePlatformCheckMessageBannerOut", "addr": {"J": "1FE48", "U": "1FE48", "E": "1FF14"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the banner is going out (if A is pressed)"}, {"desc": "Save platform message banner disappearing timer", "label": "SavePlatformMessageBannerDisappearingTimer", "addr": {"J": "1FE80", "U": "1FE80", "E": "1FF4C"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Timer when the message banner is disappearing"}, {"desc": "Save platform top initialize", "label": "SavePlatformTopInit", "addr": {"J": "1FEA4", "U": "1FEA4", "E": "1FF70"}, "size": "16C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a save platform top sprite"}, {"desc": "Save platform top (empty)", "label": "SavePlatformTop_Empty", "addr": {"J": "20010", "U": "20010", "E": "200DC"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "Empty function"}, {"desc": "Save platform top extend graphics initialize", "label": "SavePlatformTopExtendGfxInit", "addr": {"J": "20014", "U": "20014", "E": "200E0"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the top extending down"}, {"desc": "Save platform top check extending ended", "label": "SavePlatformTopCheckExtendingEnded", "addr": {"J": "20030", "U": "20030", "E": "200FC"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the extending animationation has ended"}, {"desc": "Save platform top retract graphics initialize", "label": "SavePlatformTopRetractGfxInit", "addr": {"J": "2005C", "U": "2005C", "E": "20128"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the top retracting"}, {"desc": "Save platform top check retracting ended", "label": "SavePlatformTopCheckRetractingEnded", "addr": {"J": "20090", "U": "20090", "E": "2015C"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the retracting animationation has ended"}, {"desc": "Save platform top check tube animation spawn ended", "label": "SavePlatformTopCheckTubeAnimSpawnEnded", "addr": {"J": "200BC", "U": "200BC", "E": "20188"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the tube spawning animationation has ended"}, {"desc": "Save platform top check spawn big light", "label": "SavePlatformTopCheckSpawnBigLight", "addr": {"J": "2010C", "U": "2010C", "E": "201D8"}, "size": "54", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the big light should spawn"}, {"desc": "Save platform top check tube animation ended", "label": "SavePlatformTopCheckTubeAnimEnded", "addr": {"J": "20160", "U": "20160", "E": "2022C"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the tube animationation has ended"}, {"desc": "Save platform top check tube animation despawn ended", "label": "SavePlatformTopCheckTubeAnimDespawnEnded", "addr": {"J": "20190", "U": "20190", "E": "2025C"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the tube despawning animationation has ended"}, {"desc": "Save station top check tube around animation ended", "label": "SaveStationTopCheckTubeAroundAnimEnded", "addr": {"J": "201CC", "U": "201CC", "E": "20298"}, "size": "18", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the tube around animationation has ended (quick beam going to the center at the beginning)"}, {"desc": "Save station top tube down up animation", "label": "SaveStationTopTubeDownUpAnim", "addr": {"J": "201E4", "U": "201E4", "E": "202B0"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Handles the down up tube animationation (thing going from ground to top)"}, {"desc": "Save platform AI", "label": "SavePlatform_AI", "addr": {"J": "20228", "U": "20228", "E": "202F4"}, "size": "1A8", "mode": "thumb", "params": null, "return": null}, {"desc": "Save platform top AI", "label": "SavePlatformTop_AI", "addr": {"J": "203D0", "U": "203D0", "E": "2049C"}, "size": "194", "mode": "thumb", "params": null, "return": null}, {"desc": "Dragon Y movement", "label": "DragonYMovement", "addr": {"J": "20564", "U": "20564", "E": "20630"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Handles the Y movement of the dragon"}, {"desc": "Dragon initialize", "label": "DragonInit", "addr": {"J": "205B4", "U": "205B4", "E": "20680"}, "size": "74", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a dragon sprite"}, {"desc": "Dragon graphics initialize", "label": "DragonGfxInit", "addr": {"J": "20628", "U": "20628", "E": "206F4"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the dragon graphics"}, {"desc": "Dragon go up", "label": "DragonGoUp", "addr": {"J": "20650", "U": "20650", "E": "2071C"}, "size": "D0", "mode": "thumb", "params": null, "return": null, "notes": "Handles the dragon going up"}, {"desc": "Dragon turning around graphics initialize", "label": "DragonTurningAroundGfxInit", "addr": {"J": "20720", "U": "20720", "E": "207EC"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics when the dragon if turning around"}, {"desc": "Dragon check turning around first half animation ended", "label": "DragonCheckTurningAroundFirstHalfAnimEnded", "addr": {"J": "20740", "U": "20740", "E": "2080C"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the first half of the turning around animationation ended"}, {"desc": "Dragon check turning around second half animation ended", "label": "DragonCheckTurningAroundSecondHalfAnimEnded", "addr": {"J": "20778", "U": "20778", "E": "20844"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the second half of the turning around animationation ended"}, {"desc": "Dragon spitting graphics initialize", "label": "DragonSpittingGfxInit", "addr": {"J": "20798", "U": "20798", "E": "20864"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics when the dragon if firing"}, {"desc": "Dragon spitting animation", "label": "DragonSpittingAnim", "addr": {"J": "207C0", "U": "207C0", "E": "2088C"}, "size": "40", "mode": "thumb", "params": null, "return": null, "notes": "Handles the spitting animationation"}, {"desc": "Dragon spawn fireball", "label": "DragonSpawnFireball", "addr": {"J": "20800", "U": "20800", "E": "208CC"}, "size": "70", "mode": "thumb", "params": null, "return": null, "notes": "Spawns a dragon fireball secondary sprite"}, {"desc": "Dragon fireball initialize", "label": "DragonFireballInit", "addr": {"J": "20870", "U": "20870", "E": "2093C"}, "size": "E4", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a dragon fireball sprite"}, {"desc": "Dragon fireball move", "label": "DragonFireballMove", "addr": {"J": "20954", "U": "20954", "E": "20A20"}, "size": "D4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the dragon fireball"}, {"desc": "Dragon fireball exploding graphics initialize", "label": "DragonFireballExplodingGfxInit", "addr": {"J": "20A28", "U": "20A28", "E": "20AF4"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics when the fireball is exploding"}, {"desc": "Dragon fireball check exploding animation ended", "label": "DragonFireballCheckExplodingAnimEnded", "addr": {"J": "20A64", "U": "20A64", "E": "20B30"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the exploding animationation has ended"}, {"desc": "Dragon AI", "label": "Dragon_AI", "addr": {"J": "20A88", "U": "20A88", "E": "20B54"}, "size": "19C", "mode": "thumb", "params": null, "return": null}, {"desc": "Dragon fireball AI", "label": "DragonFireball_AI", "addr": {"J": "20C24", "U": "20C24", "E": "20CF0"}, "size": "58", "mode": "thumb", "params": null, "return": null}, {"desc": "Deorem left change current clipdata action", "label": "DeoremLeftChangeClipAction", "addr": {"J": "20C7C", "U": "20C7C", "E": "20D48"}, "size": "84", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Used to place solid clipdata on the left part of Deorem to prevent damage boosting and to remove this solid clipdata when he dies"}, {"desc": "Deorem right change current clipdata action", "label": "DeoremRightChangeClipAction", "addr": {"J": "20D00", "U": "20D00", "E": "20DCC"}, "size": "90", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Same as above but for the right side"}, {"desc": "Deorem random sprite debris", "label": "DeoremRandomSpriteDebris", "addr": {"J": "20E64", "U": "20E64", "E": "20F30"}, "size": "11C", "mode": "thumb", "params": [{"desc": "Random number (either Timer1 or 8 bit frame counter)", "type": "u8"}], "return": null, "notes": "Handles the spawning of random sprite debris before the fight"}, {"desc": "Deorem sprite debris spawn", "label": "DeoremSpriteDebrisSpawn", "addr": {"J": "20F80", "U": "20F80", "E": "2104C"}, "size": "A8", "mode": "thumb", "params": [{"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}, {"desc": "Timer", "type": "u8"}], "return": null, "notes": "Handles the spawning of sprite debris when Deorem appears"}, {"desc": "Deorem check leaving", "label": "DeoremCheckLeaving", "addr": {"J": "21028", "U": "21028", "E": "210F4"}, "size": "6C", "mode": "thumb", "params": [{"desc": "RAM Slot", "type": "u8"}], "return": {"desc": "Leaving", "type": "bool"}, "notes": "Checks if Deorem is leaving"}, {"desc": "Deorem spawn charge beam", "label": "DeoremSpawnChargeBeam", "addr": {"J": "21094", "U": "21094", "E": "21160"}, "size": "40", "mode": "thumb", "params": [{"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}], "return": null, "notes": "Charge beam Spawns the primary sprite and loads its graphics/palette"}, {"desc": "Deorem set eye opening timer", "label": "DeoremSetEyeOpeningTimer", "addr": {"J": "210D4", "U": "210D4", "E": "211A0"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Sets the timer for how long the eye stays open depending on the difficulty"}, {"desc": "Deorem call spawn charge beam", "label": "DeoremCallSpawnChargeBeam", "addr": {"J": "21110", "U": "21110", "E": "211DC"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Calls DeoremSpawnChargeBeam and sets status to 0"}, {"desc": "Deorem initialize", "label": "DeoremInit", "addr": {"J": "2113C", "U": "2113C", "E": "21208"}, "size": "128", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a Deorem sprite"}, {"desc": "Deorem spawn going down", "label": "DeoremSpawnGoingDown", "addr": {"J": "21264", "U": "21264", "E": "21330"}, "size": "1B8", "mode": "thumb", "params": null, "return": null, "notes": "Checks if it should spawn (Samus detection and if Samus have missiles) spawns the first half of the body (6 Deorem segments) and locks the screen"}, {"desc": "Deorem spawn going down animation", "label": "DeoremSpawnGoingDownAnim", "addr": {"J": "2141C", "U": "2141C", "E": "214E8"}, "size": "F4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement, the sound/music and calls DeoremSpiteDebrisSpawn"}, {"desc": "Deorem spawn going up", "label": "DeoremSpawnGoingUp", "addr": {"J": "21510", "U": "21510", "E": "215DC"}, "size": "D0", "mode": "thumb", "params": null, "return": null, "notes": "Spawns 6 others Deorem segments"}, {"desc": "Deorem spawn going up animation", "label": "DeoremSpawnGoingUpAnim", "addr": {"J": "215E0", "U": "215E0", "E": "216AC"}, "size": "E0", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement and calls DeoremSpiteDebrisSpawn"}, {"desc": "Deorem spawn head body", "label": "DeoremSpawnHeadBody", "addr": {"J": "216C0", "U": "216C0", "E": "2178C"}, "size": "114", "mode": "thumb", "params": null, "return": null, "notes": "Spawns the hidden part of the body (above the head) and the Deorem eye secondary sprite"}, {"desc": "Deorem after spawn", "label": "DeoremAfterSpawn", "addr": {"J": "217D4", "U": "217D4", "E": "218A0"}, "size": "AC", "mode": "thumb", "params": null, "return": null, "notes": "Called after the function above, sets the timer for how long the first eye will open"}, {"desc": "Deorem retracting", "label": "DeoremRetracting", "addr": {"J": "21B04", "U": "21B04", "E": "21BD0"}, "size": "16C", "mode": "thumb", "params": null, "return": null, "notes": "Handles Deorem retracting after going down to attack"}, {"desc": "Deorem throwing thorns", "label": "DeoremThrowingThorns", "addr": {"J": "21C70", "U": "21C70", "E": "21D3C"}, "size": "F4", "mode": "thumb", "params": null, "return": null, "notes": "Handles Deorem throwing thorns (doesn't handle the thorn throwing, juste the idle state)"}, {"desc": "Deorem after thorns", "label": "DeoremAfterThorns", "addr": {"J": "21D64", "U": "21D64", "E": "21E30"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Called after the last thorn is thrown and before it hits the ground"}, {"desc": "Deorem dying", "label": "DeoremDying", "addr": {"J": "21DB0", "U": "21DB0", "E": "21E7C"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Called once when Deorem dies, sets events according to first or second location"}, {"desc": "Deorem dying going down", "label": "DeoremDyingGoingDown", "addr": {"J": "21E28", "U": "21E28", "E": "21EF4"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Handles Deorem going down when dying"}, {"desc": "Deorem death", "label": "DeoremDeath", "addr": {"J": "21E74", "U": "21E74", "E": "21F40"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Calls SpriteDeath"}, {"desc": "Deorem check leaving to ceiling animation ended", "label": "DeoremCheckLeavingToCeilingAnimEnded", "addr": {"J": "21EAC", "U": "21EAC", "E": "21F78"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the leaving to the ceiling animationation has ended"}, {"desc": "Deorem leaving", "label": "DeoremLeaving", "addr": {"J": "21F0C", "U": "21F0C", "E": "21FD8"}, "size": "180", "mode": "thumb", "params": null, "return": null, "notes": "Spawns 3 new Deorem segments and clears/set the events"}, {"desc": "Deorem leaving animation", "label": "DeoremLeavingAnim", "addr": {"J": "2208C", "U": "2208C", "E": "22158"}, "size": "64", "mode": "thumb", "params": null, "return": null, "notes": "Calls DeoremRandomSpriteDebris, starts a vertical screen shake and handles the movement"}, {"desc": "Deorem leaving in ground debris", "label": "DeoremLeavingInGroundDebris", "addr": {"J": "220F0", "U": "220F0", "E": "221BC"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Calls DeoremRandomSpriteDebris, starts a vertical screen shake is called when Deorem is leaving and he has its head on the ground"}, {"desc": "Deorem segment initialize", "label": "DeoremSegmentInit", "addr": {"J": "22140", "U": "22140", "E": "2220C"}, "size": "21C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a Deorem segment sprite"}, {"desc": "Deorem segment spawn going down", "label": "DeoremSegmentSpawnGoingDown", "addr": {"J": "2235C", "U": "2235C", "E": "22428"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement when Deorem is spawning and going down"}, {"desc": "Deorem segment spawn going down after", "label": "DeoremSegmentSpawnGoingDownAfter", "addr": {"J": "223EC", "U": "223EC", "E": "224B8"}, "size": "C8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement when Deorem is spawning, going down and the other side has started spawning"}, {"desc": "Deorem segment spawn going up", "label": "DeoremSegmentSpawnGoingUp", "addr": {"J": "224B4", "U": "224B4", "E": "22580"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement when Deorem is spawning and going up"}, {"desc": "Deorem segment spawn going up after", "label": "DeoremSegmentSpawnGoingUpAfter", "addr": {"J": "22544", "U": "22544", "E": "22610"}, "size": "C8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement when Deorem is spawning, going up and the current side has finished spawning"}, {"desc": "Deorem segment right idle animation", "label": "DeoremSegmentRightIdleAnim", "addr": {"J": "2260C", "U": "2260C", "E": "226D8"}, "size": "144", "mode": "thumb", "params": null, "return": null, "notes": "Handles the idle animationation and the thorn throwing of the segments on the right side"}, {"desc": "Deorem segment left idle animation", "label": "DeoremSegmentLeftIdleAnim", "addr": {"J": "22750", "U": "22750", "E": "2281C"}, "size": "144", "mode": "thumb", "params": null, "return": null, "notes": "Handles the idle animationation and the thorn throwing of the segments on the left side"}, {"desc": "Deorem segment going down", "label": "DeoremSegmentGoingDown", "addr": {"J": "22894", "U": "22894", "E": "22960"}, "size": "8C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the segments going down when Deorem is going down"}, {"desc": "Deorem segment going up", "label": "DeoremSegmentGoingUp", "addr": {"J": "22920", "U": "22920", "E": "229EC"}, "size": "8C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the segments going up when Deorem is going down"}, {"desc": "Deorem segment above head movement", "label": "DeoremSegmentAboveHeadMovement", "addr": {"J": "229AC", "U": "229AC", "E": "22A78"}, "size": "B4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement for the segments above the head"}, {"desc": "Deorem segment left leaving", "label": "DeoremSegmentLeftLeaving", "addr": {"J": "22A60", "U": "22A60", "E": "22B2C"}, "size": "B4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the left side leaving"}, {"desc": "Deorem segment left leaving end", "label": "DeoremSegmentLeftLeavingEnd", "addr": {"J": "22B14", "U": "22B14", "E": "22BE0"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Handles the end of the left side leaving, sets status to 0"}, {"desc": "Deorem segment middle leaving end", "label": "DeoremSegmentMiddleLeavingEnd", "addr": {"J": "22B3C", "U": "22B3C", "E": "22C08"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Handles the end of the middle leaving, sets status to 0"}, {"desc": "Deorem segment middle leaving", "label": "DeoremSegmentMiddleLeaving", "addr": {"J": "22B64", "U": "22B64", "E": "22C30"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Handles the middle leaving"}, {"desc": "Deorem segment right leaving", "label": "DeoremSegmentRightLeaving", "addr": {"J": "22BF4", "U": "22BF4", "E": "22CC0"}, "size": "A0", "mode": "thumb", "params": null, "return": null, "notes": "Handles the left side leaving"}, {"desc": "Deorem segment right leaving end", "label": "DeoremSegmentRightLeavingEnd", "addr": {"J": "22C94", "U": "22C94", "E": "22D60"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Handles the end of the right side leaving, sets status to 0"}, {"desc": "Deorem segment set timer dying", "label": "DeoremSegmentSetTimerDying", "addr": {"J": "22CBC", "U": "22CBC", "E": "22D88"}, "size": "F8", "mode": "thumb", "params": null, "return": null, "notes": "Sets the timer depending on the room slot for how long it stays alive before exploding upon  Deorem death"}, {"desc": "Deorem segment dying", "label": "DeoremSegmentDying", "addr": {"J": "22DB4", "U": "22DB4", "E": "22E80"}, "size": "94", "mode": "thumb", "params": null, "return": null, "notes": "Handles the death of a Deorem segment"}, {"desc": "Deorem eye initialize", "label": "DeoremEyeInit", "addr": {"J": "22E48", "U": "22E48", "E": "22F14"}, "size": "E0", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a Deorem eye sprite"}, {"desc": "Deorem eye set pose9", "label": "DeoremEyeSetPose9", "addr": {"J": "22F28", "U": "22F28", "E": "22FF4"}, "size": "10", "mode": "thumb", "params": null, "return": null, "notes": "Sets the pose to 9"}, {"desc": "Deorem eye move", "label": "DeoremEyeMove", "addr": {"J": "22F38", "U": "22F38", "E": "23004"}, "size": "19C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement and the oam rotation of the Deorem eye"}, {"desc": "Deorem eye dying graphics initialize", "label": "DeoremEyeDyingGfxInit", "addr": {"J": "23170", "U": "23170", "E": "2323C"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the eye dying (also sets Deorem pose to 62)"}, {"desc": "Deorem eye dying spinning animation", "label": "DeoremEyeDyingSpinningAnim", "addr": {"J": "231A8", "U": "231A8", "E": "23274"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Handles the eye spinning when Deorem is dying (body still here)"}, {"desc": "Deorem eye dying moving animation", "label": "DeoremEyeDyingMovingAnim", "addr": {"J": "23228", "U": "23228", "E": "232F4"}, "size": "B0", "mode": "thumb", "params": null, "return": null, "notes": "Handles the eye spinning and moving when Deorem is dying (body dying/not here) Calls DeoremSpawnChargeBeam"}, {"desc": "Deorem thorn initialize", "label": "DeoremThornInit", "addr": {"J": "232D8", "U": "232D8", "E": "233A4"}, "size": "DC", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a Deorem thorn sprite"}, {"desc": "Deorem thorn spawning", "label": "DeoremThornSpawning", "addr": {"J": "233B4", "U": "233B4", "E": "23480"}, "size": "70", "mode": "thumb", "params": null, "return": null, "notes": "Handles the spinning animationation when the thorn is spawning, before is moves"}, {"desc": "Deorem thorn movement", "label": "DeoremThornMovement", "addr": {"J": "23424", "U": "23424", "E": "234F0"}, "size": "FC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the Deorem thorn"}, {"desc": "Deorem AI", "label": "Deorem_AI", "addr": {"J": "23520", "U": "23520", "E": "235EC"}, "size": "238", "mode": "thumb", "params": null, "return": null}, {"desc": "Deorem segment AI", "label": "DeoremSegment_AI", "addr": {"J": "23758", "U": "23758", "E": "23824"}, "size": "2C8", "mode": "thumb", "params": null, "return": null}, {"desc": "Deorem eye AI", "label": "DeoremEye_AI", "addr": {"J": "23A20", "U": "23A20", "E": "23AEC"}, "size": "E0", "mode": "thumb", "params": null, "return": null}, {"desc": "Deorem thorn AI", "label": "DeoremThorn_AI", "addr": {"J": "23B00", "U": "23B00", "E": "23BCC"}, "size": "4C", "mode": "thumb", "params": null, "return": null}, {"desc": "Dessgeega check Samus near left right", "label": "DessgeegaCheckSamusNearLeftRight", "addr": {"J": "23B4C", "U": "23B4C", "E": "23C18"}, "size": "20", "mode": "thumb", "params": null, "return": {"desc": "Not out of range", "type": "bool"}, "notes": "Checks if Samus is in range of the dessgeega (0x140 on both side)"}, {"desc": "Dessgeega initialize", "label": "DessgeegaInit", "addr": {"J": "23B6C", "U": "23B6C", "E": "23C38"}, "size": "10C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a dessgeega sprite"}, {"desc": "Dessgeega jumping graphics initialize", "label": "DessgeegaJumpingGfxInit", "addr": {"J": "23C78", "U": "23C78", "E": "23D44"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the dessgeega jumping"}, {"desc": "Dessgeega before jumping", "label": "DessgeegaBeforeJumping", "addr": {"J": "23C98", "U": "23C98", "E": "23D64"}, "size": "64", "mode": "thumb", "params": null, "return": null, "notes": "Called once before the dessgeega jumps"}, {"desc": "Dessgeega before landing", "label": "DessgeegaBeforeLanding", "addr": {"J": "23CFC", "U": "23CFC", "E": "23DC8"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Called once before the dessgeega lands"}, {"desc": "Dessgeega check Samus in range", "label": "DessgeegaCheckSamusInRange", "addr": {"J": "23D34", "U": "23D34", "E": "23E00"}, "size": "74", "mode": "thumb", "params": null, "return": null, "notes": "Checks if Samus is in range"}, {"desc": "Dessgeega bouncing graphics initialize", "label": "DessgeegaBouncingGfxInit", "addr": {"J": "23DA8", "U": "23DA8", "E": "23E74"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the dessgeega bouncing on the ceiling"}, {"desc": "Dessgeega check bouncing", "label": "DessgeegaCheckBouncing", "addr": {"J": "23DCC", "U": "23DCC", "E": "23E98"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the dessgeega is bouncing"}, {"desc": "Dessgeega check before jumping ceiling animation ended", "label": "DessgeegaCheckBeforeJumpingCeilingAnimEnded", "addr": {"J": "23E28", "U": "23E28", "E": "23EF4"}, "size": "14", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the animationation before jumping when on the ceiling ended"}, {"desc": "Dessgeega move ground", "label": "DessgeegaMoveGround", "addr": {"J": "23E3C", "U": "23E3C", "E": "23F08"}, "size": "1E8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the dessgeega when jumping on the ground"}, {"desc": "Dessgeega move ceiling", "label": "DessgeegaMoveCeiling", "addr": {"J": "24024", "U": "24024", "E": "240F0"}, "size": "1FC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the dessgeega when jumping on the ceiling"}, {"desc": "Dessgeega check landing animation ended", "label": "DessgeegaCheckLandingAnimEnded", "addr": {"J": "24220", "U": "24220", "E": "242EC"}, "size": "14", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the landing animationation has ended"}, {"desc": "Dessgeega jumping ground into block", "label": "DessgeegaJumpingGroundIntoBlock", "addr": {"J": "24234", "U": "24234", "E": "24300"}, "size": "A4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the dessgeega jumping from the ground into a block"}, {"desc": "Dessgeega jumping ceiling into block", "label": "DessgeegaJumpingCeilingIntoBlock", "addr": {"J": "242D8", "U": "242D8", "E": "243A4"}, "size": "A8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the dessgeega jumping from the ceiling into a block"}, {"desc": "Dessgeega screaming animation", "label": "DessgeegaScreamingAnim", "addr": {"J": "24380", "U": "24380", "E": "2444C"}, "size": "98", "mode": "thumb", "params": null, "return": null, "notes": "Handles the screaming animationation"}, {"desc": "Dessgeega ceiling idle animation", "label": "DessgeegaCeilingIdleAnim", "addr": {"J": "24418", "U": "24418", "E": "244E4"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the idle animationation of the desgeega on the ceiling"}, {"desc": "Dessgeega death", "label": "DessgeegaDeath", "addr": {"J": "24474", "U": "24474", "E": "24540"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Calls SpriteDeath"}, {"desc": "Dessgeega long beam detect Samus", "label": "DessgeegaLongBeamDetectSamus", "addr": {"J": "244CC", "U": "244CC", "E": "24598"}, "size": "B8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the detection of Samus and the spawn for the long beam dessgeega"}, {"desc": "Dessgeega long beam spawning", "label": "DessgeegaLongBeamSpawning", "addr": {"J": "24584", "U": "24584", "E": "24650"}, "size": "DC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the spawning of the long beam dessgeega"}, {"desc": "Dessgeega AI", "label": "Dessgeega_AI", "addr": {"J": "24660", "U": "24660", "E": "2472C"}, "size": "1DC", "mode": "thumb", "params": null, "return": null}, {"desc": "Waver initialize", "label": "WaverInit", "addr": {"J": "2483C", "U": "2483C", "E": "24908"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a waver sprite"}, {"desc": "Waver move", "label": "WaverMove", "addr": {"J": "248A4", "U": "248A4", "E": "24970"}, "size": "E8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the waver"}, {"desc": "Waver AI", "label": "Waver_AI", "addr": {"J": "2498C", "U": "2498C", "E": "24A58"}, "size": "84", "mode": "thumb", "params": null, "return": null}, {"desc": "Hive spawn particle", "label": "HiveSpawnParticle", "addr": {"J": "24A10", "U": "24A10", "E": "24ADC"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Spawns 2 particle effects"}, {"desc": "Hive initialize", "label": "HiveInit", "addr": {"J": "24A3C", "U": "24A3C", "E": "24B08"}, "size": "124", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a hive sprite"}, {"desc": "Hive count mellow", "label": "HiveCountMellow", "addr": {"J": "24B60", "U": "24B60", "E": "24C2C"}, "size": "54", "mode": "thumb", "params": null, "return": {"desc": "Number of mellows alive", "type": "u8"}, "notes": "Counts the number of mellows of the current hive"}, {"desc": "Hive phase 1", "label": "HivePhase1", "addr": {"J": "24BB4", "U": "24BB4", "E": "24C80"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Spawns a mellow if necesserary and checks if the hive should go to phase 2"}, {"desc": "Hive phase 2", "label": "HivePhase2", "addr": {"J": "24C2C", "U": "24C2C", "E": "24CF8"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Spawns a mellow if necesserary and checks if the hive should go to phase 3"}, {"desc": "Hive phase 3", "label": "HivePhase3", "addr": {"J": "24CA4", "U": "24CA4", "E": "24D70"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Spawns a mellow if necessary"}, {"desc": "Hive dying", "label": "HiveDying", "addr": {"J": "24CD4", "U": "24CD4", "E": "24DA0"}, "size": "10C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the hive dying, sets the 3 hives killed event if necessary"}, {"desc": "Hive ignore Samus collision", "label": "HiveIgnoreSamusCollision", "addr": {"J": "24DE0", "U": "24DE0", "E": "24EAC"}, "size": "10", "mode": "thumb", "params": null, "return": null, "notes": "Sets the ignore Samus collision timer of the hive to 1"}, {"desc": "Hive roots initialize", "label": "HiveRootsInit", "addr": {"J": "24DF0", "U": "24DF0", "E": "24EBC"}, "size": "64", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a hive roots sprite"}, {"desc": "Hive roots move", "label": "HiveRootsMove", "addr": {"J": "24E54", "U": "24E54", "E": "24F20"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Handles the idle movement related part of the idle animationation"}, {"desc": "Mellow initialize", "label": "MellowInit", "addr": {"J": "24E78", "U": "24E78", "E": "24F44"}, "size": "150", "mode": "thumb", "params": [{"desc": "Current sprite pointer", "type": "ptr.SpriteData"}], "return": null, "notes": "Initialize a mellow sprite"}, {"desc": "Mellow idle animation", "label": "MellowIdleAnim", "addr": {"J": "24FC8", "U": "24FC8", "E": "25094"}, "size": "C0", "mode": "thumb", "params": [{"desc": "Current sprite pointer", "type": "ptr.SpriteData"}], "return": null, "notes": "Handles the idle animationation and Samus detection"}, {"desc": "Mellow fleeing", "label": "MellowFleeing", "addr": {"J": "25088", "U": "25088", "E": "25154"}, "size": "48", "mode": "thumb", "params": [{"desc": "Current sprite pointer", "type": "ptr.SpriteData"}], "return": null, "notes": "Handles a mellow fleeing"}, {"desc": "Mellow Samus detected", "label": "MellowSamusDetected", "addr": {"J": "250D0", "U": "250D0", "E": "2519C"}, "size": "68", "mode": "thumb", "params": [{"desc": "Current sprite pointer", "type": "ptr.SpriteData"}], "return": null, "notes": "Called once when the mellow detected Samus"}, {"desc": "Mellow move", "label": "MellowMove", "addr": {"J": "25138", "U": "25138", "E": "25204"}, "size": "3FC", "mode": "thumb", "params": [{"desc": "Current sprite pointer", "type": "ptr.SpriteData"}], "return": null, "notes": "Handles the movement of the mellow when chasing Samus"}, {"desc": "Hive AI", "label": "Hive_AI", "addr": {"J": "25534", "U": "25534", "E": "25600"}, "size": "84", "mode": "thumb", "params": null, "return": null}, {"desc": "Hive roots AI", "label": "HiveRoots_AI", "addr": {"J": "255B8", "U": "255B8", "E": "25684"}, "size": "AC", "mode": "thumb", "params": null, "return": null}, {"desc": "Mellow AI", "label": "Mellow_AI", "addr": {"J": "25664", "U": "25664", "E": "25730"}, "size": "154", "mode": "thumb", "params": null, "return": null}, {"desc": "Mellow (swarm) AI", "label": "Mellow_Swarm_AI", "addr": {"J": "257B8", "U": "257B8", "E": "25884"}, "size": "1E8", "mode": "thumb", "params": null, "return": null}, {"desc": "Imago larva belly flashing", "label": "ImagoLarvaBellyFlashing", "addr": {"J": "25A24", "U": "25A24", "E": "25AF0"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the flashing animationation of the imago larva belly"}, {"desc": "Imago larva initialize", "label": "ImagoLarvaInit", "addr": {"J": "25A80", "U": "25A80", "E": "25B4C"}, "size": "194", "mode": "thumb", "params": [{"desc": "Sub-sprite data pointer", "type": "ptr.SubSpriteData"}], "return": null, "notes": "Initialize an imago larva sprite"}, {"desc": "Imago larva detect Samus", "label": "ImagoLarvaDetectSamus", "addr": {"J": "25C14", "U": "25C14", "E": "25CE0"}, "size": "38", "mode": "thumb", "params": [{"desc": "Sub-sprite data pointer", "type": "ptr.SubSpriteData"}], "return": null, "notes": "Calls ImagoLarvaBellyFlashing and checks if Samus is in range"}, {"desc": "Imago larva hitting wall graphics initialize", "label": "ImagoLarvaHittingWallGfxInit", "addr": {"J": "25C4C", "U": "25C4C", "E": "25D18"}, "size": "1C", "mode": "thumb", "params": [{"desc": "Sub-sprite data pointer", "type": "ptr.SubSpriteData"}], "return": null, "notes": "Initialize the graphics for the larva hitting the wall after dashing"}, {"desc": "Imago larva call belly flashing", "label": "ImagoLarvaCallBellyFlashing", "addr": {"J": "25C68", "U": "25C68", "E": "25D34"}, "size": "C", "mode": "thumb", "params": null, "return": null, "notes": "Calls ImagoLarvaBellyFlashing"}, {"desc": "Imago larva retreating", "label": "ImagoLarvaRetreating", "addr": {"J": "25C9C", "U": "25C9C", "E": "25D68"}, "size": "68", "mode": "thumb", "params": [{"desc": "Sub-sprite data pointer", "type": "ptr.SubSpriteData"}], "return": null, "notes": "Handles the larva retreating"}, {"desc": "Imago larva after retreat graphics initialize", "label": "ImagoLarvaAfterRetreatGfxInit", "addr": {"J": "25D04", "U": "25D04", "E": "25DD0"}, "size": "1C", "mode": "thumb", "params": [{"desc": "Sub-sprite data pointer", "type": "ptr.SubSpriteData"}], "return": null, "notes": "Initialize the graphics for the larva after it retreated"}, {"desc": "Imago larva attack after retreat", "label": "ImagoLarvaAttackAfterRetreat", "addr": {"J": "25D20", "U": "25D20", "E": "25DEC"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Timer related to the attack animationation after the larva retreated"}, {"desc": "Imago larva starting to attack", "label": "ImagoLarvaStartingToAttack", "addr": {"J": "25D48", "U": "25D48", "E": "25E14"}, "size": "34", "mode": "thumb", "params": [{"desc": "Sub-sprite data pointer", "type": "ptr.SubSpriteData"}], "return": null, "notes": "Called once when the larva starts to attack"}, {"desc": "Imago larva check warning animation ended", "label": "ImagoLarvaCheckWarningAnimEnded", "addr": {"J": "25D7C", "U": "25D7C", "E": "25E48"}, "size": "24", "mode": "thumb", "params": [{"desc": "Sub-sprite data pointer", "type": "ptr.SubSpriteData"}], "return": null, "notes": "Checks if the warning animationation before attacking has ended"}, {"desc": "Imago larva attack graphics initialize", "label": "ImagoLarvaAttackGfxInit", "addr": {"J": "25DA0", "U": "25DA0", "E": "25E6C"}, "size": "28", "mode": "thumb", "params": [{"desc": "Sub-sprite data pointer", "type": "ptr.SubSpriteData"}], "return": null, "notes": "Initialize the graphics for the larva attacking"}, {"desc": "Imago larva attacking", "label": "ImagoLarvaAttacking", "addr": {"J": "25DC8", "U": "25DC8", "E": "25E94"}, "size": "64", "mode": "thumb", "params": [{"desc": "Sub-sprite data pointer", "type": "ptr.SubSpriteData"}], "return": null, "notes": "Handles the larva attacking"}, {"desc": "Imago taking damage graphics initialize", "label": "ImagoTakingDamageGfxInit", "addr": {"J": "25E2C", "U": "25E2C", "E": "25EF8"}, "size": "38", "mode": "thumb", "params": [{"desc": "Sub-sprite data pointer", "type": "ptr.SubSpriteData"}], "return": null, "notes": "Initialize the graphics for the larva taking damage"}, {"desc": "Imago larva ceck taking damage animation ended", "label": "ImagoLarvaCeckTakingDamageAnimEnded", "addr": {"J": "25E64", "U": "25E64", "E": "25F30"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the taking damage animationation has ended"}, {"desc": "Imago larva before dying", "label": "ImagoLarvaBeforeDying", "addr": {"J": "25E88", "U": "25E88", "E": "25F54"}, "size": "64", "mode": "thumb", "params": [{"desc": "Sub-sprite data pointer", "type": "ptr.SubSpriteData"}], "return": null, "notes": "Called once before the larva dies"}, {"desc": "Imago larva check dying animation ended", "label": "ImagoLarvaCheckDyingAnimEnded", "addr": {"J": "25EEC", "U": "25EEC", "E": "25FB8"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the dying animationation has ended"}, {"desc": "Imago larva dead", "label": "ImagoLarvaDead", "addr": {"J": "25F14", "U": "25F14", "E": "25FE0"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the death of the imago larva, calls SpriteDeath and sets the caterpillar killed event if necessary"}, {"desc": "Imago larva outside initialize", "label": "ImagoLarvaOutsideInit", "addr": {"J": "25F70", "U": "25F70", "E": "2603C"}, "size": "1CC", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a imago larva outside sprite"}, {"desc": "Imago larva outside retracting", "label": "ImagoLarvaOutsideRetracting", "addr": {"J": "2613C", "U": "2613C", "E": "26208"}, "size": "180", "mode": "thumb", "params": [{"desc": "Sub-sprite data pointer", "type": "ptr.SubSpriteData"}], "return": null, "notes": "Called all the time but seems to only affect the retraction"}, {"desc": "Imago larva outside attacking", "label": "ImagoLarvaOutsideAttacking", "addr": {"J": "262BC", "U": "262BC", "E": "26388"}, "size": "60", "mode": "thumb", "params": [{"desc": "Sub-sprite data pointer", "type": "ptr.SubSpriteData"}], "return": null, "notes": "Called all the time but seems to only affect the attack"}, {"desc": "Imago larva outside remove orbs", "label": "ImagoLarvaOutsideRemoveOrbs", "addr": {"J": "2631C", "U": "2631C", "E": "263E8"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Removes the 3 orbs when attacking"}, {"desc": "Imago larva outside attacking animation", "label": "ImagoLarvaOutsideAttackingAnim", "addr": {"J": "2636C", "U": "2636C", "E": "26438"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Handles the attacking animationation"}, {"desc": "Imago larva outside check attacking animation ended", "label": "ImagoLarvaOutsideCheckAttackingAnimEnded", "addr": {"J": "263D4", "U": "263D4", "E": "264A0"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the attacking animationation has ended"}, {"desc": "Imago larva outside dead", "label": "ImagoLarvaOutsideDead", "addr": {"J": "26424", "U": "26424", "E": "264F0"}, "size": "D0", "mode": "thumb", "params": null, "return": null, "notes": "Handles the death of the imago larva outside, calls SpriteDeath"}, {"desc": "Imago larva AI", "label": "ImagoLarva_AI", "addr": {"J": "264F4", "U": "264F4", "E": "265C0"}, "size": "2C0", "mode": "thumb", "params": null, "return": null}, {"desc": "Imago larva (outside) AI", "label": "ImagoLarva_Outside_AI", "addr": {"J": "267B4", "U": "267B4", "E": "26880"}, "size": "108", "mode": "thumb", "params": null, "return": null}, {"desc": "Morph ball launcher change current clipdata action", "label": "MorphBallLauncherChangeClipAction", "addr": {"J": "268BC", "U": "268BC", "E": "26988"}, "size": "74", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Enables the launcher hitbox"}, {"desc": "Morph ball launcher initialize", "label": "MorphBallLauncherInit", "addr": {"J": "26930", "U": "26930", "E": "269FC"}, "size": "94", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a morph ball launcher sprite"}, {"desc": "Morph ball launcher detect bomb", "label": "MorphBallLauncherDetectBomb", "addr": {"J": "269C4", "U": "269C4", "E": "26A90"}, "size": "94", "mode": "thumb", "params": null, "return": null, "notes": "Checks if there's a bomb on the launcher"}, {"desc": "Morph ball launcher bomb timer", "label": "MorphBallLauncherBombTimer", "addr": {"J": "26A58", "U": "26A58", "E": "26B24"}, "size": "40", "mode": "thumb", "params": null, "return": null, "notes": "Timer that's as long as the bomb explosion time"}, {"desc": "Morph ball launcher launch Samus animation", "label": "MorphBallLauncherLaunchSamusAnim", "addr": {"J": "26A98", "U": "26A98", "E": "26B64"}, "size": "70", "mode": "thumb", "params": null, "return": null, "notes": "Handles the Samus launching animationation"}, {"desc": "Morph Ball launcher AI", "label": "MorphBallLauncher_AI", "addr": {"J": "26B08", "U": "26B08", "E": "26BD4"}, "size": "48", "mode": "thumb", "params": null, "return": null}, {"desc": "Morph Ball launcher (back) AI", "label": "MorphBallLauncher_Back_AI", "addr": {"J": "26B50", "U": "26B50", "E": "26C1C"}, "size": "E8", "mode": "thumb", "params": null, "return": null}, {"desc": "Imago cocoon update position and animation", "label": "ImagoCocoonUpdatePositionAndAnim", "addr": {"J": "26C38", "U": "26C38", "E": "26D04"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Updates the animationation and the position for imago cocoon and the imago cocoon vines"}, {"desc": "Imago cocoon change one current clipdata action", "label": "ImagoCocoonChangeOneClipAction", "addr": {"J": "26CA0", "U": "26CA0", "E": "26D6C"}, "size": "40", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Removes the middle block of the floor when imago cocoon falls"}, {"desc": "Imago cocoon change two middle current clipata action", "label": "ImagoCocoonChangeTwoMiddleClipAction", "addr": {"J": "26CE0", "U": "26CE0", "E": "26DAC"}, "size": "70", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Removes the 2 blocks of the floor around the middle block when imago cocoon falls"}, {"desc": "Imago cocoon change two around current clipata action", "label": "ImagoCocoonChangeTwoAroundClipAction", "addr": {"J": "26D50", "U": "26D50", "E": "26E1C"}, "size": "7C", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Removes the 2 blocks at the edges of the floor when imago cocoon falls"}, {"desc": "Imago cocoon change two blocking current clipata action", "label": "ImagoCocoonChangeTwoBlockingClipAction", "addr": {"J": "26DCC", "U": "26DCC", "E": "26E98"}, "size": "5C", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Removes the blocks blocking the passage after imago dies"}, {"desc": "Imago cocoon change OAM scaling", "label": "ImagoCocoonChangeOamScaling", "addr": {"J": "26E28", "U": "26E28", "E": "26EF4"}, "size": "54", "mode": "thumb", "params": [{"desc": "Scaling Check", "type": "u16"}, {"desc": "OAM Scaling", "type": "u16"}], "return": null, "notes": "Checks if the OAM scaling is above or below r0-0x100 or r0+0x100 if check is succesful, adds/decrement r1 to the current OAM scaling"}, {"desc": "Imago cocoon initialize", "label": "ImagoCocoonInit", "addr": {"J": "26E7C", "U": "26E7C", "E": "26F48"}, "size": "2AC", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an imago cocoon sprite"}, {"desc": "Imago cocoon falling movement", "label": "ImagoCocoonFallingMovement", "addr": {"J": "27128", "U": "27128", "E": "271F4"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the imago cocoon falling"}, {"desc": "Imago cocoon main loop", "label": "ImagoCocoonMainLoop", "addr": {"J": "27154", "U": "27154", "E": "27220"}, "size": "130", "mode": "thumb", "params": null, "return": null, "notes": "Handles the \"spawning\" of imago cocoon (detecting Samus to play the music) also handles the death of imago cocoon (setting the event), also calls ImagoCocoonChangeOamScalling and handles the palette switching"}, {"desc": "Imago cocoon falling before blocks", "label": "ImagoCocoonFallingBeforeBlocks", "addr": {"J": "27284", "U": "27284", "E": "27350"}, "size": "174", "mode": "thumb", "params": null, "return": null, "notes": "Handles imago cocoon falling before he destroyed the blocks"}, {"desc": "Imago cocoon falling after blocks", "label": "ImagoCocoonFallingAfterBlocks", "addr": {"J": "273F8", "U": "273F8", "E": "274C4"}, "size": "FC", "mode": "thumb", "params": null, "return": null, "notes": "Handles imago cocoon falling after he destroyed the blocks"}, {"desc": "Imago cocoon unlock passage", "label": "ImagoCocoonUnlockPassage", "addr": {"J": "274F4", "U": "274F4", "E": "275C0"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Checks the timer for the imago cocoon, if timer ended sets door unlock timer and opens up the passage"}, {"desc": "Imago cocoon in ground animation", "label": "ImagoCocoonInGroundAnim", "addr": {"J": "2753C", "U": "2753C", "E": "27608"}, "size": "70", "mode": "thumb", "params": null, "return": null, "notes": "Handles the animationation of the imago cocoon when he is on the ground after falling"}, {"desc": "Imago cocoon vine initialize", "label": "ImagoCocoonVineInit", "addr": {"J": "275AC", "U": "275AC", "E": "27678"}, "size": "320", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an imago cocoon vine sprite"}, {"desc": "Imago cocoon vine play sound", "label": "ImagoCocoonVinePlaySound", "addr": {"J": "278CC", "U": "278CC", "E": "27998"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Plays a sound if conditions are true"}, {"desc": "Imago cocoon vine death", "label": "ImagoCocoonVineDeath", "addr": {"J": "27904", "U": "27904", "E": "279D0"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Called when the vine dies"}, {"desc": "Imago cocoon vine spawn spore", "label": "ImagoCocoonVineSpawnSpore", "addr": {"J": "2798C", "U": "2798C", "E": "27A58"}, "size": "160", "mode": "thumb", "params": null, "return": null, "notes": "Handles the spawning of the spores"}, {"desc": "Imago cocoon vine hanging death", "label": "ImagoCocoonVineHangingDeath", "addr": {"J": "27AEC", "U": "27AEC", "E": "27BB8"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Handles the removal of the hanging vine when imago dies"}, {"desc": "Imago cocoon vine hanging death animation", "label": "ImagoCocoonVineHangingDeathAnim", "addr": {"J": "27B30", "U": "27B30", "E": "27BFC"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Handles the animationation of the removal of the hanging vine when imago dies"}, {"desc": "Imago cocoon spore sync position", "label": "ImagoCocoonSporeSyncPosition", "addr": {"J": "27B74", "U": "27B74", "E": "27C40"}, "size": "54", "mode": "thumb", "params": null, "return": null, "notes": "Synchronizes the spore position with the imago cocoon position"}, {"desc": "Imago cocoon spore initialize", "label": "ImagoCocoonSporeInit", "addr": {"J": "27BC8", "U": "27BC8", "E": "27C94"}, "size": "A8", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an imago cocoon spore sprite"}, {"desc": "Imago cocoon spore before spawning", "label": "ImagoCocoonSporeBeforeSpawning", "addr": {"J": "27C70", "U": "27C70", "E": "27D3C"}, "size": "74", "mode": "thumb", "params": null, "return": null, "notes": "Called before the spawning of the imago cocoon spore"}, {"desc": "Imago cocoon spore spawning", "label": "ImagoCocoonSporeSpawning", "addr": {"J": "27CE4", "U": "27CE4", "E": "27DB0"}, "size": "8C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the spawning of the imago cocoon spore"}, {"desc": "Imago cocoon spore move", "label": "ImagoCocoonSporeMove", "addr": {"J": "27D70", "U": "27D70", "E": "27E3C"}, "size": "114", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the imago cocoon spore"}, {"desc": "Imago cocoon spore exploding graphics initialize", "label": "ImagoCocoonSporeExplodingGfxInit", "addr": {"J": "27E84", "U": "27E84", "E": "27F50"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the spore exploding"}, {"desc": "Imago cocoon spore check exploding animation ended", "label": "ImagoCocoonSporeCheckExplodingAnimEnded", "addr": {"J": "27EB8", "U": "27EB8", "E": "27F84"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the exploding animationation has ended"}, {"desc": "Winged ripper imago collision", "label": "WingedRipperImagoCollision", "addr": {"J": "27EDC", "U": "27EDC", "E": "27FA8"}, "size": "C4", "mode": "thumb", "params": null, "return": {"desc": "Colliding", "type": "bool"}, "notes": "Checks if the winged ripper and imago are colliding when he is falling"}, {"desc": "Winged ripper initialize", "label": "WingedRipperInit", "addr": {"J": "27FA0", "U": "27FA0", "E": "2806C"}, "size": "A0", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a winged ripper sprite"}, {"desc": "Winged ripper graphics initialize", "label": "WingedRipperGfxInit", "addr": {"J": "28040", "U": "28040", "E": "2810C"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the winged ripper"}, {"desc": "Winged ripper move", "label": "WingedRipperMove", "addr": {"J": "28060", "U": "28060", "E": "2812C"}, "size": "224", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the winged ripper"}, {"desc": "Winged ripper death", "label": "WingedRipperDeath", "addr": {"J": "28284", "U": "28284", "E": "28350"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Handles the death of the winged ripper"}, {"desc": "Imago cocoon AI", "label": "ImagoCocoon_AI", "addr": {"J": "282C8", "U": "282C8", "E": "28394"}, "size": "104", "mode": "thumb", "params": null, "return": null}, {"desc": "Imago cocoon vine AI", "label": "ImagoCocoonVine_AI", "addr": {"J": "283CC", "U": "283CC", "E": "28498"}, "size": "70", "mode": "thumb", "params": null, "return": null}, {"desc": "Imago cocoon spore AI", "label": "ImagoCocoonSpore_AI", "addr": {"J": "2843C", "U": "2843C", "E": "28508"}, "size": "8C", "mode": "thumb", "params": null, "return": null}, {"desc": "Winged ripper AI", "label": "WingedRipper_AI", "addr": {"J": "284C8", "U": "284C8", "E": "28594"}, "size": "6C", "mode": "thumb", "params": null, "return": null}, {"desc": "Defeated Imago cocoon AI", "label": "DefeatedImagoCocoon_AI", "addr": {"J": "28534", "U": "28534", "E": "28600"}, "size": "78", "mode": "thumb", "params": null, "return": null}, {"desc": "Imago cocoon root AI", "label": "ImagoCocoonRoot_AI", "addr": {"J": "285AC", "U": "285AC", "E": "28678"}, "size": "7C", "mode": "thumb", "params": null, "return": null}, {"desc": "Event trigger (discovered Imago passage) AI", "label": "EventTrigger_ImagoPassage_AI", "addr": {"J": "28628", "U": "28628", "E": "286F4"}, "size": "90", "mode": "thumb", "params": null, "return": null}, {"desc": "Imago cocoon (after fight) AI", "label": "ImagoCocoon_AfterFight_AI", "addr": {"J": "286B8", "U": "286B8", "E": "28784"}, "size": "74", "mode": "thumb", "params": null, "return": null}, {"desc": "Elevator pad AI", "label": "ElevatorPad_AI", "addr": {"J": "2872C", "U": "2872C", "E": "287F8"}, "size": "B8", "mode": "thumb", "params": null, "return": null}, {"desc": "Disable Chozodia alarm", "label": "DisableChozodiaAlarm", "addr": {"J": "287E4", "U": "287E4", "E": "288B0"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Disables the alarm if mecha Ridley isn't dead sets the stealth music if fully powered suit isn't obtained"}, {"desc": "Decrement Chozodia alarm", "label": "DecrementChozodiaAlarm", "addr": {"J": "28830", "U": "28830", "E": "288FC"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Decrements the alarm"}, {"desc": "Spawn space pirates waiting", "label": "SpawnSpacePiratesWaiting", "addr": {"J": "28874", "U": "28874", "E": "28940"}, "size": "138", "mode": "thumb", "params": null, "return": null, "notes": "Spawns the space pirates waiting when the alarm is on"}, {"desc": "Space pirate turning around", "label": "SpacePirateTurningAround", "addr": {"J": "289AC", "U": "289AC", "E": "28A78"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Updates the hitbox left and right offset and X flips the sprite if necessary"}, {"desc": "Space pirate Samus detection", "label": "SpacePirateSamusDetection", "addr": {"J": "289F0", "U": "289F0", "E": "28ABC"}, "size": "A18", "mode": "thumb", "params": null, "return": null, "notes": "Handles the pirate detecting Samus"}, {"desc": "Space pirate check colliding with laser", "label": "SpacePirateCheckCollidingWithLaser", "addr": {"J": "29408", "U": "29408", "E": "294D4"}, "size": "D8", "mode": "thumb", "params": null, "return": null, "notes": "Checks if a space pirate is colliding with a space pirate laser"}, {"desc": "Space pirate fire laser ground", "label": "SpacePirateFireLaserGround", "addr": {"J": "294E0", "U": "294E0", "E": "295AC"}, "size": "190", "mode": "thumb", "params": null, "return": null, "notes": "Spawns space pirate lasers secondary sprites when the space pirate fires on ground"}, {"desc": "Space pirate fire laser wall", "label": "SpacePirateFireLaserWall", "addr": {"J": "29670", "U": "29670", "E": "2973C"}, "size": "98", "mode": "thumb", "params": null, "return": null, "notes": "Spawns space pirate lasers secondary sprites when the space pirate fires on the wall"}, {"desc": "Space pirate check Samus in shooting range", "label": "SpacePirateCheckSamusInShootingRange", "addr": {"J": "29A18", "U": "29A18", "E": "29AE4"}, "size": "150", "mode": "thumb", "params": null, "return": {"desc": "In range", "type": "bool"}, "notes": "Checks if Samus in is shooting range of the pirate"}, {"desc": "Space pirate initialize", "label": "SpacePirateInit", "addr": {"J": "2A374", "U": "2A374", "E": "2A440"}, "size": "2C8", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a space pirate sprite"}, {"desc": "Space pirate running turning around", "label": "SpacePirateRunningTurningAround", "addr": {"J": "2A804", "U": "2A804", "E": "2A8D0"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Handles the pirate turning around when running"}, {"desc": "Space pirate idle alert animationation", "label": "SpacePirateIdleAlertAnimation", "addr": {"J": "2A83C", "U": "2A83C", "E": "2A908"}, "size": "D4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the idle animationation of the pirate when alert"}, {"desc": "Space pirate climbing", "label": "SpacePirateClimbing", "addr": {"J": "2B708", "U": "2B708", "E": "2B7D4"}, "size": "1F4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the pirate climbing"}, {"desc": "Space pirate death", "label": "SpacePirateDeath", "addr": {"J": "2C30C", "U": "2C30C", "E": "2C3D8"}, "size": "94", "mode": "thumb", "params": [{"desc": "Play sound flag", "type": "bool"}], "return": null, "notes": "Handles the death of the space pirate, counts the number of space pirates alives and if all pirates are dead disables the alarm"}, {"desc": "Space pirate laser initialize", "label": "SpacePirateLaserInit", "addr": {"J": "2C44C", "U": "2C44C", "E": "2C518"}, "size": "F4", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a space pirate laser sprite"}, {"desc": "Space pirate laser exploding", "label": "SpacePirateLaserExploding", "addr": {"J": "2C540", "U": "2C540", "E": "2C60C"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Handles the explosion of the laser (when colliding with something)"}, {"desc": "Space pirate laser check exploding animation ended", "label": "SpacePirateLaserCheckExplodingAnimEnded", "addr": {"J": "2C5A0", "U": "2C5A0", "E": "2C66C"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the exploding animationation has ended"}, {"desc": "Space pirate laser move", "label": "SpacePirateLaserMove", "addr": {"J": "2C5C4", "U": "2C5C4", "E": "2C690"}, "size": "E0", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the space pirate laser"}, {"desc": "Space pirate AI", "label": "SpacePirate_AI", "addr": {"J": "2C6A4", "U": "2C6A4", "E": "2C770"}, "size": "488", "mode": "thumb", "params": null, "return": null}, {"desc": "Space pirate laser AI", "label": "SpacePirateLaser_AI", "addr": {"J": "2CB2C", "U": "2CB2C", "E": "2CBF8"}, "size": "3C", "mode": "thumb", "params": null, "return": null}, {"desc": "Black space pirate hit by projectile", "label": "BlackSpacePirateHitByProjectile", "addr": {"J": "2CB68", "U": "2CB68", "E": "2CC34"}, "size": "268", "mode": "thumb", "params": null, "return": null, "notes": "Handles the black space pirate getting hit by a projectile, checks if the projectile is of plasma type, deals damage if yes and spawns a particle effect if not"}, {"desc": "Black space pirate colliding with laser", "label": "BlackSpacePirateCollidingWithLaser", "addr": {"J": "2CDD0", "U": "2CDD0", "E": "2CE9C"}, "size": "E0", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the black space pirate is colliding with a laser, if yes sets a particle effect"}, {"desc": "Black space pirate initialize", "label": "BlackSpacePirateInit", "addr": {"J": "2CEB0", "U": "2CEB0", "E": "2CF7C"}, "size": "E4", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a black space pirate sprite"}, {"desc": "Black space pirate check off screen", "label": "BlackSpacePirateCheckOffScreen", "addr": {"J": "2CF94", "U": "2CF94", "E": "2D060"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the black space pirate is off screen, if yes sets its pose to 27"}, {"desc": "Black space pirate before shooting graphics initialize", "label": "BlackSpacePirateBeforeShootingGfxInit", "addr": {"J": "2CFB4", "U": "2CFB4", "E": "2D080"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the black space pirate before shooting"}, {"desc": "Space pirate shooting timer", "label": "SpacePirateShootingTimer", "addr": {"J": "2D004", "U": "2D004", "E": "2D0D0"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Handles the timer for the timer shooting"}, {"desc": "Black space pirate shooting graphics initialize", "label": "BlackSpacePirateShootingGfxInit", "addr": {"J": "2D048", "U": "2D048", "E": "2D114"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the black space pirate shooting"}, {"desc": "Black space pirate jumping", "label": "BlackSpacePirateJumping", "addr": {"J": "2D180", "U": "2D180", "E": "2D24C"}, "size": "45C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the black space pirate jumping"}, {"desc": "Black space pirate death", "label": "BlackSpacePirateDeath", "addr": {"J": "2D758", "U": "2D758", "E": "2D824"}, "size": "3C", "mode": "thumb", "params": [{"desc": "Play sound flag", "type": "bool"}], "return": null, "notes": "Handles the death of the black space pirate"}, {"desc": "Black space pirate AI", "label": "BlackSpacePirate_AI", "addr": {"J": "2D840", "U": "2D840", "E": "2D90C"}, "size": "438", "mode": "thumb", "params": null, "return": null}, {"desc": "Escape ship space pirate initialize", "label": "EscapeShipSpacePirateInit", "addr": {"J": "2DC78", "U": "2DC78", "E": "2DD44"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an escape ship space pirate sprite"}, {"desc": "Escape ship space pirate initialize 2", "label": "EscapeShipSpacePirateInit2", "addr": {"J": "2DCD8", "U": "2DCD8", "E": "2DDA4"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Second part of the initializartion"}, {"desc": "Escape ship space pirate detect Samus", "label": "EscapeShipSpacePirateDetectSamus", "addr": {"J": "2DD1C", "U": "2DD1C", "E": "2DDE8"}, "size": "7C", "mode": "thumb", "params": null, "return": null, "notes": "Detects if Samus is in range"}, {"desc": "Escape ship space pirate AI", "label": "EscapeShipSpacePirate_AI", "addr": {"J": "2DD98", "U": "2DD98", "E": "2DE64"}, "size": "458", "mode": "thumb", "params": null, "return": null}, {"desc": "Zipline generator change current clipdata action", "label": "ZiplineGeneratorChangeClipAction", "addr": {"J": "2E1F0", "U": "2E1F0", "E": "2E2BC"}, "size": "64", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Enable the hitbox for the zipline generator"}, {"desc": "Zipline generator initialize", "label": "ZiplineGeneratorInit", "addr": {"J": "2E254", "U": "2E254", "E": "2E320"}, "size": "E0", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a zipline generator sprite"}, {"desc": "Zipline generator detect Samus", "label": "ZiplineGeneratorDetectSamus", "addr": {"J": "2E334", "U": "2E334", "E": "2E400"}, "size": "BC", "mode": "thumb", "params": null, "return": null, "notes": "Detects if Samus is in the hole and in morph ball if yes starts activating the ziplines"}, {"desc": "Zipline generator activating", "label": "ZiplineGeneratorActivating", "addr": {"J": "2E3F0", "U": "2E3F0", "E": "2E4BC"}, "size": "FC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the activating animationation, and the end of the activation (sets Samus pose to morphball and sets the ziplines activated event)"}, {"desc": "Zipline generator AI", "label": "ZiplineGenerator_AI", "addr": {"J": "2E4EC", "U": "2E4EC", "E": "2E5B8"}, "size": "38", "mode": "thumb", "params": null, "return": null}, {"desc": "Zipline generator part AI", "label": "ZiplineGeneratorPart_AI", "addr": {"J": "2E524", "U": "2E524", "E": "2E5F0"}, "size": "EC", "mode": "thumb", "params": null, "return": null}, {"desc": "Gamet initialize", "label": "GametInit", "addr": {"J": "2E610", "U": "2E610", "E": "2E6DC"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a gamet sprite"}, {"desc": "Gamet graphics initialize", "label": "GametGfxInit", "addr": {"J": "2E670", "U": "2E670", "E": "2E73C"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the gamet"}, {"desc": "Gamet spawn", "label": "GametSpawn", "addr": {"J": "2E6AC", "U": "2E6AC", "E": "2E778"}, "size": "168", "mode": "thumb", "params": null, "return": null, "notes": "Checks if Samus is in range and spawns the gamet"}, {"desc": "Gamet going up", "label": "GametGoingUp", "addr": {"J": "2E814", "U": "2E814", "E": "2E8E0"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Handles the gamet going up after spawning"}, {"desc": "Gamet respawning", "label": "GametRespawning", "addr": {"J": "2E894", "U": "2E894", "E": "2E960"}, "size": "64", "mode": "thumb", "params": null, "return": null, "notes": "Handles the gamet respawning"}, {"desc": "Gamet move", "label": "GametMove", "addr": {"J": "2E8F8", "U": "2E8F8", "E": "2E9C4"}, "size": "C4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the gamet moving"}, {"desc": "Gamet AI", "label": "Gamet_AI", "addr": {"J": "2E9BC", "U": "2E9BC", "E": "2EA88"}, "size": "13C", "mode": "thumb", "params": null, "return": null}, {"desc": "Security gate change current clipdata action", "label": "SecurityGateChangeClipAction", "addr": {"J": "2EAF8", "U": "2EAF8", "E": "2EBC4"}, "size": "50", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Enable/disables the hitbox for the gate"}, {"desc": "Security gate open", "label": "SecurityGateOpen", "addr": {"J": "2EB48", "U": "2EB48", "E": "2EC14"}, "size": "40", "mode": "thumb", "params": null, "return": null, "notes": "Opens the gate"}, {"desc": "Security gate start closing", "label": "SecurityGateStartClosing", "addr": {"J": "2EB88", "U": "2EB88", "E": "2EC54"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Starts the closing of the gate"}, {"desc": "Security gate default open initialize", "label": "SecurityGateDefaultOpenInit", "addr": {"J": "2EBC0", "U": "2EBC0", "E": "2EC8C"}, "size": "A8", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a security gate default open sprite"}, {"desc": "Security gate default open check alarm", "label": "SecurityGateDefaultOpenCheckAlarm", "addr": {"J": "2EC68", "U": "2EC68", "E": "2ED34"}, "size": "18", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the alarm timer isn't 0, if yes calls SecurityGateStartClosing"}, {"desc": "Security gate check closing animation ended", "label": "SecurityGateCheckClosingAnimEnded", "addr": {"J": "2EC80", "U": "2EC80", "E": "2ED4C"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the closing animationation has ended"}, {"desc": "Security gate default open open after alarm", "label": "SecurityGateDefaultOpenOpenAfterAlarm", "addr": {"J": "2ECB8", "U": "2ECB8", "E": "2ED84"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the alarm timer is 0, if yes calls SecurityGateOpen"}, {"desc": "Security gate check opening animation ended", "label": "SecurityGateCheckOpeningAnimEnded", "addr": {"J": "2ED18", "U": "2ED18", "E": "2EDE4"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the opening animationation has ended"}, {"desc": "Security gate death", "label": "SecurityGateDeath", "addr": {"J": "2ED40", "U": "2ED40", "E": "2EE0C"}, "size": "40", "mode": "thumb", "params": null, "return": null, "notes": "Calls SpriteDeath, seems unused"}, {"desc": "Security gate default closed initialize", "label": "SecurityGateDefaultClosedInit", "addr": {"J": "2ED80", "U": "2ED80", "E": "2EE4C"}, "size": "A4", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a security gate default closed sprite"}, {"desc": "Security gate default closed check alarm", "label": "SecurityGateDefaultClosedCheckAlarm", "addr": {"J": "2EE24", "U": "2EE24", "E": "2EEF0"}, "size": "18", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the alarm timer is 0, if yes calls SecurityGateStartClosing"}, {"desc": "Security gate default closed close after alarm", "label": "SecurityGateDefaultClosedCloseAfterAlarm", "addr": {"J": "2EE3C", "U": "2EE3C", "E": "2EF08"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the alarm timer isn't 0, if yes calls SecurityGateOpen"}, {"desc": "Security gate (default open) AI", "label": "SecurityGate_Open_AI", "addr": {"J": "2EE78", "U": "2EE78", "E": "2EF44"}, "size": "F0", "mode": "thumb", "params": null, "return": null}, {"desc": "Security gate (default closed) AI", "label": "SecurityGate_Closed_AI", "addr": {"J": "2EF68", "U": "2EF68", "E": "2F034"}, "size": "F0", "mode": "thumb", "params": null, "return": null}, {"desc": "Zebbo initialize", "label": "ZebboInit", "addr": {"J": "2F058", "U": "2F058", "E": "2F124"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a zebbo sprite"}, {"desc": "Zebbo graphics initialize", "label": "ZebboGfxInit", "addr": {"J": "2F0B0", "U": "2F0B0", "E": "2F17C"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the zebbo"}, {"desc": "Zebbo spawn", "label": "ZebboSpawn", "addr": {"J": "2F0EC", "U": "2F0EC", "E": "2F1B8"}, "size": "164", "mode": "thumb", "params": null, "return": null, "notes": "Checks if Samus is in range and spawns the zebbo"}, {"desc": "Zebbo going up", "label": "ZebboGoingUp", "addr": {"J": "2F250", "U": "2F250", "E": "2F31C"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Handles the zebbo going up after spawning"}, {"desc": "Zebbo respawning", "label": "ZebboRespawning", "addr": {"J": "2F2D0", "U": "2F2D0", "E": "2F39C"}, "size": "64", "mode": "thumb", "params": null, "return": null, "notes": "Handles the zebbo respawning"}, {"desc": "Zebbo move", "label": "ZebboMove", "addr": {"J": "2F334", "U": "2F334", "E": "2F400"}, "size": "C8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the zebbo moving"}, {"desc": "Zebbo AI", "label": "Zebbo_AI", "addr": {"J": "2F3FC", "U": "2F3FC", "E": "2F4C8"}, "size": "138", "mode": "thumb", "params": null, "return": null}, {"desc": "Worker robot check Samus touching front", "label": "WorkerRobotCheckSamusTouchingFront", "addr": {"J": "2F534", "U": "2F534", "E": "2F600"}, "size": "C4", "mode": "thumb", "params": null, "return": {"desc": "Samus touching front", "type": "bool"}, "notes": "Checks if Samus is in front of the worker robot"}, {"desc": "Worker robot initialize", "label": "WorkerRobotInit", "addr": {"J": "2F5F8", "U": "2F5F8", "E": "2F6C4"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a worker robot sprite"}, {"desc": "Worker robot graphics initialize", "label": "WorkerRobotGfxInit", "addr": {"J": "2F688", "U": "2F688", "E": "2F754"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the worker robot"}, {"desc": "Worker robot sleeping detect projectile", "label": "WorkerRobotSleepingDetectProjectile", "addr": {"J": "2F6A8", "U": "2F6A8", "E": "2F774"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Checks for a projectile collision when the robot is sleeping"}, {"desc": "Worker robot standing graphics initialize", "label": "WorkerRobotStandingGfxInit", "addr": {"J": "2F6E0", "U": "2F6E0", "E": "2F7AC"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the worker robot standing"}, {"desc": "Worker robot check standing animation ended", "label": "WorkerRobotCheckStandingAnimEnded", "addr": {"J": "2F718", "U": "2F718", "E": "2F7E4"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the standing animationation has ended"}, {"desc": "Worker robot walking detect projectile", "label": "WorkerRobotWalkingDetectProjectile", "addr": {"J": "2F734", "U": "2F734", "E": "2F800"}, "size": "19C", "mode": "thumb", "params": null, "return": null, "notes": "Checks for a projectile collision when the robot is walking"}, {"desc": "Worker robot waking up graphics initialize", "label": "WorkerRobotWakingUpGfxInit", "addr": {"J": "2F8D0", "U": "2F8D0", "E": "2F99C"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the worker robot waking up"}, {"desc": "Worker robot check projectile", "label": "WorkerRobotCheckProjectile", "addr": {"J": "2F90C", "U": "2F90C", "E": "2F9D8"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Calls WorkerRobotWalkingDetectProjectile and decrements timer1"}, {"desc": "Worker robot walk graphics initialize", "label": "WorkerRobotWalkGfxInit", "addr": {"J": "2F948", "U": "2F948", "E": "2FA14"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the worker robot walking"}, {"desc": "Worker robot move", "label": "WorkerRobotMove", "addr": {"J": "2F968", "U": "2F968", "E": "2FA34"}, "size": "25C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the worker robot walking"}, {"desc": "Worker robot back to sleep graphics initialize", "label": "WorkerRobotBackToSleepGfxInit", "addr": {"J": "2FBC4", "U": "2FBC4", "E": "2FC90"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the worker robot going back to sleep"}, {"desc": "Worker robot check back to sleep animation ended", "label": "WorkerRobotCheckBackToSleepAnimEnded", "addr": {"J": "2FBFC", "U": "2FBFC", "E": "2FCC8"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the going back to sleep animationation has ended"}, {"desc": "Worker robot turning around", "label": "WorkerRobotTurningAround", "addr": {"J": "2FC30", "U": "2FC30", "E": "2FCFC"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the worker robot turning around"}, {"desc": "Worker robot check turning around animation ended", "label": "WorkerRobotCheckTurningAroundAnimEnded", "addr": {"J": "2FC7C", "U": "2FC7C", "E": "2FD48"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the turning around animationation has ended"}, {"desc": "Worker robot falling graphics initialize", "label": "WorkerRobotFallingGfxInit", "addr": {"J": "2FC98", "U": "2FC98", "E": "2FD64"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the worker robot falling"}, {"desc": "Worker robot falling", "label": "WorkerRobotFalling", "addr": {"J": "2FCC0", "U": "2FCC0", "E": "2FD8C"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Handles the worker robot falling"}, {"desc": "Working robot falling sleep graphics initialize", "label": "WorkingRobotFallingSleepGfxInit", "addr": {"J": "2FD40", "U": "2FD40", "E": "2FE0C"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the worker robot falling when asleep"}, {"desc": "Worker robot falling sleep", "label": "WorkerRobotFallingSleep", "addr": {"J": "2FD5C", "U": "2FD5C", "E": "2FE28"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Handles the worker robot falling when asleep"}, {"desc": "Worker robot AI", "label": "WorkerRobot_AI", "addr": {"J": "2FDD4", "U": "2FDD4", "E": "2FEA0"}, "size": "11C", "mode": "thumb", "params": null, "return": null}, {"desc": "Parasite count", "label": "ParasiteCount", "addr": {"J": "2FEF0", "U": "2FEF0", "E": "2FFBC"}, "size": "54", "mode": "thumb", "params": null, "return": {"desc": "Count greater than 3", "type": "bool"}, "notes": "Counts the number of bugs that are on pose 0x43, used to know if Samus should take damage"}, {"desc": "Parasite initialize", "label": "ParasiteInit", "addr": {"J": "2FF44", "U": "2FF44", "E": "30010"}, "size": "12C", "mode": "thumb", "params": [{"desc": "Current sprite pointer", "type": "ptr.SpriteData"}], "return": null, "notes": "Initialize a parasite sprite"}, {"desc": "Parasite grab Samus", "label": "ParasiteGrabSamus", "addr": {"J": "30070", "U": "30070", "E": "3013C"}, "size": "90", "mode": "thumb", "params": [{"desc": "Current sprite pointer", "type": "ptr.SpriteData"}], "return": null, "notes": "Handles the parasite grabbing Samus"}, {"desc": "Parasite Samus grabbed", "label": "ParasiteSamusGrabbed", "addr": {"J": "30100", "U": "30100", "E": "301CC"}, "size": "190", "mode": "thumb", "params": [{"desc": "Current sprite pointer", "type": "ptr.SpriteData"}], "return": null, "notes": "Handles the parasite behavior when grabbing Samus"}, {"desc": "Parasite expulsed graphics initialize", "label": "ParasiteExpulsedGfxInit", "addr": {"J": "30290", "U": "30290", "E": "3035C"}, "size": "30", "mode": "thumb", "params": [{"desc": "Current sprite pointer", "type": "ptr.SpriteData"}], "return": null, "notes": "Initialize the graphics for the parasite getting expulsed"}, {"desc": "Parasite star explused after grabbing object", "label": "ParasiteStarExplusedAfterGrabbingObject", "addr": {"J": "302C0", "U": "302C0", "E": "3038C"}, "size": "A0", "mode": "thumb", "params": [{"desc": "Current sprite pointer", "type": "ptr.SpriteData"}], "return": null, "notes": "Handles the parasite starting to get expulsed when he was previously on an object (geron or Samus)"}, {"desc": "Parasite expulsed", "label": "ParasiteExpulsed", "addr": {"J": "30360", "U": "30360", "E": "3042C"}, "size": "A8", "mode": "thumb", "params": [{"desc": "Current sprite pointer", "type": "ptr.SpriteData"}], "return": null, "notes": "Handles the parasite getting expulsed"}, {"desc": "Parasite explused after grabbing object", "label": "ParasiteExplusedAfterGrabbingObject", "addr": {"J": "30408", "U": "30408", "E": "304D4"}, "size": "E8", "mode": "thumb", "params": [{"desc": "Current sprite pointer", "type": "ptr.SpriteData"}], "return": null, "notes": "Handles the parasite getting expulsed when he was previously on an object (geron or Samus)"}, {"desc": "Parasite falling", "label": "ParasiteFalling", "addr": {"J": "304F0", "U": "304F0", "E": "305BC"}, "size": "DC", "mode": "thumb", "params": [{"desc": "Current sprite pointer", "type": "ptr.SpriteData"}], "return": null, "notes": "Handles the parasite falling"}, {"desc": "Parasite jumping", "label": "ParasiteJumping", "addr": {"J": "30684", "U": "30684", "E": "30750"}, "size": "BC", "mode": "thumb", "params": [{"desc": "Current sprite pointer", "type": "ptr.SpriteData"}], "return": null, "notes": "Handles the parasite jumping"}, {"desc": "Parasite jumping second part", "label": "ParasiteJumpingSecondPart", "addr": {"J": "3080C", "U": "3080C", "E": "308D8"}, "size": "C0", "mode": "thumb", "params": [{"desc": "Current sprite pointer", "type": "ptr.SpriteData"}], "return": null, "notes": "Handles the second part of the parasite jumping"}, {"desc": "Parasite crouching graphics initialize", "label": "ParasiteCrouchingGfxInit", "addr": {"J": "308CC", "U": "308CC", "E": "30998"}, "size": "50", "mode": "thumb", "params": [{"desc": "Current sprite pointer", "type": "ptr.SpriteData"}], "return": null, "notes": "Initialize the graphics for the parasite crouching"}, {"desc": "Parasite walking", "label": "ParasiteWalking", "addr": {"J": "30AB4", "U": "30AB4", "E": "30B80"}, "size": "1A4", "mode": "thumb", "params": [{"desc": "Current sprite pointer", "type": "ptr.SpriteData"}], "return": null, "notes": "Handles the parasite walking"}, {"desc": "Parasite uncrouching graphics initialize", "label": "ParasiteUncrouchingGfxInit", "addr": {"J": "30C58", "U": "30C58", "E": "30D24"}, "size": "1C", "mode": "thumb", "params": [{"desc": "Current sprite pointer", "type": "ptr.SpriteData"}], "return": null, "notes": "Initialize the graphics for the parasite uncrouching"}, {"desc": "Parasite check turning around animation ended", "label": "ParasiteCheckTurningAroundAnimEnded", "addr": {"J": "30C74", "U": "30C74", "E": "30D40"}, "size": "24", "mode": "thumb", "params": [{"desc": "Current sprite pointer", "type": "ptr.SpriteData"}], "return": null, "notes": "Checks if the turning around animationation has ended"}, {"desc": "Parasite check turning around animation near ended", "label": "ParasiteCheckTurningAroundAnimNearEnded", "addr": {"J": "30C98", "U": "30C98", "E": "30D64"}, "size": "1C", "mode": "thumb", "params": [{"desc": "Current sprite pointer", "type": "ptr.SpriteData"}], "return": null, "notes": "Checks if the turning around animationation has nearly ended"}, {"desc": "Parasite landing", "label": "ParasiteLanding", "addr": {"J": "30CD4", "U": "30CD4", "E": "30DA0"}, "size": "A0", "mode": "thumb", "params": [{"desc": "Current sprite pointer", "type": "ptr.SpriteData"}], "return": null, "notes": "Handles the parasite landing"}, {"desc": "Parasite normal falling", "label": "ParasiteNormalFalling", "addr": {"J": "30D84", "U": "30D84", "E": "30E50"}, "size": "74", "mode": "thumb", "params": [{"desc": "Current sprite pointer", "type": "ptr.SpriteData"}], "return": null, "notes": "Handles the parasite falling normally (block broken below)"}, {"desc": "Parasite check event", "label": "ParasiteCheckEvent", "addr": {"J": "30E54", "U": "30E54", "E": "30F20"}, "size": "60", "mode": "thumb", "params": [{"desc": "Current sprite pointer", "type": "ptr.SpriteData"}], "return": null, "notes": "Checks if the bugs killed event should be set"}, {"desc": "Parasite grab geron", "label": "ParasiteGrabGeron", "addr": {"J": "30EB4", "U": "30EB4", "E": "30F80"}, "size": "98", "mode": "thumb", "params": [{"desc": "Current sprite pointer", "type": "ptr.SpriteData"}], "return": null, "notes": "Handles the bug grabbing a geron"}, {"desc": "Parasite bomb collision", "label": "ParasiteBombCollision", "addr": {"J": "310E8", "U": "310E8", "E": "311B4"}, "size": "118", "mode": "thumb", "params": [{"desc": "Current sprite pointer", "type": "ptr.SpriteData"}], "return": null, "notes": "Handles the collision with a bomb exploding"}, {"desc": "Parasite (multiple) AI", "label": "Parasite_Multiple_AI", "addr": {"J": "31200", "U": "31200", "E": "312CC"}, "size": "27C", "mode": "thumb", "params": null, "return": null}, {"desc": "Parasite AI", "label": "Parasite_AI", "addr": {"J": "3147C", "U": "3147C", "E": "31548"}, "size": "28C", "mode": "thumb", "params": null, "return": null}, {"desc": "Piston change four current clipdata action", "label": "PistonChangeFourClipAction", "addr": {"J": "31708", "U": "31708", "E": "317D4"}, "size": "54", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Enable the hitbox for the piston"}, {"desc": "Piston change one below current clipdata action", "label": "PistonChangeOneBelowClipAction", "addr": {"J": "3175C", "U": "3175C", "E": "31828"}, "size": "20", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Enable/disable the hitbox of the bottom block of the piston"}, {"desc": "Piston change one upper current clipdata action", "label": "PistonChangeOneUpperClipAction", "addr": {"J": "3177C", "U": "3177C", "E": "31848"}, "size": "28", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Enable the hitbox of the top block of the piston"}, {"desc": "Piston check Samus in", "label": "PistonCheckSamusIn", "addr": {"J": "317E4", "U": "317E4", "E": "318B0"}, "size": "4C", "mode": "thumb", "params": null, "return": {"desc": "In", "type": "bool"}, "notes": "Checks if Samus is in the top part of the piston after it went up"}, {"desc": "Piston initialize", "label": "PistonInit", "addr": {"J": "31830", "U": "31830", "E": "318FC"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a piston sprite"}, {"desc": "Piston graphics initialize", "label": "PistonGfxInit", "addr": {"J": "31890", "U": "31890", "E": "3195C"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the piston"}, {"desc": "Piston check projectile", "label": "PistonCheckProjectile", "addr": {"J": "318BC", "U": "318BC", "E": "31988"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Checks for a projectile"}, {"desc": "Piston move", "label": "PistonMove", "addr": {"J": "31944", "U": "31944", "E": "31A10"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Handles the piston moving"}, {"desc": "Piston after moving", "label": "PistonAfterMoving", "addr": {"J": "3199C", "U": "3199C", "E": "31A68"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Called after the piston finished moving"}, {"desc": "Piston AI", "label": "Piston_AI", "addr": {"J": "319D0", "U": "319D0", "E": "31A9C"}, "size": "D4", "mode": "thumb", "params": null, "return": null}, {"desc": "Ridley check dead", "label": "RidleyCheckDead", "addr": {"J": "31C58", "U": "31C58", "E": "31D24"}, "size": "180", "mode": "thumb", "params": null, "return": null, "notes": "Checks if Ridley is dead"}, {"desc": "Ridley Samus grabbed", "label": "RidleySamusGrabbed", "addr": {"J": "31E40", "U": "31E40", "E": "31F0C"}, "size": "268", "mode": "thumb", "params": [{"desc": "RAM Slot", "type": "u8"}], "return": null, "notes": "Handles Ridley grabbing Samus"}, {"desc": "Ridley tail attacks X move", "label": "RidleyTailAttacksXMove", "addr": {"J": "320D8", "U": "320D8", "E": "321A4"}, "size": "B0", "mode": "thumb", "params": [{"desc": "X movement", "type": "u16"}], "return": {"desc": "Previous collision not air", "type": "bool"}, "notes": "Handles Ridley moving horizontally when doing tail attacks"}, {"desc": "Ridley tail attacks Y move", "label": "RidleyTailAttacksYMove", "addr": {"J": "32188", "U": "32188", "E": "32254"}, "size": "44", "mode": "thumb", "params": [{"desc": "Y movement", "type": "u16"}], "return": null, "notes": "Handles Ridley moving vertically when doing tail attacks"}, {"desc": "Ridley spawn fireballs start", "label": "RidleySpawnFireballsStart", "addr": {"J": "321CC", "U": "321CC", "E": "32298"}, "size": "58", "mode": "thumb", "params": [{"desc": "OAM Scaling", "type": "u16"}], "return": null, "notes": "Spawns the fireballs at the beginning of the fight using r0 for room slot"}, {"desc": "Ridley check spawn", "label": "RidleyCheckSpawn", "addr": {"J": "32224", "U": "32224", "E": "322F0"}, "size": "284", "mode": "thumb", "params": null, "return": null, "notes": "Checks if Ridley should spawn and spawns it if yes"}, {"desc": "Ridley play cutscene", "label": "RidleyPlayCutscene", "addr": {"J": "324A8", "U": "324A8", "E": "32574"}, "size": "B4", "mode": "thumb", "params": null, "return": null, "notes": "Checks if Samus is facing left, if yes plays cutscene"}, {"desc": "Ridley spawning", "label": "RidleySpawning", "addr": {"J": "3255C", "U": "3255C", "E": "32628"}, "size": "6E4", "mode": "thumb", "params": null, "return": null, "notes": "Handles Ridley spawning"}, {"desc": "Ridley flying graphics initialize", "label": "RidleyFlyingGfxInit", "addr": {"J": "32C40", "U": "32C40", "E": "32D0C"}, "size": "B8", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for Ridley flying normally"}, {"desc": "Ridley turning around graphics initialize", "label": "RidleyTurningAroundGfxInit", "addr": {"J": "332F4", "U": "332F4", "E": "333C0"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for Ridley turning around"}, {"desc": "Ridley check turning around animation near ended", "label": "RidleyCheckTurningAroundAnimNearEnded", "addr": {"J": "3337C", "U": "3337C", "E": "33448"}, "size": "94", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the turning around animationation has nearly ended"}, {"desc": "Ridley check turning around second part animation ended", "label": "RidleyCheckTurningAroundSecondPartAnimEnded", "addr": {"J": "33410", "U": "33410", "E": "334DC"}, "size": "94", "mode": "thumb", "params": null, "return": null, "notes": "Check if the second part of the turning around animationation has ended"}, {"desc": "Ridley_Empty", "label": "Ridley_Empty", "addr": {"J": "338B4", "U": "338B4", "E": "33980"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "Empty function"}, {"desc": "Ridley big fireballs attack", "label": "RidleyBigFireballsAttack", "addr": {"J": "339D4", "U": "339D4", "E": "33AA0"}, "size": "12C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the big fireballs attack"}, {"desc": "Ridley dying", "label": "RidleyDying", "addr": {"J": "33B00", "U": "33B00", "E": "33BCC"}, "size": "214", "mode": "thumb", "params": null, "return": null, "notes": "Handles Ridley dying, sets random particle effects and sets the Ridley killed event"}, {"desc": "Ridley body initialize", "label": "RidleyBodyInit", "addr": {"J": "33D14", "U": "33D14", "E": "33DE0"}, "size": "148", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a Ridley body sprite"}, {"desc": "Ridley tail dead", "label": "RidleyTailDead", "addr": {"J": "33F74", "U": "33F74", "E": "34040"}, "size": "144", "mode": "thumb", "params": null, "return": null, "notes": "Handles the Ridley tail dying"}, {"desc": "Ridley tail initialize", "label": "RidleyTailInit", "addr": {"J": "340B8", "U": "340B8", "E": "34184"}, "size": "9C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a Ridley tail sprite"}, {"desc": "Ridley fire ball initialize", "label": "RidleyFireBallInit", "addr": {"J": "34710", "U": "34710", "E": "347DC"}, "size": "14C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a Ridley fire ball sprite"}, {"desc": "Ridley fire ball small move", "label": "RidleyFireBallSmallMove", "addr": {"J": "3485C", "U": "3485C", "E": "34928"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the small fire balls (when Samus is grabbed)"}, {"desc": "Ridley fire ball big move", "label": "RidleyFireBallBigMove", "addr": {"J": "348B4", "U": "348B4", "E": "34980"}, "size": "6C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the big fire balls (when Samus is grabbed)"}, {"desc": "Ridley fire ball medium move", "label": "RidleyFireBallMediumMove", "addr": {"J": "34920", "U": "34920", "E": "349EC"}, "size": "74", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the medium fire balls (at the beginning of the fight)"}, {"desc": "Ridley AI", "label": "Ridley_AI", "addr": {"J": "34A38", "U": "34A38", "E": "34B04"}, "size": "2EC", "mode": "thumb", "params": null, "return": null}, {"desc": "Ridley tail AI", "label": "RidleyTail_AI", "addr": {"J": "34D24", "U": "34D24", "E": "34DF0"}, "size": "310", "mode": "thumb", "params": null, "return": null}, {"desc": "Ridley body AI", "label": "RidleyBody_AI", "addr": {"J": "35034", "U": "35034", "E": "35100"}, "size": "168", "mode": "thumb", "params": null, "return": null}, {"desc": "Ridley fireball AI", "label": "RidleyFireball_AI", "addr": {"J": "3519C", "U": "3519C", "E": "35268"}, "size": "1C4", "mode": "thumb", "params": null, "return": null}, {"desc": "Metroid midair", "label": "MetroidMidair", "addr": {"J": "35360", "U": "35360", "E": "3542C"}, "size": "7C", "mode": "thumb", "params": [{"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}], "return": {"desc": "Not midair", "type": "bool"}, "notes": "Checks if midair, used when Samus is grabbed for the movement"}, {"desc": "Metroid move", "label": "MetroidMove", "addr": {"J": "353DC", "U": "353DC", "E": "354A8"}, "size": "30C", "mode": "thumb", "params": [{"desc": "Samus Y position", "type": "u16"}, {"desc": "Samus X position", "type": "u16"}, {"desc": "Y speed", "type": "u8"}, {"desc": "X speed", "type": "u8"}, {"desc": "Speed divisor", "type": "u8"}], "return": null}, {"desc": "Metroid bomb detection", "label": "MetroidBombDetection", "addr": {"J": "356E8", "U": "356E8", "E": "357B4"}, "size": "BC", "mode": "thumb", "params": null, "return": {"desc": "Bomb touching", "type": "bool"}, "notes": "Detects if a bomb is colliding with the metroid"}, {"desc": "Metroid check bouncing on metroid", "label": "MetroidCheckBouncingOnMetroid", "addr": {"J": "357A4", "U": "357A4", "E": "35870"}, "size": "1B8", "mode": "thumb", "params": [{"desc": "Movement", "type": "u16"}], "return": null, "notes": "Checks if the metroid is colliding with another metroid, if yes makes them bounce"}, {"desc": "Metroid check Samus grabbed", "label": "MetroidCheckSamusGrabbed", "addr": {"J": "3595C", "U": "3595C", "E": "35A28"}, "size": "48", "mode": "thumb", "params": null, "return": {"desc": "Samus grabbed", "type": "bool"}}, {"desc": "Metroid play sound", "label": "MetroidPlaySound", "addr": {"J": "359A4", "U": "359A4", "E": "35A70"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Plays a sound if conditions are true"}, {"desc": "Metroid initialize", "label": "MetroidInit", "addr": {"J": "359D0", "U": "359D0", "E": "35A9C"}, "size": "184", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a metroid sprite"}, {"desc": "Metroid check spawn", "label": "MetroidCheckSpawn", "addr": {"J": "35B54", "U": "35B54", "E": "35C20"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the metroid should spawn (is on screen)"}, {"desc": "Metroid spawning", "label": "MetroidSpawning", "addr": {"J": "35B98", "U": "35B98", "E": "35C64"}, "size": "DC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the metroid spawning"}, {"desc": "Metroid spawned graphics initialize", "label": "MetroidSpawnedGfxInit", "addr": {"J": "35C74", "U": "35C74", "E": "35D40"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the metroid after spawning"}, {"desc": "Metroid movement", "label": "MetroidMovement", "addr": {"J": "35CA8", "U": "35CA8", "E": "35D74"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Calls MetroidMove, MetroidCheckBouncingOnMetroid and checks if grabbing Samus"}, {"desc": "Metroid grab Samus graphics initialize", "label": "MetroidGrabSamusGfxInit", "addr": {"J": "35D28", "U": "35D28", "E": "35DF4"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the metroid grabbing Samus and sets the Grabbed By Metroid flag"}, {"desc": "Metroid Samus grabbed", "label": "MetroidSamusGrabbed", "addr": {"J": "35D6C", "U": "35D6C", "E": "35E38"}, "size": "168", "mode": "thumb", "params": null, "return": null, "notes": "Handles the metroid having grabbed Samus (movement and release)"}, {"desc": "Metroid death", "label": "MetroidDeath", "addr": {"J": "35ED4", "U": "35ED4", "E": "35FA0"}, "size": "13C", "mode": "thumb", "params": null, "return": null, "notes": "Calls SpriteDeath and checks if all metroids are dead, sets event accordingly"}, {"desc": "Metroid AI", "label": "Metroid_AI", "addr": {"J": "36010", "U": "36010", "E": "360DC"}, "size": "160", "mode": "thumb", "params": null, "return": null}, {"desc": "Metroid shell AI", "label": "MetroidShell_AI", "addr": {"J": "36170", "U": "36170", "E": "3623C"}, "size": "104", "mode": "thumb", "params": null, "return": null}, {"desc": "Metroid door lock AI", "label": "MetroidDoorLock_AI", "addr": {"J": "36274", "U": "36274", "E": "36340"}, "size": "98", "mode": "thumb", "params": null, "return": null}, {"desc": "Rinka initialize", "label": "RinkaInit", "addr": {"J": "3630C", "U": "3630C", "E": "363D8"}, "size": "98", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a rinka sprite"}, {"desc": "Rinka graphics initialize", "label": "RinkaGfxInit", "addr": {"J": "363A4", "U": "363A4", "E": "36470"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the rinka"}, {"desc": "Rinka respawn", "label": "RinkaRespawn", "addr": {"J": "363E0", "U": "363E0", "E": "364AC"}, "size": "94", "mode": "thumb", "params": null, "return": null, "notes": "Handles the respawning of the rinka"}, {"desc": "Rinka spawning", "label": "RinkaSpawning", "addr": {"J": "36474", "U": "36474", "E": "36540"}, "size": "118", "mode": "thumb", "params": null, "return": null, "notes": "Handles the rinka spawning"}, {"desc": "Rinka move", "label": "RinkaMove", "addr": {"J": "3658C", "U": "3658C", "E": "36658"}, "size": "234", "mode": "thumb", "params": null, "return": null, "notes": "Handles the rinka moving"}, {"desc": "Rinka Mother Brain graphics initialize", "label": "RinkaMotherBrainGfxInit", "addr": {"J": "367C0", "U": "367C0", "E": "3688C"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the Mother Brain rinka"}, {"desc": "Rinka Mother Brain respawn", "label": "RinkaMotherBrainRespawn", "addr": {"J": "367E0", "U": "367E0", "E": "368AC"}, "size": "184", "mode": "thumb", "params": null, "return": null, "notes": "Handles the respawning of thte Mother Brain rinka"}, {"desc": "Rinka Mother Brain spawning", "label": "RinkaMotherBrainSpawning", "addr": {"J": "36964", "U": "36964", "E": "36A30"}, "size": "110", "mode": "thumb", "params": null, "return": null, "notes": "Handles the Mother Brain rinka spawning"}, {"desc": "Rinka Mother Brain move", "label": "RinkaMotherBrainMove", "addr": {"J": "36A74", "U": "36A74", "E": "36B40"}, "size": "2C0", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the Mother Brain rinka and determines where it spawns"}, {"desc": "Rinka AI", "label": "Rinka_AI", "addr": {"J": "36D34", "U": "36D34", "E": "36E00"}, "size": "9C", "mode": "thumb", "params": null, "return": null}, {"desc": "Rinka (Mother Brain) AI", "label": "Rinka_MotherBrain_AI", "addr": {"J": "36DD0", "U": "36DD0", "E": "36E9C"}, "size": "F4", "mode": "thumb", "params": null, "return": null}, {"desc": "Polyp initialize", "label": "PolypInit", "addr": {"J": "36EC4", "U": "36EC4", "E": "36F90"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a polyp sprite"}, {"desc": "Polyp graphics initialize", "label": "PolypGfxInit", "addr": {"J": "36F10", "U": "36F10", "E": "36FDC"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the polyp"}, {"desc": "Polyp check spawn projectile", "label": "PolypCheckSpawnProjectile", "addr": {"J": "36F34", "U": "36F34", "E": "37000"}, "size": "74", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the polyp can spawn a projectile"}, {"desc": "Polyp check spitting animation ended", "label": "PolypCheckSpittingAnimEnded", "addr": {"J": "36FA8", "U": "36FA8", "E": "37074"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the spitting animationation has ended"}, {"desc": "Polyp spawn projectile", "label": "PolypSpawnProjectile", "addr": {"J": "36FD8", "U": "36FD8", "E": "370A4"}, "size": "64", "mode": "thumb", "params": null, "return": null, "notes": "Spawns a poly projectile"}, {"desc": "Polyp check after spitting animation ended", "label": "PolypCheckAfterSpittingAnimEnded", "addr": {"J": "3703C", "U": "3703C", "E": "37108"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the after spitting animationation has ended"}, {"desc": "Polyp check retracting animation near ended", "label": "PolypCheckRetractingAnimNearEnded", "addr": {"J": "37068", "U": "37068", "E": "37134"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the retracting animationation has nearly ended"}, {"desc": "Polyp projectile initialize", "label": "PolypProjectileInit", "addr": {"J": "37084", "U": "37084", "E": "37150"}, "size": "E0", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a polyp projectile sprite"}, {"desc": "Polyp projectile spawn", "label": "PolypProjectileSpawn", "addr": {"J": "37164", "U": "37164", "E": "37230"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Handles the spawning of the polyp projectile"}, {"desc": "Polyp projectile move", "label": "PolypProjectileMove", "addr": {"J": "371AC", "U": "371AC", "E": "37278"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the polyp projectile"}, {"desc": "Polyp projectile exploding graphics initialize", "label": "PolypProjectileExplodingGfxInit", "addr": {"J": "37234", "U": "37234", "E": "37300"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the polyp projectile exploding"}, {"desc": "Polyp projectile check exploding animation ended", "label": "PolypProjectileCheckExplodingAnimEnded", "addr": {"J": "37284", "U": "37284", "E": "37350"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the exploding animationation has ended"}, {"desc": "Polyp AI", "label": "Polyp_AI", "addr": {"J": "372A8", "U": "372A8", "E": "37374"}, "size": "11C", "mode": "thumb", "params": null, "return": null}, {"desc": "Polyp projectile AI", "label": "PolypProjectile_AI", "addr": {"J": "373C4", "U": "373C4", "E": "37490"}, "size": "78", "mode": "thumb", "params": null, "return": null}, {"desc": "Viola initialize", "label": "ViolaInit", "addr": {"J": "3743C", "U": "3743C", "E": "37508"}, "size": "120", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a viola sprite"}, {"desc": "Viola move right", "label": "ViolaMoveRight", "addr": {"J": "3755C", "U": "3755C", "E": "37628"}, "size": "1A8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the viola moving to the right"}, {"desc": "Viola move left", "label": "ViolaMoveLeft", "addr": {"J": "37704", "U": "37704", "E": "377D0"}, "size": "148", "mode": "thumb", "params": null, "return": null, "notes": "Handles the viola moving to the left"}, {"desc": "Viola move down", "label": "ViolaMoveDown", "addr": {"J": "3784C", "U": "3784C", "E": "37918"}, "size": "148", "mode": "thumb", "params": null, "return": null, "notes": "Handles the viola moving down"}, {"desc": "Viola move up", "label": "ViolaMoveUp", "addr": {"J": "37994", "U": "37994", "E": "37A60"}, "size": "14C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the viola moving up"}, {"desc": "Viola start falling", "label": "ViolaStartFalling", "addr": {"J": "37AE0", "U": "37AE0", "E": "37BAC"}, "size": "18", "mode": "thumb", "params": null, "return": null, "notes": "Handles the start of the falling"}, {"desc": "Viola falling", "label": "ViolaFalling", "addr": {"J": "37AF8", "U": "37AF8", "E": "37BC4"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Handles the viola falling"}, {"desc": "Viola AI", "label": "Viola_AI", "addr": {"J": "37B70", "U": "37B70", "E": "37C3C"}, "size": "14C", "mode": "thumb", "params": null, "return": null}, {"desc": "Security laser initialize", "label": "SecurityLaserInit", "addr": {"J": "37CBC", "U": "37CBC", "E": "37D88"}, "size": "21C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a security laser sprite"}, {"desc": "Security laser Samus collision", "label": "SecurityLaserSamusCollision", "addr": {"J": "37ED8", "U": "37ED8", "E": "37FA4"}, "size": "13C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the security laser colliding with Samus"}, {"desc": "Security laser check despawn animation ended", "label": "SecurityLaserCheckDespawnAnimEnded", "addr": {"J": "38014", "U": "38014", "E": "380E0"}, "size": "D4", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the despawning animationation has ended"}, {"desc": "Security laser set alarm", "label": "SecurityLaserSetAlarm", "addr": {"J": "380E8", "U": "380E8", "E": "381B4"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Sets the alarm"}, {"desc": "Security laser (unused)", "label": "SecurityLaser_Unused", "addr": {"J": "38104", "U": "38104", "E": "381D0"}, "size": "CC", "mode": "thumb", "params": null, "return": null, "notes": "Very similar code to SecurityLaserCheckDespawnAnimEnded, seems unused"}, {"desc": "Security laser AI", "label": "SecurityLaser_AI", "addr": {"J": "381D0", "U": "381D0", "E": "3829C"}, "size": "13C", "mode": "thumb", "params": null, "return": null}, {"desc": "Holtz Y movement", "label": "HoltzYMovement", "addr": {"J": "3830C", "U": "3830C", "E": "383D8"}, "size": "CC", "mode": "thumb", "params": [{"desc": "Y movement", "type": "u16"}], "return": {"desc": "Previous collision check is solid", "type": "bool"}, "notes": "Handles the vertical movement of the holtz"}, {"desc": "Holtz X movement", "label": "HoltzXMovement", "addr": {"J": "383D8", "U": "383D8", "E": "384A4"}, "size": "8C", "mode": "thumb", "params": [{"desc": "X movement", "type": "u16"}], "return": {"desc": "Previous collision check is solid", "type": "bool"}, "notes": "Handles the horizontal movement of the holtz"}, {"desc": "Holtz initialize", "label": "HoltzInit", "addr": {"J": "38464", "U": "38464", "E": "38530"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a holtz sprite"}, {"desc": "Holtz graphics initialize", "label": "HoltzGfxInit", "addr": {"J": "384DC", "U": "384DC", "E": "385A8"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the holtz"}, {"desc": "Holtz Samus detection", "label": "HoltzSamusDetection", "addr": {"J": "38518", "U": "38518", "E": "385E4"}, "size": "70", "mode": "thumb", "params": null, "return": null, "notes": "Handles the idle animationation and Samus detection"}, {"desc": "Holtz warning graphics initialize", "label": "HoltzWarningGfxInit", "addr": {"J": "38588", "U": "38588", "E": "38654"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the holtz warning"}, {"desc": "Holtz check warning animation ended", "label": "HoltzCheckWarningAnimEnded", "addr": {"J": "385A8", "U": "385A8", "E": "38674"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the warning animationation has ended"}, {"desc": "Holtz going down move", "label": "HoltzGoingDownMove", "addr": {"J": "38638", "U": "38638", "E": "38704"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the holtz going down"}, {"desc": "Holtz sliding move", "label": "HoltzSlidingMove", "addr": {"J": "38698", "U": "38698", "E": "38764"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the holtz sliding on the ground"}, {"desc": "Holtz going up move", "label": "HoltzGoingUpMove", "addr": {"J": "386E4", "U": "386E4", "E": "387B0"}, "size": "9C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the holtz going up"}, {"desc": "Holtz back to ceiling", "label": "HoltzBackToCeiling", "addr": {"J": "38780", "U": "38780", "E": "3884C"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Handles the animationation of the holtz back on the ceiling"}, {"desc": "Holtz AI", "label": "Holtz_AI", "addr": {"J": "387D0", "U": "387D0", "E": "3889C"}, "size": "1AC", "mode": "thumb", "params": null, "return": null}, {"desc": "Gekitai machine AI", "label": "GekitaiMachine_AI", "addr": {"J": "3897C", "U": "3897C", "E": "38A48"}, "size": "C", "mode": "thumb", "params": null, "return": null}, {"desc": "Calculate delay for Ruins Test", "label": "CalculateDelayForRuinsTest", "addr": {"J": "38988", "U": "38988", "E": "38A54"}, "size": "24", "mode": "thumb", "params": null, "return": null}, {"desc": "Ruins test change current clipdata action", "label": "RuinsTestChangeClipAction", "addr": {"J": "389AC", "U": "389AC", "E": "38A78"}, "size": "D8", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Disables the ceiling hitbox"}, {"desc": "Ruins test move to position", "label": "RuinsTestMoveToPosition", "addr": {"J": "38A84", "U": "38A84", "E": "38B50"}, "size": "1D0", "mode": "thumb", "params": [{"desc": "Target Y position?", "type": "u16"}, {"desc": "Target X position?", "type": "u16"}, {"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}, {"desc": "OAM Scaling", "type": "u16"}, {"desc": "Always 4?", "type": "u16"}], "return": null, "notes": "Handles slowly moving an object from r2 and r3 to r0 and r1? Used to move the ghost back at the center at the end of the fight and to move the symbols to the corners"}, {"desc": "Ruins test projectile collision", "label": "RuinsTestProjectileCollision", "addr": {"J": "38C54", "U": "38C54", "E": "38D20"}, "size": "D4", "mode": "thumb", "params": null, "return": {"desc": "Colliding", "type": "bool"}, "notes": "Checks if a projectile is colliding with the shootable symbol Handles Samus taking damage"}, {"desc": "Ruins test check Samus hurting", "label": "RuinsTestCheckSamusHurting", "addr": {"J": "38DF4", "U": "38DF4", "E": "38EC0"}, "size": "34", "mode": "thumb", "params": null, "return": {"desc": "Samus getting hurt", "type": "bool"}, "notes": "Checks if the current sprite mosaic flag is on and if Samus' current pose is Getting Hurt"}, {"desc": "Ruins test ghost move", "label": "RuinsTestGhostMove", "addr": {"J": "38F44", "U": "38F44", "E": "39010"}, "size": "9C", "mode": "thumb", "params": [{"desc": "Random number", "type": "u8"}], "return": null, "notes": "Moves the ghost depending on the Sine Y Values table"}, {"desc": "Ruins test initialize", "label": "RuinsTestInit", "addr": {"J": "38FE0", "U": "38FE0", "E": "390AC"}, "size": "EC", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a ruins test sprite"}, {"desc": "Ruins test spawn reflection start", "label": "RuinsTestSpawnReflectionStart", "addr": {"J": "3910C", "U": "3910C", "E": "391D8"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Spawns the ruins test reflection cover and the ruins test Samus reflection start"}, {"desc": "Ruins test check Samus not facing background", "label": "RuinsTestCheckSamusNotFacingBackground", "addr": {"J": "391C4", "U": "391C4", "E": "39290"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if Samus is still facing the background"}, {"desc": "Ruins test spawn ghost", "label": "RuinsTestSpawnGhost", "addr": {"J": "39234", "U": "39234", "E": "39300"}, "size": "94", "mode": "thumb", "params": null, "return": null, "notes": "Spawn the ruins test ghost and the ruins test ghost outline sprites"}, {"desc": "Ruins test after ghost spawn", "label": "RuinsTestAfterGhostSpawn", "addr": {"J": "392C8", "U": "392C8", "E": "39394"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Called once after the ghost spawn"}, {"desc": "Ruins test move ghost to center", "label": "RuinsTestMoveGhostToCenter", "addr": {"J": "39610", "U": "39610", "E": "396DC"}, "size": "94", "mode": "thumb", "params": null, "return": null, "notes": "Moves the ghost back to the center at the end of the fight"}, {"desc": "Ruins test reflection end", "label": "RuinsTestReflectionEnd", "addr": {"J": "396D0", "U": "396D0", "E": "3979C"}, "size": "A4", "mode": "thumb", "params": null, "return": null, "notes": "Spawns the ruins test Samus reflection end, plays the getting fully powered suit cutscene sets the fully powered suit event, and calls RuinsTestChangeClipAction"}, {"desc": "Ruins test ghost initialize", "label": "RuinsTestGhostInit", "addr": {"J": "39774", "U": "39774", "E": "39840"}, "size": "118", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a ruins test ghost sprite"}, {"desc": "Ruins test ghost spawn", "label": "RuinsTestGhostSpawn", "addr": {"J": "3988C", "U": "3988C", "E": "39958"}, "size": "74", "mode": "thumb", "params": null, "return": null, "notes": "Handles the spawning of the ruins test ghost"}, {"desc": "Ruins test ghost sync position", "label": "RuinsTestGhostSyncPosition", "addr": {"J": "39900", "U": "39900", "E": "399CC"}, "size": "FC", "mode": "thumb", "params": null, "return": null, "notes": "Synchronizes the ghost position with the main ruins test sprite"}, {"desc": "Ruins test ghost despawn", "label": "RuinsTestGhostDespawn", "addr": {"J": "399FC", "U": "399FC", "E": "39AC8"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Handles the despawning of the ruins test ghost"}, {"desc": "Ruins test ghost after first symbol", "label": "RuinsTestGhostAfterFirstSymbol", "addr": {"J": "39C74", "U": "39C74", "E": "39D40"}, "size": "17C", "mode": "thumb", "params": null, "return": null, "notes": "Called after the first symbol is in place"}, {"desc": "Ruins test ghost after fight", "label": "RuinsTestGhostAfterFight", "addr": {"J": "39DF0", "U": "39DF0", "E": "39EBC"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Called once at the end of the fight"}, {"desc": "Ruins Test AI", "label": "RuinsTest_AI", "addr": {"J": "39E78", "U": "39E78", "E": "39F44"}, "size": "2F4", "mode": "thumb", "params": null, "return": null}, {"desc": "Ruins Test symbol AI", "label": "RuinsTestSymbol_AI", "addr": {"J": "3A16C", "U": "3A16C", "E": "3A238"}, "size": "394", "mode": "thumb", "params": null, "return": null}, {"desc": "Ruins Test Samus reflection (start) AI", "label": "RuinsTestSamusReflection_Start_AI", "addr": {"J": "3A500", "U": "3A500", "E": "3A5CC"}, "size": "1B8", "mode": "thumb", "params": null, "return": null}, {"desc": "Ruins Test reflection cover AI", "label": "RuinsTestReflectionCover_AI", "addr": {"J": "3A6B8", "U": "3A6B8", "E": "3A784"}, "size": "C8", "mode": "thumb", "params": null, "return": null}, {"desc": "Ruins Test ghost outline AI", "label": "RuinsTestGhostOutline_AI", "addr": {"J": "3A780", "U": "3A780", "E": "3A84C"}, "size": "134", "mode": "thumb", "params": null, "return": null}, {"desc": "Ruins Test shootable symbol AI", "label": "RuinsTestShootableSymbol_AI", "addr": {"J": "3A8B4", "U": "3A8B4", "E": "3A980"}, "size": "24C", "mode": "thumb", "params": null, "return": null}, {"desc": "Ruins Test ghost AI", "label": "RuinsTestGhost_AI", "addr": {"J": "3AB00", "U": "3AB00", "E": "3ABCC"}, "size": "168", "mode": "thumb", "params": null, "return": null}, {"desc": "Ruins Test Samus reflection (end) AI", "label": "RuinsTestSamusReflection_End_AI", "addr": {"J": "3AC68", "U": "3AC68", "E": "3AD34"}, "size": "3D4", "mode": "thumb", "params": null, "return": null}, {"desc": "Ruins test lightning initialize", "label": "RuinsTestLightningInit", "addr": {"J": "3B03C", "U": "3B03C", "E": "3B108"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a ruins test lightning sprite"}, {"desc": "Ruins Test lightning AI", "label": "RuinsTestLightning_AI", "addr": {"J": "3B06C", "U": "3B06C", "E": "3B138"}, "size": "300", "mode": "thumb", "params": null, "return": null}, {"desc": "Mella Y movement", "label": "MellaYMovement", "addr": {"J": "3B36C", "U": "3B36C", "E": "3B438"}, "size": "CC", "mode": "thumb", "params": [{"desc": "Y movement", "type": "u16"}], "return": {"desc": "Previous collision check is solid", "type": "bool"}, "notes": "Handles the Y movement of the mella"}, {"desc": "Mella X movement", "label": "MellaXMovement", "addr": {"J": "3B438", "U": "3B438", "E": "3B504"}, "size": "8C", "mode": "thumb", "params": [{"desc": "X movement", "type": "u16"}], "return": {"desc": "Previous collision check is solid", "type": "bool"}, "notes": "Handles the X movement of the mella"}, {"desc": "Mella initialize", "label": "MellaInit", "addr": {"J": "3B4C4", "U": "3B4C4", "E": "3B590"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a mella sprite"}, {"desc": "Mella idle graphics initialize", "label": "MellaIdleGfxInit", "addr": {"J": "3B52C", "U": "3B52C", "E": "3B5F8"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the mella being idle"}, {"desc": "Mella idle animationation", "label": "MellaIdleAnimation", "addr": {"J": "3B564", "U": "3B564", "E": "3B630"}, "size": "9C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the idle animationation and Samus detection"}, {"desc": "Mella going down graphics initialize", "label": "MellaGoingDownGfxInit", "addr": {"J": "3B600", "U": "3B600", "E": "3B6CC"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the mella going down"}, {"desc": "Mella start going down", "label": "MellaStartGoingDown", "addr": {"J": "3B624", "U": "3B624", "E": "3B6F0"}, "size": "64", "mode": "thumb", "params": null, "return": null, "notes": "Handles the mella starting to go down"}, {"desc": "Mella going down", "label": "MellaGoingDown", "addr": {"J": "3B688", "U": "3B688", "E": "3B754"}, "size": "94", "mode": "thumb", "params": null, "return": null, "notes": "Handles the mella going down"}, {"desc": "Mella going up", "label": "MellaGoingUp", "addr": {"J": "3B71C", "U": "3B71C", "E": "3B7E8"}, "size": "94", "mode": "thumb", "params": null, "return": null, "notes": "Handles the mella going up"}, {"desc": "Mella AI", "label": "Mella_AI", "addr": {"J": "3B7B0", "U": "3B7B0", "E": "3B87C"}, "size": "194", "mode": "thumb", "params": null, "return": null}, {"desc": "Atomic shoot electricity", "label": "AtomicShootElectricity", "addr": {"J": "3BC34", "U": "3BC34", "E": "3BD00"}, "size": "B8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the atomic shooting the electricity and the animationation before shooting"}, {"desc": "Atomic initialize", "label": "AtomicInit", "addr": {"J": "3BCEC", "U": "3BCEC", "E": "3BDB8"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an atomic sprite"}, {"desc": "Atomic graphics initialize", "label": "AtomicGfxInit", "addr": {"J": "3BD7C", "U": "3BD7C", "E": "3BE48"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the atomic"}, {"desc": "Atomic idle animationation", "label": "AtomicIdleAnimation", "addr": {"J": "3BDA8", "U": "3BDA8", "E": "3BE74"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Handles the idle animationation of the atomic"}, {"desc": "Atomic move", "label": "AtomicMove", "addr": {"J": "3BE38", "U": "3BE38", "E": "3BF04"}, "size": "144", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the atomic"}, {"desc": "Atomic electricity check atomic alive", "label": "AtomicElectricityCheckAtomicAlive", "addr": {"J": "3C150", "U": "3C150", "E": "3C21C"}, "size": "30", "mode": "thumb", "params": [{"desc": "RAM Slot", "type": "u8"}], "return": {"desc": "Not atomic or dead", "type": "bool"}, "notes": "Checks if the main sprite of the atomic electricity is an atomic and is alive"}, {"desc": "Atomic electricity initialize", "label": "AtomicElectricityInit", "addr": {"J": "3C180", "U": "3C180", "E": "3C24C"}, "size": "7C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an atomic electricity sprite"}, {"desc": "Atomic electricity spawn", "label": "AtomicElectricitySpawn", "addr": {"J": "3C1FC", "U": "3C1FC", "E": "3C2C8"}, "size": "1AC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the spawning of the atomic electricity"}, {"desc": "Atomic electricity move", "label": "AtomicElectricityMove", "addr": {"J": "3C3A8", "U": "3C3A8", "E": "3C474"}, "size": "C8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the atomic electricty moving"}, {"desc": "Atomic electricity exploding", "label": "AtomicElectricityExploding", "addr": {"J": "3C470", "U": "3C470", "E": "3C53C"}, "size": "54", "mode": "thumb", "params": null, "return": null, "notes": "Handles the atomic electricty exploding"}, {"desc": "Atomic electricity check on ground animation ended", "label": "AtomicElectricityCheckOnGroundAnimEnded", "addr": {"J": "3C4C4", "U": "3C4C4", "E": "3C590"}, "size": "18", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the animationation of the electricity being on the ground has ended"}, {"desc": "Atomic AI", "label": "Atomic_AI", "addr": {"J": "3C4DC", "U": "3C4DC", "E": "3C5A8"}, "size": "150", "mode": "thumb", "params": null, "return": null}, {"desc": "Atomic electricity AI", "label": "AtomicElectricity_AI", "addr": {"J": "3C62C", "U": "3C62C", "E": "3C6F8"}, "size": "D8", "mode": "thumb", "params": null, "return": null}, {"desc": "Area banner initialize", "label": "AreaBannerInit", "addr": {"J": "3C704", "U": "3C704", "E": "3C7D0"}, "size": "A4", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an area banner sprite"}, {"desc": "Area banner spawn", "label": "AreaBannerSpawn", "addr": {"J": "3C7A8", "U": "3C7A8", "E": "3C874"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Handles the area banner spawning"}, {"desc": "Area banner check scrolling up animation ended", "label": "AreaBannerCheckScrollingUpAnimEnded", "addr": {"J": "3C7C8", "U": "3C7C8", "E": "3C894"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the scrolling up animationation has ended"}, {"desc": "Area banner static", "label": "AreaBannerStatic", "addr": {"J": "3C828", "U": "3C828", "E": "3C8F4"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Handles the area banner being static"}, {"desc": "Area banner check removing animation ended", "label": "AreaBannerCheckRemovingAnimEnded", "addr": {"J": "3C86C", "U": "3C86C", "E": "3C938"}, "size": "18", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the scrolling down animationation has ended"}, {"desc": "Area banner AI", "label": "AreaBanner_AI", "addr": {"J": "3C884", "U": "3C884", "E": "3C950"}, "size": "E0", "mode": "thumb", "params": null, "return": null}, {"desc": "Mother brain sync sub sprite position", "label": "MotherBrainSyncSubSpritePosition", "addr": {"J": "3C964", "U": "3C964", "E": "3CA30"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Synchronizes the sub sprites of Mother Brain with her"}, {"desc": "Mother brain palette switching", "label": "MotherBrainPaletteSwitching", "addr": {"J": "3C9CC", "U": "3C9CC", "E": "3CA98"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Handles the palette switching when Mother Brain charges the beam and fires it"}, {"desc": "Mother brain initialize", "label": "MotherBrainInit", "addr": {"J": "3CA4C", "U": "3CA4C", "E": "3CB18"}, "size": "144", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a Mother Brain sprite"}, {"desc": "Mother brain main loop", "label": "MotherBrainMainLoop", "addr": {"J": "3CBFC", "U": "3CBFC", "E": "3CCC8"}, "size": "3FC", "mode": "thumb", "params": null, "return": null, "notes": "Mother brain main loop AI, handles the update of the sub sprites, firing the beam the death and the animationations"}, {"desc": "Mother brain death", "label": "MotherBrainDeath", "addr": {"J": "3CFF8", "U": "3CFF8", "E": "3D0C4"}, "size": "CC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the death of Mother Brain"}, {"desc": "Mother brain start escape", "label": "MotherBrainStartEscape", "addr": {"J": "3D0C4", "U": "3D0C4", "E": "3D190"}, "size": "6C", "mode": "thumb", "params": null, "return": null, "notes": "Spawns the item banner and the explosion zebes escape sprites"}, {"desc": "Mother brain eye initialize", "label": "MotherBrainEyeInit", "addr": {"J": "3D130", "U": "3D130", "E": "3D1FC"}, "size": "158", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a Mother Brain eye sprite"}, {"desc": "Mother brain eye hitbox initialize", "label": "MotherBrainEyeHitboxInit", "addr": {"J": "3D288", "U": "3D288", "E": "3D354"}, "size": "A4", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the hitbox of the Mother Brain eye sprite"}, {"desc": "Mother brain eye_Empty", "label": "MotherBrainEye_Empty", "addr": {"J": "3D32C", "U": "3D32C", "E": "3D3F8"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "Empty function"}, {"desc": "Mother brain eye spawn block", "label": "MotherBrainEyeSpawnBlock", "addr": {"J": "3D330", "U": "3D330", "E": "3D3FC"}, "size": "74", "mode": "thumb", "params": null, "return": null, "notes": "Spawns a Mother Brain block sprite"}, {"desc": "Mother brain eye hit timer", "label": "MotherBrainEyeHitTimer", "addr": {"J": "3D45C", "U": "3D45C", "E": "3D528"}, "size": "10", "mode": "thumb", "params": null, "return": null, "notes": "Sets the invicibiliy stun flash timer to 0"}, {"desc": "Mother brain eye spawn glass breaking", "label": "MotherBrainEyeSpawnGlassBreaking", "addr": {"J": "3D46C", "U": "3D46C", "E": "3D538"}, "size": "54", "mode": "thumb", "params": null, "return": null, "notes": "Spawns the Mother Brain glass breaking sprite"}, {"desc": "Mother Brain AI", "label": "MotherBrain_AI", "addr": {"J": "3D4C0", "U": "3D4C0", "E": "3D58C"}, "size": "E0", "mode": "thumb", "params": null, "return": null}, {"desc": "Mother Brain eye AI", "label": "MotherBrainEye_AI", "addr": {"J": "3D5A0", "U": "3D5A0", "E": "3D66C"}, "size": "A0", "mode": "thumb", "params": null, "return": null}, {"desc": "Mother Brain beam AI", "label": "MotherBrainBeam_AI", "addr": {"J": "3D640", "U": "3D640", "E": "3D70C"}, "size": "E4", "mode": "thumb", "params": null, "return": null}, {"desc": "Mother Brain block AI", "label": "MotherBrainBlock_AI", "addr": {"J": "3D724", "U": "3D724", "E": "3D7F0"}, "size": "A8", "mode": "thumb", "params": null, "return": null}, {"desc": "Mother Brain glass breaking AI", "label": "MotherBrainGlassBreaking_AI", "addr": {"J": "3D7CC", "U": "3D7CC", "E": "3D898"}, "size": "94", "mode": "thumb", "params": null, "return": null}, {"desc": "Acid worm random X movement", "label": "AcidWormRandomXMovement", "addr": {"J": "3D978", "U": "3D978", "E": "3DA44"}, "size": "40", "mode": "thumb", "params": null, "return": null, "notes": "Handles the horizontal semi-random movement of the acid worm head"}, {"desc": "Acid worm change two ground current clipdata action", "label": "AcidWormChangeTwoGroundClipAction", "addr": {"J": "3D9B8", "U": "3D9B8", "E": "3DA84"}, "size": "48", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}, {"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Used to remove the 2 blocks on the ground"}, {"desc": "Acid worm change big block down current clipdata action", "label": "AcidWormChangeBigBlockDownClipAction", "addr": {"J": "3DA00", "U": "3DA00", "E": "3DACC"}, "size": "50", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Used to remove the first 2 blocks of the big block on the ground"}, {"desc": "Acid worm change big block middle current clipdata action", "label": "AcidWormChangeBigBlockMiddleClipAction", "addr": {"J": "3DA50", "U": "3DA50", "E": "3DB1C"}, "size": "58", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Used to remove the 2 middle blocks of the big block on the ground"}, {"desc": "Acid worm change big block top current clipdata action", "label": "AcidWormChangeBigBlockTopClipAction", "addr": {"J": "3DAA8", "U": "3DAA8", "E": "3DB74"}, "size": "E4", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Used to remove the 2 top blocks of the big block on the ground"}, {"desc": "Acid worm play sound", "label": "AcidWormPlaySound", "addr": {"J": "3DB8C", "U": "3DB8C", "E": "3DC58"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Plays a sound depending on 300071b"}, {"desc": "Acid worm colliding with Samus when extending", "label": "AcidWormCollidingWithSamusWhenExtending", "addr": {"J": "3DBB0", "U": "3DBB0", "E": "3DC7C"}, "size": "44", "mode": "thumb", "params": null, "return": {"desc": "Colliding", "type": "bool"}, "notes": "Checks if the acid worm is colliding with Samus when extending"}, {"desc": "Acid worm initialize", "label": "AcidWormInit", "addr": {"J": "3DBF4", "U": "3DBF4", "E": "3DCC0"}, "size": "224", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an acid worm sprite"}, {"desc": "Acid worm check Samus on zipline", "label": "AcidWormCheckSamusOnZipline", "addr": {"J": "3DE18", "U": "3DE18", "E": "3DEE4"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Checks if Samus is on a zipline"}, {"desc": "Acid worm spawn start", "label": "AcidWormSpawnStart", "addr": {"J": "3DE38", "U": "3DE38", "E": "3DF04"}, "size": "84", "mode": "thumb", "params": null, "return": null, "notes": "Handles the start of the spawning"}, {"desc": "Acid worm spawn extending", "label": "AcidWormSpawnExtending", "addr": {"J": "3DEBC", "U": "3DEBC", "E": "3DF88"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Handles the acid worm extending when spawning"}, {"desc": "Acid worm spawn staying on top", "label": "AcidWormSpawnStayingOnTop", "addr": {"J": "3DF4C", "U": "3DF4C", "E": "3E018"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Handles the acid worm staying on top when spawning"}, {"desc": "Acid worm spawn retracting", "label": "AcidWormSpawnRetracting", "addr": {"J": "3DF84", "U": "3DF84", "E": "3E050"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Handles the acid worm retracting when spawning"}, {"desc": "Acid worm graphics initialize", "label": "AcidWormGfxInit", "addr": {"J": "3E004", "U": "3E004", "E": "3E0D0"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Initializes the graphics of the acid worm"}, {"desc": "Acid worm idle", "label": "AcidWormIdle", "addr": {"J": "3E030", "U": "3E030", "E": "3E0FC"}, "size": "C0", "mode": "thumb", "params": null, "return": null, "notes": "Handles the idle animationation and Samus detection"}, {"desc": "Acid worm check end warning animation", "label": "AcidWormCheckEndWarningAnim", "addr": {"J": "3E0F0", "U": "3E0F0", "E": "3E1BC"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the warning animationation has ended"}, {"desc": "Acid worm extend", "label": "AcidWormExtend", "addr": {"J": "3E14C", "U": "3E14C", "E": "3E218"}, "size": "35C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the acid worm extending"}, {"desc": "Acid worm hooked to block", "label": "AcidWormHookedToBlock", "addr": {"J": "3E4A8", "U": "3E4A8", "E": "3E574"}, "size": "210", "mode": "thumb", "params": null, "return": null, "notes": "Handles the acid worm being hooked to a block"}, {"desc": "Acid worm retracting", "label": "AcidWormRetracting", "addr": {"J": "3E6B8", "U": "3E6B8", "E": "3E784"}, "size": "1AC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the acid worm retracting when spawning"}, {"desc": "Acid worm raise acid", "label": "AcidWormRaiseAcid", "addr": {"J": "3E864", "U": "3E864", "E": "3E930"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Handles the acid worm raising the acid"}, {"desc": "Acid worm acid go down", "label": "AcidWormAcidGoDown", "addr": {"J": "3E8CC", "U": "3E8CC", "E": "3E998"}, "size": "70", "mode": "thumb", "params": null, "return": null, "notes": "Handles the acid worm going down"}, {"desc": "Acid worm death graphics initialize", "label": "AcidWormDeathGfxInit", "addr": {"J": "3E93C", "U": "3E93C", "E": "3EA08"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the acid worm dying"}, {"desc": "Acid worm death flashing animation", "label": "AcidWormDeathFlashingAnim", "addr": {"J": "3E960", "U": "3E960", "E": "3EA2C"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Handles the flashing animationation when the acid worm is dying"}, {"desc": "Acid worm dying", "label": "AcidWormDying", "addr": {"J": "3E9E8", "U": "3E9E8", "E": "3EAB4"}, "size": "D0", "mode": "thumb", "params": null, "return": null, "notes": "Handles the acid worm dying animationation"}, {"desc": "Acid worm body initialize", "label": "AcidWormBodyInit", "addr": {"J": "3EAB8", "U": "3EAB8", "E": "3EB84"}, "size": "258", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an acid worm body sprite"}, {"desc": "Acid worm body move", "label": "AcidWormBodyMove", "addr": {"J": "3ED10", "U": "3ED10", "E": "3EDDC"}, "size": "10C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the acid worm body"}, {"desc": "Acid worm body death", "label": "AcidWormBodyDeath", "addr": {"J": "3F018", "U": "3F018", "E": "3F0E4"}, "size": "C8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the death of the acid worm body"}, {"desc": "Acid worm spit initialize", "label": "AcidWormSpitInit", "addr": {"J": "3F0E0", "U": "3F0E0", "E": "3F1AC"}, "size": "8C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an acid worm spit sprite"}, {"desc": "Acid worm spit move", "label": "AcidWormSpitMove", "addr": {"J": "3F16C", "U": "3F16C", "E": "3F238"}, "size": "118", "mode": "thumb", "params": null, "return": null, "notes": "Handles the acid worm spit movement"}, {"desc": "Acid worm spit exploding graphics initialize", "label": "AcidWormSpitExplodingGfxInit", "addr": {"J": "3F284", "U": "3F284", "E": "3F350"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the acid worm spit exploding"}, {"desc": "Acid worm check exploding animation ended", "label": "AcidWormCheckExplodingAnimEnded", "addr": {"J": "3F2CC", "U": "3F2CC", "E": "3F398"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the exploding animationation has ended"}, {"desc": "Acid worm check exploding on acid animation ended", "label": "AcidWormCheckExplodingOnAcidAnimEnded", "addr": {"J": "3F2F0", "U": "3F2F0", "E": "3F3BC"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the exploding animationation on acid has ended"}, {"desc": "Acid worm AI", "label": "AcidWorm_AI", "addr": {"J": "3F31C", "U": "3F31C", "E": "3F3E8"}, "size": "264", "mode": "thumb", "params": null, "return": null}, {"desc": "Acid worm body AI", "label": "AcidWormBody_AI", "addr": {"J": "3F580", "U": "3F580", "E": "3F64C"}, "size": "A4", "mode": "thumb", "params": null, "return": null}, {"desc": "Acid worm spit AI", "label": "AcidWormSpit_AI", "addr": {"J": "3F624", "U": "3F624", "E": "3F6F0"}, "size": "60", "mode": "thumb", "params": null, "return": null}, {"desc": "Sidehopper check Samus near left right", "label": "SidehopperCheckSamusNearLeftRight", "addr": {"J": "3F684", "U": "3F684", "E": "3F750"}, "size": "20", "mode": "thumb", "params": null, "return": {"desc": "Out of range", "type": "bool"}, "notes": "Checks if Samus is out of range of the sidehopper"}, {"desc": "Sidehopper initialize", "label": "SidehopperInit", "addr": {"J": "3F6A4", "U": "3F6A4", "E": "3F770"}, "size": "D0", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a sidehopper sprite"}, {"desc": "Sidehopper idle graphics initialize", "label": "SidehopperIdleGfxInit", "addr": {"J": "3F774", "U": "3F774", "E": "3F840"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the sidehopper going back to idle"}, {"desc": "Sidehopper jumping graphics initialize", "label": "SidehopperJumpingGfxInit", "addr": {"J": "3F794", "U": "3F794", "E": "3F860"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the sidehopper jumping"}, {"desc": "Sidehopper landing graphics initialize", "label": "SidehopperLandingGfxInit", "addr": {"J": "3F814", "U": "3F814", "E": "3F8E0"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the sidehopper landing"}, {"desc": "Sidehopper after idle", "label": "SidehopperAfterIdle", "addr": {"J": "3F864", "U": "3F864", "E": "3F930"}, "size": "74", "mode": "thumb", "params": null, "return": null, "notes": "Determines what the sidehopper should do after being idle"}, {"desc": "Sidehopper check before jumping animation ended", "label": "SidehopperCheckBeforeJumpingAnimEnded", "addr": {"J": "3F8FC", "U": "3F8FC", "E": "3F9C8"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the animationation before jumping has ended"}, {"desc": "Sidehopper jumping ground", "label": "SidehopperJumpingGround", "addr": {"J": "3F96C", "U": "3F96C", "E": "3FA38"}, "size": "1E8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the sidehopper jumping when on the ground"}, {"desc": "Sidehopper jumping ceiling", "label": "SidehopperJumpingCeiling", "addr": {"J": "3FB54", "U": "3FB54", "E": "3FC20"}, "size": "1FC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the sidehopper jumping when on the ceiling"}, {"desc": "Sidehopper check landing ceiling animation ended", "label": "SidehopperCheckLandingCeilingAnimEnded", "addr": {"J": "3FD50", "U": "3FD50", "E": "3FE1C"}, "size": "14", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the landing animationation when on the ceiling has ended"}, {"desc": "Siidehopper jumping ground into block", "label": "SiidehopperJumpingGroundIntoBlock", "addr": {"J": "3FD64", "U": "3FD64", "E": "3FE30"}, "size": "A4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the sidehopper jumping from the ground into a block"}, {"desc": "Sidehopper jumping ceiling into block", "label": "SidehopperJumpingCeilingIntoBlock", "addr": {"J": "3FE08", "U": "3FE08", "E": "3FED4"}, "size": "A8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the sidehopper jumping from the ceiling into a block"}, {"desc": "Sidehopper ground idle animation", "label": "SidehopperGroundIdleAnim", "addr": {"J": "3FEB0", "U": "3FEB0", "E": "3FF7C"}, "size": "9C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the idle animationation of the sidehopper on the ground"}, {"desc": "Sidehopper ceiling idle animation", "label": "SidehopperCeilingIdleAnim", "addr": {"J": "3FF4C", "U": "3FF4C", "E": "40018"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the idle animationation of the sidehopper on the ceiling"}, {"desc": "Sidehopper death", "label": "SidehopperDeath", "addr": {"J": "3FFA8", "U": "3FFA8", "E": "40074"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Handles the death of the sidehopper, calls SpriteDeath"}, {"desc": "Sidehopper AI", "label": "Sidehopper_AI", "addr": {"J": "3FFE0", "U": "3FFE0", "E": "400AC"}, "size": "198", "mode": "thumb", "params": null, "return": null}, {"desc": "Geron (Norfair) AI", "label": "Geron_Norfair_AI", "addr": {"J": "40178", "U": "40178", "E": "40244"}, "size": "B8", "mode": "thumb", "params": null, "return": null}, {"desc": "Geega initialize", "label": "GeegaInit", "addr": {"J": "40230", "U": "40230", "E": "402FC"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a geega sprite"}, {"desc": "Geega graphics initialize", "label": "GeegaGfxInit", "addr": {"J": "40290", "U": "40290", "E": "4035C"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the geega"}, {"desc": "Geega spawn", "label": "GeegaSpawn", "addr": {"J": "402CC", "U": "402CC", "E": "40398"}, "size": "118", "mode": "thumb", "params": null, "return": null, "notes": "Handles the geega spawning"}, {"desc": "Geega going up", "label": "GeegaGoingUp", "addr": {"J": "403E4", "U": "403E4", "E": "404B0"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Handles the geega going up"}, {"desc": "Geega respawn", "label": "GeegaRespawn", "addr": {"J": "40464", "U": "40464", "E": "40530"}, "size": "64", "mode": "thumb", "params": null, "return": null, "notes": "Handles the geega respawning"}, {"desc": "Geega move", "label": "GeegaMove", "addr": {"J": "404C8", "U": "404C8", "E": "40594"}, "size": "C4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the geega moving"}, {"desc": "Geega AI", "label": "Geega_AI", "addr": {"J": "4058C", "U": "4058C", "E": "40658"}, "size": "13C", "mode": "thumb", "params": null, "return": null}, {"desc": "Zebetite AI", "label": "Zebetite_AI", "addr": {"J": "406C8", "U": "406C8", "E": "40794"}, "size": "30C", "mode": "thumb", "params": null, "return": null}, {"desc": "Cannon fire bullet", "label": "CannonFireBullet", "addr": {"J": "409D4", "U": "409D4", "E": "40AA0"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the cannon can fire a bullet, if yes spawns a cannon bullet sprite"}, {"desc": "Cannon AI", "label": "Cannon_AI", "addr": {"J": "40B08", "U": "40B08", "E": "40BD4"}, "size": "61C", "mode": "thumb", "params": null, "return": null}, {"desc": "Cannon bullet AI", "label": "CannonBullet_AI", "addr": {"J": "41124", "U": "41124", "E": "411F0"}, "size": "184", "mode": "thumb", "params": null, "return": null}, {"desc": "Imago larva (right side) AI", "label": "ImagoLarva_Right_AI", "addr": {"J": "412A8", "U": "412A8", "E": "41374"}, "size": "11C", "mode": "thumb", "params": null, "return": null}, {"desc": "Geruta tangle vine update geruta", "label": "GerutaTangleVineUpdateGeruta", "addr": {"J": "413C4", "U": "413C4", "E": "41490"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Updates the geruta"}, {"desc": "Tangle vine (Geruta) AI", "label": "TangleVine_Geruta_AI", "addr": {"J": "4144C", "U": "4144C", "E": "41518"}, "size": "1A0", "mode": "thumb", "params": null, "return": null}, {"desc": "Geruta (tangle vine) AI", "label": "Geruta_TangleVine_AI", "addr": {"J": "415EC", "U": "415EC", "E": "416B8"}, "size": "130", "mode": "thumb", "params": null, "return": null}, {"desc": "Tangle vine (red, Geruta) AI", "label": "TangleVine_Red_Geruta_AI", "addr": {"J": "4171C", "U": "4171C", "E": "417E8"}, "size": "CC", "mode": "thumb", "params": null, "return": null}, {"desc": "Tangle vine (larva, right) AI", "label": "TangleVine_Larva_Right_AI", "addr": {"J": "417E8", "U": "417E8", "E": "418B4"}, "size": "D0", "mode": "thumb", "params": null, "return": null}, {"desc": "Tangle vine (larva, left) AI", "label": "TangleVine_Larva_Left_AI", "addr": {"J": "418B8", "U": "418B8", "E": "41984"}, "size": "D4", "mode": "thumb", "params": null, "return": null}, {"desc": "Tangle vine (tall) AI", "label": "TangleVine_Tall_AI", "addr": {"J": "4198C", "U": "4198C", "E": "41A58"}, "size": "130", "mode": "thumb", "params": null, "return": null}, {"desc": "Tangle vine (medium) AI", "label": "TangleVine_Medium_AI", "addr": {"J": "41ABC", "U": "41ABC", "E": "41B88"}, "size": "130", "mode": "thumb", "params": null, "return": null}, {"desc": "Tangle vine (curved) AI", "label": "TangleVine_Curved_AI", "addr": {"J": "41BEC", "U": "41BEC", "E": "41CB8"}, "size": "130", "mode": "thumb", "params": null, "return": null}, {"desc": "Tangle vine (short) AI", "label": "TangleVine_Short_AI", "addr": {"J": "41D1C", "U": "41D1C", "E": "41DE8"}, "size": "130", "mode": "thumb", "params": null, "return": null}, {"desc": "Imago sync sub sprites", "label": "ImagoSyncSubSprites", "addr": {"J": "41E4C", "U": "41E4C", "E": "41F18"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Synchronizes the sub sprites of Mother Brain with him"}, {"desc": "Imago shoot needles", "label": "ImagoShootNeedles", "addr": {"J": "41ED4", "U": "41ED4", "E": "41FA0"}, "size": "17C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if imago can shoot needles, if yes spawns imago needles sprites"}, {"desc": "Imago core flashing animation", "label": "ImagoCoreFlashingAnim", "addr": {"J": "42050", "U": "42050", "E": "4211C"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Handles the flahsing animationation of the core"}, {"desc": "Imago set sides hitbox", "label": "ImagoSetSidesHitbox", "addr": {"J": "420B8", "U": "420B8", "E": "42184"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Sets the left and right hitboxes of imago depending on the X flip"}, {"desc": "Imago initialize", "label": "ImagoInit", "addr": {"J": "420EC", "U": "420EC", "E": "421B8"}, "size": "23C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an imago sprite"}, {"desc": "Imago fade music", "label": "ImagoFadeMusic", "addr": {"J": "42328", "U": "42328", "E": "423F4"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Calls FadeMusic"}, {"desc": "Imago start music", "label": "ImagoStartMusic", "addr": {"J": "4234C", "U": "4234C", "E": "42418"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Starts the imago battle music"}, {"desc": "Imago coming down", "label": "ImagoComingDown", "addr": {"J": "42384", "U": "42384", "E": "42450"}, "size": "B0", "mode": "thumb", "params": null, "return": null, "notes": "Handles imago coming down to move through the room (not when he attacks)"}, {"desc": "Imago coming down move", "label": "ImagoComingDownMove", "addr": {"J": "42434", "U": "42434", "E": "42500"}, "size": "C4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of imago coming down (not when he attacks)"}, {"desc": "Imago move", "label": "ImagoMove", "addr": {"J": "424F8", "U": "424F8", "E": "425C4"}, "size": "2B8", "mode": "thumb", "params": null, "return": null, "notes": "Handles imago moving through the room"}, {"desc": "Imago going up", "label": "ImagoGoingUp", "addr": {"J": "427B0", "U": "427B0", "E": "4287C"}, "size": "C4", "mode": "thumb", "params": null, "return": null, "notes": "Handles imago going up"}, {"desc": "Imago attacking graphics initialize", "label": "ImagoAttackingGfxInit", "addr": {"J": "42874", "U": "42874", "E": "42940"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for imago attacking"}, {"desc": "Imago attacking going down", "label": "ImagoAttackingGoingDown", "addr": {"J": "42898", "U": "42898", "E": "42964"}, "size": "A8", "mode": "thumb", "params": null, "return": null, "notes": "Handles imago going down when attacking"}, {"desc": "Imago attacking going up", "label": "ImagoAttackingGoingUp", "addr": {"J": "42940", "U": "42940", "E": "42A0C"}, "size": "BC", "mode": "thumb", "params": null, "return": null, "notes": "Handles imago going up when attacking"}, {"desc": "Imago spawn damaged stinger", "label": "ImagoSpawnDamagedStinger", "addr": {"J": "429FC", "U": "429FC", "E": "42AC8"}, "size": "94", "mode": "thumb", "params": null, "return": null, "notes": "Spawns a imago damaged stinger sprite"}, {"desc": "Imago check Samus at super missile", "label": "ImagoCheckSamusAtSuperMissile", "addr": {"J": "42A90", "U": "42A90", "E": "42B5C"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Checks if Samus is near the super missile tank when imago is stinger-less"}, {"desc": "Imago charge through wall", "label": "ImagoChargeThroughWall", "addr": {"J": "42AF8", "U": "42AF8", "E": "42BC4"}, "size": "100", "mode": "thumb", "params": null, "return": null, "notes": "Handles imago charging through the wall at the end of the fight, also destroys the first half"}, {"desc": "Imago destroy wall", "label": "ImagoDestroyWall", "addr": {"J": "42BF8", "U": "42BF8", "E": "42CC4"}, "size": "378", "mode": "thumb", "params": null, "return": null, "notes": "Handles imago destroying the wall"}, {"desc": "Imago dying", "label": "ImagoDying", "addr": {"J": "42F70", "U": "42F70", "E": "4303C"}, "size": "204", "mode": "thumb", "params": null, "return": null, "notes": "Handles imago dying and stalling on the wall"}, {"desc": "Imago set event", "label": "ImagoSetEvent", "addr": {"J": "43174", "U": "43174", "E": "43240"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Sets the imago killed event"}, {"desc": "Imago body set sides hitbox", "label": "ImagoBodySetSidesHitbox", "addr": {"J": "431B8", "U": "431B8", "E": "43284"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Sets the left and right hitboxes of the imago body depending on the X flip"}, {"desc": "Imago body initialize", "label": "ImagoBodyInit", "addr": {"J": "431E8", "U": "431E8", "E": "432B4"}, "size": "13C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize an imago body sprite"}, {"desc": "Imago body before spawn", "label": "ImagoBodyBeforeSpawn", "addr": {"J": "43324", "U": "43324", "E": "433F0"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Called beofre imago spawns, checks if imago pose is above 7"}, {"desc": "Imago body update palette", "label": "ImagoBodyUpdatePalette", "addr": {"J": "43360", "U": "43360", "E": "4342C"}, "size": "64", "mode": "thumb", "params": null, "return": null, "notes": "Updates the palette row of imago depending on the health"}, {"desc": "Imago body sync palette", "label": "ImagoBodySyncPalette", "addr": {"J": "433C4", "U": "433C4", "E": "43490"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Synchronizes the palette of the imago body with imago"}, {"desc": "Imago AI", "label": "Imago_AI", "addr": {"J": "433F8", "U": "433F8", "E": "434C4"}, "size": "420", "mode": "thumb", "params": null, "return": null}, {"desc": "Imago body AI", "label": "ImagoBody_AI", "addr": {"J": "43818", "U": "43818", "E": "438E4"}, "size": "1B0", "mode": "thumb", "params": null, "return": null}, {"desc": "Imago needle AI", "label": "ImagoNeedle_AI", "addr": {"J": "439C8", "U": "439C8", "E": "43A94"}, "size": "EC", "mode": "thumb", "params": null, "return": null}, {"desc": "Imago damaged stinger AI", "label": "ImagoDamagedStinger_AI", "addr": {"J": "43AB4", "U": "43AB4", "E": "43B80"}, "size": "1A4", "mode": "thumb", "params": null, "return": null}, {"desc": "Imago egg AI", "label": "ImagoEgg_AI", "addr": {"J": "43C58", "U": "43C58", "E": "43D24"}, "size": "130", "mode": "thumb", "params": null, "return": null}, {"desc": "Crocomire sync sub sprites", "label": "CrocomireSyncSubSprites", "addr": {"J": "43D88", "U": "43D88", "E": "43E54"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Synchronizes the sub sprites of crocomire with him"}, {"desc": "Crocomire initialize", "label": "CrocomireInit", "addr": {"J": "43DF0", "U": "43DF0", "E": "43EBC"}, "size": "120", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a crocomire sprite"}, {"desc": "Crocomire graphics initialize", "label": "CrocomireGfxInit", "addr": {"J": "43F10", "U": "43F10", "E": "43FDC"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for crocomire"}, {"desc": "Crocomire_Empty", "label": "Crocomire_Empty", "addr": {"J": "43F34", "U": "43F34", "E": "44000"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "Empty function"}, {"desc": "Crocomire body initialize", "label": "CrocomireBodyInit", "addr": {"J": "43F38", "U": "43F38", "E": "44004"}, "size": "160", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a crocomire body sprite"}, {"desc": "Crocomire AI", "label": "Crocomire_AI", "addr": {"J": "44098", "U": "44098", "E": "44164"}, "size": "44", "mode": "thumb", "params": null, "return": null}, {"desc": "Crocomire body AI", "label": "CrocomireBody_AI", "addr": {"J": "440DC", "U": "440DC", "E": "441A8"}, "size": "6C", "mode": "thumb", "params": null, "return": null}, {"desc": "Searchlight eye initialize", "label": "SearchlightEyeInit", "addr": {"J": "44148", "U": "44148", "E": "44214"}, "size": "13C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a searchlight eye sprite"}, {"desc": "Searchlight eye move", "label": "SearchlightEyeMove", "addr": {"J": "44284", "U": "44284", "E": "44350"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Handles the searchlight eye moving up and down"}, {"desc": "Searchlight eye check alarm", "label": "SearchlightEyeCheckAlarm", "addr": {"J": "44314", "U": "44314", "E": "443E0"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the alarm is on"}, {"desc": "Searchlight eye check alerted ended", "label": "SearchlightEyeCheckAlertedEnded", "addr": {"J": "44340", "U": "44340", "E": "4440C"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the alerted animationation has ended (when Samus is getting detected)"}, {"desc": "Searchlight eye check should shot", "label": "SearchlightEyeCheckShouldShot", "addr": {"J": "44364", "U": "44364", "E": "44430"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the searchlight eye can shoot depending on a timer"}, {"desc": "Searchlight eye shoot", "label": "SearchlightEyeShoot", "addr": {"J": "4439C", "U": "4439C", "E": "44468"}, "size": "8C", "mode": "thumb", "params": null, "return": null, "notes": "Spawns a searchlight eye projectile sprite"}, {"desc": "Searchlight eye beam initialize", "label": "SearchlightEyeBeamInit", "addr": {"J": "44428", "U": "44428", "E": "444F4"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a searchlight eye beam sprite"}, {"desc": "Searchlight eye beam detect Samus", "label": "SearchlightEyeBeamDetectSamus", "addr": {"J": "444A0", "U": "444A0", "E": "4456C"}, "size": "17C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the detection of Samus to activate the alarm, also deactivates the other searchlight eye beams"}, {"desc": "Searchlight eye beam disappear", "label": "SearchlightEyeBeamDisappear", "addr": {"J": "4461C", "U": "4461C", "E": "446E8"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the searchlight eye beam disappearing"}, {"desc": "Searchlight eye AI", "label": "SearchlightEye_AI", "addr": {"J": "44658", "U": "44658", "E": "44724"}, "size": "104", "mode": "thumb", "params": null, "return": null}, {"desc": "Searchlight eye beam AI", "label": "SearchlightEyeBeam_AI", "addr": {"J": "4475C", "U": "4475C", "E": "44828"}, "size": "5C", "mode": "thumb", "params": null, "return": null}, {"desc": "Searchligh eye projectile AI", "label": "SearchlighEyeProjectile_AI", "addr": {"J": "447B8", "U": "447B8", "E": "44884"}, "size": "128", "mode": "thumb", "params": null, "return": null}, {"desc": "Geron AI", "label": "Geron_AI", "addr": {"J": "448E0", "U": "448E0", "E": "449AC"}, "size": "344", "mode": "thumb", "params": null, "return": null}, {"desc": "Gunship flicker flames", "label": "GunshipFlickerFlames", "addr": {"J": "44C24", "U": "44C24", "E": "44CF0"}, "size": "84", "mode": "thumb", "params": null, "return": null, "notes": "Handles the flames flickering between big and small"}, {"desc": "Gunship porthole flashing animation", "label": "GunshipPortholeFlashingAnim", "addr": {"J": "44CA8", "U": "44CA8", "E": "44D74"}, "size": "B0", "mode": "thumb", "params": null, "return": null, "notes": "Handles the flashing animationation of the porthole"}, {"desc": "Gunship check Samus enter", "label": "GunshipCheckSamusEnter", "addr": {"J": "44D58", "U": "44D58", "E": "44E24"}, "size": "64", "mode": "thumb", "params": null, "return": {"desc": "Entering", "type": "bool"}, "notes": "Checks if Samus is entering the ship"}, {"desc": "Gunship initialize", "label": "GunshipInit", "addr": {"J": "44DBC", "U": "44DBC", "E": "44E88"}, "size": "1E0", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a gunship sprite"}, {"desc": "Gunship game start move", "label": "GunshipGameStartMove", "addr": {"J": "44F9C", "U": "44F9C", "E": "45068"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the ship before the intro cutscene at the start of the game"}, {"desc": "Gunship Samus enter", "label": "GunshipSamusEnter", "addr": {"J": "44FE4", "U": "44FE4", "E": "450B0"}, "size": "40", "mode": "thumb", "params": null, "return": null, "notes": "Handles Samus starting to enter the ship"}, {"desc": "Gunship Samus entering", "label": "GunshipSamusEntering", "addr": {"J": "45024", "U": "45024", "E": "450F0"}, "size": "CC", "mode": "thumb", "params": null, "return": null, "notes": "Handles Samus entering the ship"}, {"desc": "Gunship refill", "label": "GunshipRefill", "addr": {"J": "450F0", "U": "450F0", "E": "451BC"}, "size": "15C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the ship refilling Samus"}, {"desc": "Gunship after refill", "label": "GunshipAfterRefill", "addr": {"J": "4524C", "U": "4524C", "E": "45318"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Called after the refill ends, spawns an item banner sprite"}, {"desc": "Gunship after save", "label": "GunshipAfterSave", "addr": {"J": "452DC", "U": "452DC", "E": "453A8"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Called after a save ends, spanws an item banner sprite"}, {"desc": "Gunship saving", "label": "GunshipSaving", "addr": {"J": "45320", "U": "45320", "E": "453EC"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Called when saving the game, doesn't handle the save"}, {"desc": "Gunship Samus leave", "label": "GunshipSamusLeave", "addr": {"J": "45358", "U": "45358", "E": "45424"}, "size": "B8", "mode": "thumb", "params": null, "return": null, "notes": "Handles Samus starting to leave the ship"}, {"desc": "Gunship Samus leaving", "label": "GunshipSamusLeaving", "addr": {"J": "45410", "U": "45410", "E": "454DC"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Handles Samus leaving the ship"}, {"desc": "Gunship release Samus", "label": "GunshipReleaseSamus", "addr": {"J": "45468", "U": "45468", "E": "45534"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Sets Samus pose to facing the foreground"}, {"desc": "Gunship reset", "label": "GunshipReset", "addr": {"J": "4548C", "U": "4548C", "E": "45558"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Sets the Samus collision of the gunship to escape ship, called after Samus leaves the ship"}, {"desc": "Gunship check Samus on top after leaving", "label": "GunshipCheckSamusOnTopAfterLeaving", "addr": {"J": "454B4", "U": "454B4", "E": "45580"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Checks if Samus is on top of the ship after leaving it"}, {"desc": "Gunship escape zebes", "label": "GunshipEscapeZebes", "addr": {"J": "454DC", "U": "454DC", "E": "455A8"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Sets the escaped zebes event"}, {"desc": "Gunship Samus entering when escaping", "label": "GunshipSamusEnteringWhenEscaping", "addr": {"J": "4552C", "U": "4552C", "E": "455F8"}, "size": "E4", "mode": "thumb", "params": null, "return": null, "notes": "Handles Samus entering the ship when escaping zebes"}, {"desc": "Gunship spawn flames escape", "label": "GunshipSpawnFlamesEscape", "addr": {"J": "45610", "U": "45610", "E": "456DC"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Spawns the flames for the ship escaping zebes"}, {"desc": "Gunship taking off", "label": "GunshipTakingOff", "addr": {"J": "45688", "U": "45688", "E": "45754"}, "size": "80", "mode": "thumb", "params": null, "return": null, "notes": "Handles the gunship taking off when escaping"}, {"desc": "Gunship flying", "label": "GunshipFlying", "addr": {"J": "45708", "U": "45708", "E": "457D4"}, "size": "8C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the gunship flying when escaping"}, {"desc": "Gunship part initialize", "label": "GunshipPartInit", "addr": {"J": "45794", "U": "45794", "E": "45860"}, "size": "1A0", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a gunship part sprite"}, {"desc": "Gunship part flames flying graphics initialize", "label": "GunshipPartFlamesFlyingGfxInit", "addr": {"J": "45934", "U": "45934", "E": "45A00"}, "size": "40", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the big flames when flying"}, {"desc": "Gunship part check landing ended", "label": "GunshipPartCheckLandingEnded", "addr": {"J": "459E4", "U": "459E4", "E": "45AB0"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the landing at the beginning of the game has ended"}, {"desc": "Gunship part entry sides", "label": "GunshipPartEntrySides", "addr": {"J": "45A68", "U": "45A68", "E": "45B34"}, "size": "A8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the animationations of the sides of the entry of the ship"}, {"desc": "Gunship part entry sides close", "label": "GunshipPartEntrySidesClose", "addr": {"J": "45B10", "U": "45B10", "E": "45BDC"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the animationation of the sides of the entry closing"}, {"desc": "Gunship part entry top", "label": "GunshipPartEntryTop", "addr": {"J": "45B6C", "U": "45B6C", "E": "45C38"}, "size": "F8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the animationations of the top of the entry of the ship"}, {"desc": "Gunship part entry top close", "label": "GunshipPartEntryTopClose", "addr": {"J": "45C64", "U": "45C64", "E": "45D30"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the animationation of the top of the entry closing"}, {"desc": "Gunship part check spawn platform", "label": "GunshipPartCheckSpawnPlatform", "addr": {"J": "45CC0", "U": "45CC0", "E": "45D8C"}, "size": "54", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the platform should spawn"}, {"desc": "Gunship spawn platform", "label": "GunshipSpawnPlatform", "addr": {"J": "45D14", "U": "45D14", "E": "45DE0"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Handles the platform spawning"}, {"desc": "Gunship part despawn platform", "label": "GunshipPartDespawnPlatform", "addr": {"J": "45D64", "U": "45D64", "E": "45E30"}, "size": "98", "mode": "thumb", "params": null, "return": null, "notes": "Handles the platform despawning"}, {"desc": "Gunship AI", "label": "Gunship_AI", "addr": {"J": "45E4C", "U": "45E4C", "E": "45F18"}, "size": "24C", "mode": "thumb", "params": null, "return": null}, {"desc": "Gunship part AI", "label": "GunshipPart_AI", "addr": {"J": "46098", "U": "46098", "E": "46164"}, "size": "1E4", "mode": "thumb", "params": null, "return": null}, {"desc": "Glass tube change current clipdata action", "label": "GlassTubeChangeClipAction", "addr": {"J": "4627C", "U": "4627C", "E": "46348"}, "size": "160", "mode": "thumb", "params": null, "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Disables the glass tube hitbox"}, {"desc": "Glass tube initialize", "label": "GlassTubeInit", "addr": {"J": "463DC", "U": "463DC", "E": "464A8"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a glass tube sprite"}, {"desc": "Glass tube check power bomb collision", "label": "GlassTubeCheckPowerBombCollision", "addr": {"J": "4646C", "U": "4646C", "E": "46538"}, "size": "C0", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the glass tube is colliding with a power bomb"}, {"desc": "Glass tube delay before breaking", "label": "GlassTubeDelayBeforeBreaking", "addr": {"J": "4652C", "U": "4652C", "E": "465F8"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Delay before the glass tube starts to break"}, {"desc": "Glass tube check cracking animation ended", "label": "GlassTubeCheckCrackingAnimEnded", "addr": {"J": "46568", "U": "46568", "E": "46634"}, "size": "8C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the cracking animationation has ended"}, {"desc": "Glass tube check breaking animation ended", "label": "GlassTubeCheckBreakingAnimEnded", "addr": {"J": "465F4", "U": "465F4", "E": "466C0"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the breaking animationation has ended"}, {"desc": "Glass tube AI", "label": "GlassTube_AI", "addr": {"J": "46620", "U": "46620", "E": "466EC"}, "size": "E8", "mode": "thumb", "params": null, "return": null}, {"desc": "Save platform Chozodia initialize", "label": "SavePlatformChozodiaInit", "addr": {"J": "46708", "U": "46708", "E": "467D4"}, "size": "168", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a save platform (Chozodia) sprite"}, {"desc": "Save platform Chozodia Samus detection", "label": "SavePlatformChozodiaSamusDetection", "addr": {"J": "46870", "U": "46870", "E": "4693C"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Checks if Samus is on the save platform (calls SavePlatformDetectSamus and checks if morhed/crouching)"}, {"desc": "Save platform Chozodia check opening animation ended", "label": "SavePlatformChozodiaCheckOpeningAnimEnded", "addr": {"J": "468C8", "U": "468C8", "E": "46994"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the opening animationation has ended"}, {"desc": "Save platform Chozodia second Samus detection", "label": "SavePlatformChozodiaSecondSamusDetection", "addr": {"J": "468F4", "U": "468F4", "E": "469C0"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Re-Detects if Samus in on the save platform after the opening animationation"}, {"desc": "Save platform Chozodia check closing animation ended", "label": "SavePlatformChozodiaCheckClosingAnimEnded", "addr": {"J": "4696C", "U": "4696C", "E": "46A38"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the closing animationation has ended"}, {"desc": "Save platform Chozodia release Samus", "label": "SavePlatformChozodiaReleaseSamus", "addr": {"J": "4699C", "U": "4699C", "E": "46A68"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Releases Samus (sets pose to facing the foreground)"}, {"desc": "Save platform Chozodia Chozodia Samus detection out", "label": "SavePlatformChozodiaChozodiaSamusDetectionOut", "addr": {"J": "469D0", "U": "469D0", "E": "46A9C"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Detects if Samus is out of the platform after being released"}, {"desc": "Save station Chozodia check refill", "label": "SaveStationChozodiaCheckRefill", "addr": {"J": "46A04", "U": "46A04", "E": "46AD0"}, "size": "C0", "mode": "thumb", "params": null, "return": null, "notes": "Checks if Samus needs a refill"}, {"desc": "Save station Chozodia refill", "label": "SaveStationChozodiaRefill", "addr": {"J": "46AC4", "U": "46AC4", "E": "46B90"}, "size": "194", "mode": "thumb", "params": null, "return": null, "notes": "Refills Samus"}, {"desc": "Save platform Chozodia after refill", "label": "SavePlatformChozodiaAfterRefill", "addr": {"J": "46C58", "U": "46C58", "E": "46D24"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the item banner at the end of the refill is gone"}, {"desc": "Save platform Chozodia save input", "label": "SavePlatformChozodiaSaveInput", "addr": {"J": "46C90", "U": "46C90", "E": "46D5C"}, "size": "D0", "mode": "thumb", "params": null, "return": null, "notes": "Called before the player inputs an answer to the save yes no cursor"}, {"desc": "Save platform Chozodia flashing animation", "label": "SavePlatformChozodiaFlashingAnim", "addr": {"J": "46D60", "U": "46D60", "E": "46E2C"}, "size": "40", "mode": "thumb", "params": null, "return": null, "notes": "Handles the flashing animationation when saving"}, {"desc": "Save platform Chozodia flashing animation end", "label": "SavePlatformChozodiaFlashingAnimEnd", "addr": {"J": "46DA0", "U": "46DA0", "E": "46E6C"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Called after saving"}, {"desc": "Save platform Chozodia text timer", "label": "SavePlatformChozodiaTextTimer", "addr": {"J": "46DE4", "U": "46DE4", "E": "46EB0"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Timer before displaying the \"save complete\" banner"}, {"desc": "Save platform Chozodia check message banner out", "label": "SavePlatformChozodiaCheckMessageBannerOut", "addr": {"J": "46E28", "U": "46E28", "E": "46EF4"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the item banner at the end of the save is gone"}, {"desc": "Save platform Chozodia message banner disappearing timer", "label": "SavePlatformChozodiaMessageBannerDisappearingTimer", "addr": {"J": "46E60", "U": "46E60", "E": "46F2C"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Timer when the message banner is disappearing"}, {"desc": "Save platform top Chozodia initialize", "label": "SavePlatformTopChozodiaInit", "addr": {"J": "46E84", "U": "46E84", "E": "46F50"}, "size": "1B8", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a save platform top (Chozodia) sprite"}, {"desc": "Save platform top Chozodia check refill animation ended", "label": "SavePlatformTopChozodiaCheckRefillAnimEnded", "addr": {"J": "4703C", "U": "4703C", "E": "47108"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the refill animationation has ended"}, {"desc": "Save platform top Chozodia_Empty", "label": "SavePlatformTopChozodia_Empty", "addr": {"J": "47068", "U": "47068", "E": "47134"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "Empty function"}, {"desc": "Save platform top Chozodia extend graphics initialize", "label": "SavePlatformTopChozodiaExtendGfxInit", "addr": {"J": "4706C", "U": "4706C", "E": "47138"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the top extending down"}, {"desc": "Save platform top Chozodia check extending animation ended", "label": "SavePlatformTopChozodiaCheckExtendingAnimEnded", "addr": {"J": "47088", "U": "47088", "E": "47154"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the extending animationation has ended"}, {"desc": "Save platform to Chozodia retracting graphics initialize", "label": "SavePlatformToChozodiaRetractingGfxInit", "addr": {"J": "470B4", "U": "470B4", "E": "47180"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the top retracting"}, {"desc": "Save platform top Chozodia check retracting animation ended", "label": "SavePlatformTopChozodiaCheckRetractingAnimEnded", "addr": {"J": "470E8", "U": "470E8", "E": "471B4"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the retracting animationation has ended"}, {"desc": "Save platform top Chozodia check tube animation spawn ended", "label": "SavePlatformTopChozodiaCheckTubeAnimSpawnEnded", "addr": {"J": "47114", "U": "47114", "E": "471E0"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the tube spawning animationation has ended"}, {"desc": "Save platform top Chozodia check spawn big light", "label": "SavePlatformTopChozodiaCheckSpawnBigLight", "addr": {"J": "47164", "U": "47164", "E": "47230"}, "size": "54", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the big light should spawn"}, {"desc": "Save platform top Chozodia check tube animation ended", "label": "SavePlatformTopChozodiaCheckTubeAnimEnded", "addr": {"J": "471B8", "U": "471B8", "E": "47284"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the tube animationation has ended"}, {"desc": "Save platform top Chozodia check tube despawning animation ended", "label": "SavePlatformTopChozodiaCheckTubeDespawningAnimEnded", "addr": {"J": "471E8", "U": "471E8", "E": "472B4"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the tube despawning animationation has ended"}, {"desc": "Save platform top Chozodia check tube around animation ended", "label": "SavePlatformTopChozodiaCheckTubeAroundAnimEnded", "addr": {"J": "47224", "U": "47224", "E": "472F0"}, "size": "18", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the tube around animationation has ended (quick beam going to the center at the beginning)"}, {"desc": "Save station top Chozodia check tube around animation ended", "label": "SaveStationTopChozodiaCheckTubeAroundAnimEnded", "addr": {"J": "4723C", "U": "4723C", "E": "47308"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Handles the down up tube animationation (thing going from ground to top)"}, {"desc": "Save platform (Chozodia) AI", "label": "SavePlatform_Chozodia_AI", "addr": {"J": "47280", "U": "47280", "E": "4734C"}, "size": "1E8", "mode": "thumb", "params": null, "return": null}, {"desc": "Save platform top (Chozodia) AI", "label": "SavePlatformTop_Chozodia_AI", "addr": {"J": "47468", "U": "47468", "E": "47534"}, "size": "198", "mode": "thumb", "params": null, "return": null}, {"desc": "Baristute check Samus near left right", "label": "BaristuteCheckSamusNearLeftRight", "addr": {"J": "47600", "U": "47600", "E": "476CC"}, "size": "20", "mode": "thumb", "params": null, "return": {"desc": "In range", "type": "bool"}, "notes": "Checks if Samus is in range of the baristute (0x200 on both sides)"}, {"desc": "Baristute initialize", "label": "BaristuteInit", "addr": {"J": "47620", "U": "47620", "E": "476EC"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a baristute sprite"}, {"desc": "Baristute jumping graphics initialize", "label": "BaristuteJumpingGfxInit", "addr": {"J": "476B0", "U": "476B0", "E": "4777C"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the baristute jumping"}, {"desc": "Baristute check before jumping animation ended", "label": "BaristuteCheckBeforeJumpingAnimEnded", "addr": {"J": "476E4", "U": "476E4", "E": "477B0"}, "size": "7C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the animationation before jumping has ended"}, {"desc": "Baristute jumping", "label": "BaristuteJumping", "addr": {"J": "47760", "U": "47760", "E": "4782C"}, "size": "100", "mode": "thumb", "params": null, "return": null, "notes": "Handles the baristute jumping"}, {"desc": "Baristute landing graphics initialize", "label": "BaristuteLandingGfxInit", "addr": {"J": "47860", "U": "47860", "E": "4792C"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the baristute landing"}, {"desc": "Baristute check landing animation near ended", "label": "BaristuteCheckLandingAnimNearEnded", "addr": {"J": "4789C", "U": "4789C", "E": "47968"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the landing animationatoin has nearly ended"}, {"desc": "Baristute idle graphics initialize", "label": "BaristuteIdleGfxInit", "addr": {"J": "478B8", "U": "478B8", "E": "47984"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the baristute being idle"}, {"desc": "Baristute idle", "label": "BaristuteIdle", "addr": {"J": "478E8", "U": "478E8", "E": "479B4"}, "size": "CC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the baristute being idle"}, {"desc": "Baristute walking graphics initialize", "label": "BaristuteWalkingGfxInit", "addr": {"J": "479B4", "U": "479B4", "E": "47A80"}, "size": "74", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the baristute walking"}, {"desc": "Baristute play walking sound", "label": "BaristutePlayWalkingSound", "addr": {"J": "47A28", "U": "47A28", "E": "47AF4"}, "size": "50", "mode": "thumb", "params": null, "return": null, "notes": "Plays the walking sound"}, {"desc": "Baristute walking", "label": "BaristuteWalking", "addr": {"J": "47A78", "U": "47A78", "E": "47B44"}, "size": "D4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the baristute walking"}, {"desc": "Baristute bouncing graphics initialize", "label": "BaristuteBouncingGfxInit", "addr": {"J": "47B4C", "U": "47B4C", "E": "47C18"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the baristute bouncing"}, {"desc": "Baristute bouncing", "label": "BaristuteBouncing", "addr": {"J": "47B70", "U": "47B70", "E": "47C3C"}, "size": "70", "mode": "thumb", "params": null, "return": null, "notes": "Handles the baristute bouncing"}, {"desc": "Baristute death", "label": "BaristuteDeath", "addr": {"J": "47BE0", "U": "47BE0", "E": "47CAC"}, "size": "150", "mode": "thumb", "params": null, "return": null, "notes": "Handles a baristute death, does checks related to the baristutes in Kraid"}, {"desc": "Baristute AI", "label": "Baristute_AI", "addr": {"J": "47D30", "U": "47D30", "E": "47DFC"}, "size": "18C", "mode": "thumb", "params": null, "return": null}, {"desc": "Elevator statue change two ground current clipdata action", "label": "ElevatorStatueChangeTwoGroundClipAction", "addr": {"J": "47EBC", "U": "47EBC", "E": "47F88"}, "size": "50", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Enable the hitbox of the statue debris on the ground"}, {"desc": "Kraid elevator statue change current clipdata action", "label": "KraidElevatorStatueChangeClipAction", "addr": {"J": "47F0C", "U": "47F0C", "E": "47FD8"}, "size": "64", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Enable/disable the hitbox of the statue"}, {"desc": "Kraid elevator statue after fall", "label": "KraidElevatorStatueAfterFall", "addr": {"J": "47F70", "U": "47F70", "E": "4803C"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Called after the statue finished falling or when initializing the sprite but it has already falled"}, {"desc": "Kraid elevator statue initialize", "label": "KraidElevatorStatueInit", "addr": {"J": "47FBC", "U": "47FBC", "E": "48088"}, "size": "8C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a Kraid elevator statue sprite"}, {"desc": "Kraid elevator statue check should fall", "label": "KraidElevatorStatueCheckShouldFall", "addr": {"J": "48048", "U": "48048", "E": "48114"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Checks if Samus isn't using an elevator and if Kraid is dead"}, {"desc": "Kraid elevator statue timer before falling", "label": "KraidElevatorStatueTimerBeforeFalling", "addr": {"J": "4807C", "U": "4807C", "E": "48148"}, "size": "54", "mode": "thumb", "params": null, "return": null, "notes": "Timer before the statue starts falling"}, {"desc": "Kraid elevator statue falling", "label": "KraidElevatorStatueFalling", "addr": {"J": "480D0", "U": "480D0", "E": "4819C"}, "size": "A4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the statue falling"}, {"desc": "Ridley elevator statue change current clipdata action", "label": "RidleyElevatorStatueChangeClipAction", "addr": {"J": "48174", "U": "48174", "E": "48240"}, "size": "64", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Enable/disable the hitbox of the statue"}, {"desc": "Ridley elevator statue after fall", "label": "RidleyElevatorStatueAfterFall", "addr": {"J": "481D8", "U": "481D8", "E": "482A4"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Called after the statue finished falling or when initializing the sprite but it has already falled"}, {"desc": "Ridley statue elevator initialize", "label": "RidleyStatueElevatorInit", "addr": {"J": "48224", "U": "48224", "E": "482F0"}, "size": "8C", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a Ridley elevator statue sprite"}, {"desc": "Ridley elevator statue check should fall", "label": "RidleyElevatorStatueCheckShouldFall", "addr": {"J": "482B0", "U": "482B0", "E": "4837C"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Checks if Samus isn't using an elevator and if Ridley is dead"}, {"desc": "Ridley elevator statue timer before falling", "label": "RidleyElevatorStatueTimerBeforeFalling", "addr": {"J": "482E4", "U": "482E4", "E": "483B0"}, "size": "54", "mode": "thumb", "params": null, "return": null, "notes": "Timer before the statue starts falling"}, {"desc": "Ridley elevator statue falling", "label": "RidleyElevatorStatueFalling", "addr": {"J": "48338", "U": "48338", "E": "48404"}, "size": "B8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the statue falling"}, {"desc": "Kraid elevator statue AI", "label": "KraidElevatorStatue_AI", "addr": {"J": "483F0", "U": "483F0", "E": "484BC"}, "size": "48", "mode": "thumb", "params": null, "return": null}, {"desc": "Ridley elevator statue AI", "label": "RidleyElevatorStatue_AI", "addr": {"J": "48438", "U": "48438", "E": "48504"}, "size": "48", "mode": "thumb", "params": null, "return": null}, {"desc": "Elevator statue debris AI", "label": "ElevatorStatueDebris_AI", "addr": {"J": "48480", "U": "48480", "E": "4854C"}, "size": "CC", "mode": "thumb", "params": null, "return": null}, {"desc": "Rising Chozo pillar random sprite debris", "label": "RisingChozoPillarRandomSpriteDebris", "addr": {"J": "4854C", "U": "4854C", "E": "48618"}, "size": "A8", "mode": "thumb", "params": [{"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}, {"desc": "Random number", "type": "u8"}], "return": null, "notes": "Spawns random sprite debris"}, {"desc": "Rising Chozo pillar random particles", "label": "RisingChozoPillarRandomParticles", "addr": {"J": "485F4", "U": "485F4", "E": "486C0"}, "size": "AC", "mode": "thumb", "params": [{"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}, {"desc": "Random number", "type": "u8"}], "return": null, "notes": "Spawns random particle effects"}, {"desc": "Rising Chozo pillar spawn three platforms", "label": "RisingChozoPillarSpawnThreePlatforms", "addr": {"J": "486A0", "U": "486A0", "E": "4876C"}, "size": "E4", "mode": "thumb", "params": [{"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}, {"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Spawns 3 Chozo pillar platform sprites"}, {"desc": "Rising Chozo pillar spawn two platforms", "label": "RisingChozoPillarSpawnTwoPlatforms", "addr": {"J": "48784", "U": "48784", "E": "48850"}, "size": "B8", "mode": "thumb", "params": [{"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}, {"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Spawns 2 Chozo pillar platform sprites"}, {"desc": "Rising Chozo pillar spawn one platform", "label": "RisingChozoPillarSpawnOnePlatform", "addr": {"J": "4883C", "U": "4883C", "E": "48908"}, "size": "68", "mode": "thumb", "params": [{"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}, {"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Spawns 1 Chozo pillar platform sprite"}, {"desc": "Rising Chozo pillar AI", "label": "RisingChozoPillar_AI", "addr": {"J": "488A4", "U": "488A4", "E": "48970"}, "size": "248", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo pillar platform AI", "label": "ChozoPillarPlatform_AI", "addr": {"J": "48AEC", "U": "48AEC", "E": "48BB8"}, "size": "124", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo pillar platform shadow AI", "label": "ChozoPillarPlatformShadow_AI", "addr": {"J": "48C10", "U": "48C10", "E": "48CDC"}, "size": "6C", "mode": "thumb", "params": null, "return": null}, {"desc": "Skultera set sides hitbox", "label": "SkulteraSetSidesHitbox", "addr": {"J": "48C7C", "U": "48C7C", "E": "48D48"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Sets the left and right hitboxes of the skultera depending on the X flip"}, {"desc": "Skultera X movement", "label": "SkulteraXMovement", "addr": {"J": "48CAC", "U": "48CAC", "E": "48D78"}, "size": "64", "mode": "thumb", "params": [{"desc": "X movement", "type": "u16"}], "return": {"desc": "Previous collision check is solid", "type": "bool"}, "notes": "Handles the horizontal movement of the skultera"}, {"desc": "Skultera initialize", "label": "SkulteraInit", "addr": {"J": "48D10", "U": "48D10", "E": "48DDC"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a skultera sprite"}, {"desc": "Skultera graphics initialize", "label": "SkulteraGfxInit", "addr": {"J": "48D78", "U": "48D78", "E": "48E44"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for skultera"}, {"desc": "Skultera moving", "label": "SkulteraMoving", "addr": {"J": "48DA8", "U": "48DA8", "E": "48E74"}, "size": "C4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the skultera when not chasing Samus"}, {"desc": "Skultera chasing Samus graphics initialize", "label": "SkulteraChasingSamusGfxInit", "addr": {"J": "48E6C", "U": "48E6C", "E": "48F38"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for skultera chasing Samus"}, {"desc": "Skultera chasing Samus", "label": "SkulteraChasingSamus", "addr": {"J": "48E8C", "U": "48E8C", "E": "48F58"}, "size": "110", "mode": "thumb", "params": null, "return": null, "notes": "Handles the movement of the skultera when chasing Samus"}, {"desc": "Skultera turning around graphics initialize", "label": "SkulteraTurningAroundGfxInit", "addr": {"J": "48F9C", "U": "48F9C", "E": "49068"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for skultera turning around"}, {"desc": "Skultera check turning around animation ended", "label": "SkulteraCheckTurningAroundAnimEnded", "addr": {"J": "48FD4", "U": "48FD4", "E": "490A0"}, "size": "24", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the turning around animationation has ended"}, {"desc": "Skultera AI", "label": "Skultera_AI", "addr": {"J": "48FF8", "U": "48FF8", "E": "490C4"}, "size": "18C", "mode": "thumb", "params": null, "return": null}, {"desc": "Statue vertical line change current clipdata action", "label": "StatueVerticalLineChangeClipAction", "addr": {"J": "49184", "U": "49184", "E": "49250"}, "size": "80", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Enable/disable the hitbox of a vertical line of 6 blocks"}, {"desc": "Statue horizontal line three change current clipdata action", "label": "StatueHorizontalLineThreeChangeClipAction", "addr": {"J": "49204", "U": "49204", "E": "492D0"}, "size": "58", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Enable/disable the hitbox of a horizontal line of 3 blocks"}, {"desc": "Statue horizontal line height change current clipdata action", "label": "StatueHorizontalLineHeightChangeClipAction", "addr": {"J": "4925C", "U": "4925C", "E": "49328"}, "size": "B8", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Enable/disable the hitbox of a horizontal line of 8 blocks"}, {"desc": "Kraid statue after open", "label": "KraidStatueAfterOpen", "addr": {"J": "49314", "U": "49314", "E": "493E0"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Called after the statue finished opening or when initializing the sprite but it's already opened"}, {"desc": "Kraid statue initialize", "label": "KraidStatueInit", "addr": {"J": "4933C", "U": "4933C", "E": "49408"}, "size": "C8", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a Kraid statue sprite"}, {"desc": "Kraid statue check background locked", "label": "KraidStatueCheckBackgroundLocked", "addr": {"J": "49404", "U": "49404", "E": "494D0"}, "size": "70", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the background has finished scrolling to the center"}, {"desc": "Kraid statue opening", "label": "KraidStatueOpening", "addr": {"J": "49474", "U": "49474", "E": "49540"}, "size": "1B8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the Kraid statue opening"}, {"desc": "Ridley statue change three current clipdata action", "label": "RidleyStatueChangeThreeClipAction", "addr": {"J": "4962C", "U": "4962C", "E": "496F8"}, "size": "6C", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Enable the hitbox for a horizontal line of 3 blocks"}, {"desc": "Ridley statue change four current clipdata action", "label": "RidleyStatueChangeFourClipAction", "addr": {"J": "49698", "U": "49698", "E": "49764"}, "size": "7C", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Enable/disable the hitbox for 4 blocks"}, {"desc": "Ridley statue after open", "label": "RidleyStatueAfterOpen", "addr": {"J": "49714", "U": "49714", "E": "497E0"}, "size": "28", "mode": "thumb", "params": null, "return": null, "notes": "Called after the statue finished opening or when initializing the sprite but it's already opened"}, {"desc": "Ridley statue initialize", "label": "RidleyStatueInit", "addr": {"J": "4973C", "U": "4973C", "E": "49808"}, "size": "B4", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a Ridley statue sprite"}, {"desc": "Ridley statue check background locked", "label": "RidleyStatueCheckBackgroundLocked", "addr": {"J": "497F0", "U": "497F0", "E": "498BC"}, "size": "54", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the background has finished scrolling to the center"}, {"desc": "Ridley statue opening", "label": "RidleyStatueOpening", "addr": {"J": "49844", "U": "49844", "E": "49910"}, "size": "1F4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the Ridley statue opening"}, {"desc": "Kraid statue AI", "label": "KraidStatue_AI", "addr": {"J": "49A38", "U": "49A38", "E": "49B04"}, "size": "118", "mode": "thumb", "params": null, "return": null}, {"desc": "Ridley statue AI", "label": "RidleyStatue_AI", "addr": {"J": "49B50", "U": "49B50", "E": "49C1C"}, "size": "80", "mode": "thumb", "params": null, "return": null}, {"desc": "Searchlight AI", "label": "Searchlight_AI", "addr": {"J": "49BD0", "U": "49BD0", "E": "49C9C"}, "size": "1FC", "mode": "thumb", "params": null, "return": null}, {"desc": "Primary sprite B3 AI", "label": "PrimarySpriteB3_AI", "addr": {"J": "49DCC", "U": "49DCC", "E": "49E98"}, "size": "EC", "mode": "thumb", "params": null, "return": null}, {"desc": "Gadora initialize", "label": "GadoraInit", "addr": {"J": "49EB8", "U": "49EB8", "E": "49F84"}, "size": "134", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a gadora sprite"}, {"desc": "Gadora graphics initialize", "label": "GadoraGfxInit", "addr": {"J": "49FEC", "U": "49FEC", "E": "4A0B8"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the gadora"}, {"desc": "Gadora Samus detection", "label": "GadoraSamusDetection", "addr": {"J": "4A01C", "U": "4A01C", "E": "4A0E8"}, "size": "54", "mode": "thumb", "params": null, "return": null, "notes": "Checks if Samus is in range"}, {"desc": "Gadora check before opening eye animation ended", "label": "GadoraCheckBeforeOpeningEyeAnimEnded", "addr": {"J": "4A070", "U": "4A070", "E": "4A13C"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the animationation before the opening eye one has ended"}, {"desc": "Gadora check opening eye animation ended", "label": "GadoraCheckOpeningEyeAnimEnded", "addr": {"J": "4A0A4", "U": "4A0A4", "E": "4A170"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the opening eye animationation ended, spawns a gadora beam sprite if necessary"}, {"desc": "Gadora eye opened", "label": "GadoraEyeOpened", "addr": {"J": "4A10C", "U": "4A10C", "E": "4A1D8"}, "size": "74", "mode": "thumb", "params": null, "return": null, "notes": "Handles the gadora having its eye opened"}, {"desc": "Gadora check closing eye animation near ended", "label": "GadoraCheckClosingEyeAnimNearEnded", "addr": {"J": "4A180", "U": "4A180", "E": "4A24C"}, "size": "1C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the closing eye animationation has nearly ended"}, {"desc": "Gadora death graphics initialize", "label": "GadoraDeathGfxInit", "addr": {"J": "4A19C", "U": "4A19C", "E": "4A268"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the graphics for the gadora dying"}, {"desc": "Gadora death", "label": "GadoraDeath", "addr": {"J": "4A1CC", "U": "4A1CC", "E": "4A298"}, "size": "D4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the death of the gadora"}, {"desc": "Gadora AI", "label": "Gadora_AI", "addr": {"J": "4A2A0", "U": "4A2A0", "E": "4A36C"}, "size": "78", "mode": "thumb", "params": null, "return": null}, {"desc": "Gadora eye AI", "label": "GadoraEye_AI", "addr": {"J": "4A318", "U": "4A318", "E": "4A3E4"}, "size": "1D0", "mode": "thumb", "params": null, "return": null}, {"desc": "Gadora beam AI", "label": "GadoraBeam_AI", "addr": {"J": "4A4E8", "U": "4A4E8", "E": "4A5B4"}, "size": "FC", "mode": "thumb", "params": null, "return": null}, {"desc": "Steam AI", "label": "Steam_AI", "addr": {"J": "4A5E4", "U": "4A5E4", "E": "4A6B0"}, "size": "208", "mode": "thumb", "params": null, "return": null}, {"desc": "Steam (diagonal) AI", "label": "Steam_Diagonal_AI", "addr": {"J": "4A7EC", "U": "4A7EC", "E": "4A8B8"}, "size": "144", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item block change current clipdata action", "label": "UnknownItemBlockChangeClipAction", "addr": {"J": "4A930", "U": "4A930", "E": "4A9FC"}, "size": "70", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Enable/disable the hitbox for the block"}, {"desc": "Unknown item block AI", "label": "UnknownItemBlock_AI", "addr": {"J": "4A9A0", "U": "4A9A0", "E": "4AA6C"}, "size": "22C", "mode": "thumb", "params": null, "return": null}, {"desc": "Unknown item block light AI", "label": "UnknownItemBlockLight_AI", "addr": {"J": "4ABCC", "U": "4ABCC", "E": "4AC98"}, "size": "34", "mode": "thumb", "params": null, "return": null}, {"desc": "Escape ship set ignore Samus", "label": "EscapeShipSetIgnoreSamus", "addr": {"J": "4AC94", "U": "4AC94", "E": "4AD60"}, "size": "34", "mode": "thumb", "params": null, "return": null, "notes": "Loops through all sprites and sets the ignore Samus collision timer to 0xf"}, {"desc": "Escape ship set pirate draw order", "label": "EscapeShipSetPirateDrawOrder", "addr": {"J": "4ACC8", "U": "4ACC8", "E": "4AD94"}, "size": "40", "mode": "thumb", "params": null, "return": null, "notes": "Sets the draw order of all space pirates to 2"}, {"desc": "Escape ship check colliding with laser", "label": "EscapeShipCheckCollidingWithLaser", "addr": {"J": "4ADCC", "U": "4ADCC", "E": "4AE98"}, "size": "C4", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the escape ship is colliding with a space pirate laser, if yes destroys it and spawns a particle effect"}, {"desc": "Escape ship AI", "label": "EscapeShip_AI", "addr": {"J": "4AE90", "U": "4AE90", "E": "4AF5C"}, "size": "4FC", "mode": "thumb", "params": null, "return": null}, {"desc": "Escape ship part AI", "label": "EscapeShipPart_AI", "addr": {"J": "4B38C", "U": "4B38C", "E": "4B458"}, "size": "278", "mode": "thumb", "params": null, "return": null}, {"desc": "Space pirate carrying power bomb AI", "label": "SpacePirateCarryingPowerBomb_AI", "addr": {"J": "4B604", "U": "4B604", "E": "4B6D0"}, "size": "180", "mode": "thumb", "params": null, "return": null}, {"desc": "Fake power bomb AI", "label": "FakePowerBomb_AI", "addr": {"J": "4B784", "U": "4B784", "E": "4B850"}, "size": "6C", "mode": "thumb", "params": null, "return": null}, {"desc": "Fake power bomb event trigger AI", "label": "FakePowerBombEventTrigger_AI", "addr": {"J": "4B7F0", "U": "4B7F0", "E": "4B8BC"}, "size": "94", "mode": "thumb", "params": null, "return": null}, {"desc": "Falling Chozo pillar AI", "label": "FallingChozoPillar_AI", "addr": {"J": "4B884", "U": "4B884", "E": "4B950"}, "size": "218", "mode": "thumb", "params": null, "return": null}, {"desc": "Mecha Ridley sync sub sprites position", "label": "MechaRidleySyncSubSpritesPosition", "addr": {"J": "4BA9C", "U": "4BA9C", "E": "4BB68"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Synchronizes the mecha Ridley part sprites position with the mecha Ridley sprite"}, {"desc": "Mecha Ridley part green glow", "label": "MechaRidleyPartGreenGlow", "addr": {"J": "4BB04", "U": "4BB04", "E": "4BBD0"}, "size": "84", "mode": "thumb", "params": null, "return": null, "notes": "Handles the green glow on the mecha Ridley parts"}, {"desc": "Mecha Ridley initialize", "label": "MechaRidleyInit", "addr": {"J": "4BF68", "U": "4BF68", "E": "4C034"}, "size": "230", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a mecha Ridley sprite"}, {"desc": "Mecha Ridley start walking", "label": "MechaRidleyStartWalking", "addr": {"J": "4C198", "U": "4C198", "E": "4C264"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Called once before mecha Ridley starts walking"}, {"desc": "Mecha Ridley walking stationary", "label": "MechaRidleyWalkingStationary", "addr": {"J": "4C1E0", "U": "4C1E0", "E": "4C2AC"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Handles mecha Ridley walking semi-stationary at the beginning"}, {"desc": "Mecha Ridley walking", "label": "MechaRidleyWalking", "addr": {"J": "4C200", "U": "4C200", "E": "4C2CC"}, "size": "A4", "mode": "thumb", "params": null, "return": null, "notes": "Handles mecha Ridley walking at the begining"}, {"desc": "Mecha Ridley start battle", "label": "MechaRidleyStartBattle", "addr": {"J": "4C2A4", "U": "4C2A4", "E": "4C370"}, "size": "98", "mode": "thumb", "params": null, "return": null, "notes": "Called after mecha Ridley finished walking, plays the music and enables the alarm"}, {"desc": "Mecha Ridley check Samus out of ammo", "label": "MechaRidleyCheckSamusOutOfAmmo", "addr": {"J": "4C33C", "U": "4C33C", "E": "4C408"}, "size": "8C", "mode": "thumb", "params": [{"desc": "RAM Slot", "type": "u8"}], "return": {"desc": "Samus has no more ammo", "type": "bool"}, "notes": "Checks if Samus is out of ammo (missiles and super missiles), used to force a missile attack"}, {"desc": "Ridley claw attack", "label": "RidleyClawAttack", "addr": {"J": "4C400", "U": "4C400", "E": "4C4CC"}, "size": "12C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the claw attack"}, {"desc": "Mecha Ridley standing up", "label": "MechaRidleyStandingUp", "addr": {"J": "4C52C", "U": "4C52C", "E": "4C5F8"}, "size": "B0", "mode": "thumb", "params": null, "return": null, "notes": "Handles mecha Ridley standing up"}, {"desc": "Mecha Ridley curled up", "label": "MechaRidleyCurledUp", "addr": {"J": "4C5DC", "U": "4C5DC", "E": "4C6A8"}, "size": "54", "mode": "thumb", "params": null, "return": null, "notes": "Handles mecha Ridley curled up"}, {"desc": "Mecha Ridley check retracting head before moving back animation ended", "label": "MechaRidleyCheckRetractingHeadBeforeMovingBackAnimEnded", "addr": {"J": "4C630", "U": "4C630", "E": "4C6FC"}, "size": "78", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the retracting head animationation before moving back has ended"}, {"desc": "Mecha Ridley moving back", "label": "MechaRidleyMovingBack", "addr": {"J": "4C6A8", "U": "4C6A8", "E": "4C774"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Handles mecha Ridley moving back"}, {"desc": "Mecha Ridley before fireballs", "label": "MechaRidleyBeforeFireballs", "addr": {"J": "4C738", "U": "4C738", "E": "4C804"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Called once before the fireballs attack"}, {"desc": "Mecha Ridley check extending head before fireballs animation ended", "label": "MechaRidleyCheckExtendingHeadBeforeFireballsAnimEnded", "addr": {"J": "4C784", "U": "4C784", "E": "4C850"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the extending head animationation before the fireballs attack has ended"}, {"desc": "Mecha Ridley check opening mouth animation ended", "label": "MechaRidleyCheckOpeningMouthAnimEnded", "addr": {"J": "4C7BC", "U": "4C7BC", "E": "4C888"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the opening mouth animationation before the fireballs attack has ended"}, {"desc": "Mecha Ridley fireballs attack", "label": "MechaRidleyFireballsAttack", "addr": {"J": "4C7F4", "U": "4C7F4", "E": "4C8C0"}, "size": "BC", "mode": "thumb", "params": null, "return": null, "notes": "Handles the fireballs attack"}, {"desc": "Mecha Ridley check closing mouth animation ended", "label": "MechaRidleyCheckClosingMouthAnimEnded", "addr": {"J": "4C8B0", "U": "4C8B0", "E": "4C97C"}, "size": "30", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the closing mouth animationation after the fireballs attack has ended"}, {"desc": "Mecha Ridley check retracting head after fireballs animation ended", "label": "MechaRidleyCheckRetractingHeadAfterFireballsAnimEnded", "addr": {"J": "4C8E0", "U": "4C8E0", "E": "4C9AC"}, "size": "4C", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the retracting head animationation after the fireballs attack has ended"}, {"desc": "Mecha Ridley start dying", "label": "MechaRidleyStartDying", "addr": {"J": "4C92C", "U": "4C92C", "E": "4C9F8"}, "size": "68", "mode": "thumb", "params": null, "return": null, "notes": "Called once before mecha Ridley dies"}, {"desc": "Mecha Ridley dying", "label": "MechaRidleyDying", "addr": {"J": "4C994", "U": "4C994", "E": "4CA60"}, "size": "9C", "mode": "thumb", "params": null, "return": null, "notes": "Handles mecha Ridley dying"}, {"desc": "Mecha Ridley glow fading", "label": "MechaRidleyGlowFading", "addr": {"J": "4CA30", "U": "4CA30", "E": "4CAFC"}, "size": "1A8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the fading of the green glow when mecha Ridley dies"}, {"desc": "Mecha Ridley spawn drops", "label": "MechaRidleySpawnDrops", "addr": {"J": "4CBD8", "U": "4CBD8", "E": "4CCA4"}, "size": "244", "mode": "thumb", "params": null, "return": null, "notes": "Handles the spawn of the multiple large energy"}, {"desc": "Mecha Ridley first eye glow", "label": "MechaRidleyFirstEyeGlow", "addr": {"J": "4CE1C", "U": "4CE1C", "E": "4CEE8"}, "size": "A4", "mode": "thumb", "params": null, "return": null, "notes": "Handles the first part of the eye glow at the end of the fight"}, {"desc": "Mecha Ridley second eye glow", "label": "MechaRidleySecondEyeGlow", "addr": {"J": "4CEC0", "U": "4CEC0", "E": "4CF8C"}, "size": "C8", "mode": "thumb", "params": null, "return": null, "notes": "Handles the second part of the eye glow at the end of the fight (spawns an item banner sprite and sets the mecha Ridley killed event)"}, {"desc": "Mecha Ridley part initialize", "label": "MechaRidleyPartInit", "addr": {"J": "4CF88", "U": "4CF88", "E": "4D054"}, "size": "358", "mode": "thumb", "params": null, "return": null, "notes": "Initialize a mecha Ridley part sprite"}, {"desc": "Mecha Ridley part glows", "label": "MechaRidleyPartGlows", "addr": {"J": "4D2E0", "U": "4D2E0", "E": "4D3AC"}, "size": "10", "mode": "thumb", "params": null, "return": null, "notes": "Calls MechaRidleyPartGreenGlow and 4bb88"}, {"desc": "Mecha Ridley part core cover explosion", "label": "MechaRidleyPartCoreCoverExplosion", "addr": {"J": "4D338", "U": "4D338", "E": "4D404"}, "size": "6C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the explosion of the mecha Ridley core cover"}, {"desc": "Mecha Ridley part update front claw hitbox", "label": "MechaRidleyPartUpdateFrontClawHitbox", "addr": {"J": "4D928", "U": "4D928", "E": "4D9F4"}, "size": "238", "mode": "thumb", "params": null, "return": null, "notes": "Updates the hitbox of the claw in front"}, {"desc": "Mecha Ridley AI", "label": "MechaRidley_AI", "addr": {"J": "4DD58", "U": "4DD58", "E": "4DE24"}, "size": "384", "mode": "thumb", "params": null, "return": null}, {"desc": "Mecha Ridley part AI", "label": "MechaRidleyPart_AI", "addr": {"J": "4E0DC", "U": "4E0DC", "E": "4E1A8"}, "size": "3C4", "mode": "thumb", "params": null, "return": null}, {"desc": "Mecha Ridley laser AI", "label": "MechaRidleyLaser_AI", "addr": {"J": "4E4A0", "U": "4E4A0", "E": "4E56C"}, "size": "118", "mode": "thumb", "params": null, "return": null}, {"desc": "Mecha Ridley missile AI", "label": "MechaRidleyMissile_AI", "addr": {"J": "4E5B8", "U": "4E5B8", "E": "4E684"}, "size": "208", "mode": "thumb", "params": null, "return": null}, {"desc": "Mecha Ridley fireball AI", "label": "MechaRidleyFireball_AI", "addr": {"J": "4E7C0", "U": "4E7C0", "E": "4E88C"}, "size": "150", "mode": "thumb", "params": null, "return": null}, {"desc": "Escape gate change current clipdata action", "label": "EscapeGateChangeClipAction", "addr": {"J": "4E910", "U": "4E910", "E": "4E9DC"}, "size": "B0", "mode": "thumb", "params": [{"desc": "Clipdata affecting action", "type": "u8", "enum": "ClipdataAffectingAction"}], "return": null, "notes": "Changes the current clipdata affecting action and calls 57E7C (clipdata related) Enable/disable the hitbox for the gate"}, {"desc": "Escape gate AI", "label": "EscapeGate_AI", "addr": {"J": "4E9C0", "U": "4E9C0", "E": "4EA8C"}, "size": "348", "mode": "thumb", "params": null, "return": null}, {"desc": "Set beam particle effect", "label": "SetBeamParticleEffect", "addr": {"J": "4ED08", "U": "4ED08", "E": "4EDD4"}, "size": "8C", "mode": "thumb", "params": null, "return": null}, {"desc": "Check number of projectiles", "label": "CheckNumOfProjectiles", "addr": {"J": "4ED94", "U": "4ED94", "E": "4EE60"}, "size": "50", "mode": "thumb", "params": [{"desc": "Projectile type", "type": "u8", "enum": "ProjectileType"}, {"desc": "Projectile limit", "type": "u8"}], "return": {"desc": "Within limit", "type": "bool"}}, {"desc": "Initialize projectile", "label": "InitProjectile", "addr": {"J": "4EDE4", "U": "4EDE4", "E": "4EEB0"}, "size": "A4", "mode": "thumb", "params": [{"desc": "Projectile type", "type": "u8", "enum": "ProjectileType"}, {"desc": "Projectile Y position", "type": "u16"}, {"desc": "Projectile X position", "type": "u16"}], "return": {"desc": "Initialized", "type": "bool"}}, {"desc": "Update arm cannon and weapons", "label": "UpdateArmCannonAndWeapons", "addr": {"J": "4EE88", "U": "4EE88", "E": "4EF54"}, "size": "47C", "mode": "thumb", "params": null, "return": null}, {"desc": "Advance projectile animation", "label": "AdvanceProjectileAnimation", "addr": {"J": "4F304", "U": "4F304", "E": "4F3D0"}, "size": "38", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}], "return": null}, {"desc": "Call draw projectile 8 bit false", "label": "CallDrawProjectile8BitFalse", "addr": {"J": "4F33C", "U": "4F33C", "E": "4F408"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Loops through all the projectiles and calls DrawProjectile if the 80 status flag isn't set"}, {"desc": "Call draw projectile 8 bit true", "label": "CallDrawProjectile8BitTrue", "addr": {"J": "4F380", "U": "4F380", "E": "4F44C"}, "size": "44", "mode": "thumb", "params": null, "return": null, "notes": "Loops through all the projectiles and calls DrawProjectile if the 80 status flag is set"}, {"desc": "Draw projectile", "label": "DrawProjectile", "addr": {"J": "4F3C4", "U": "4F3C4", "E": "4F490"}, "size": "1B4", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}], "return": null}, {"desc": "Check despawn projectile", "label": "CheckDespawnProjectile", "addr": {"J": "4F578", "U": "4F578", "E": "4F644"}, "size": "F8", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}], "return": null}, {"desc": "Load beam graphics", "label": "LoadBeamGfx", "addr": {"J": "4F670", "U": "4F670", "E": "4F73C"}, "size": "2B0", "mode": "thumb", "params": null, "return": null}, {"desc": "Call load beam graphics and clear projectiles", "label": "LoadBeamGfxAndClearProjectiles", "addr": {"J": "4F920", "U": "4F920", "E": "4F9EC"}, "size": "34", "mode": "thumb", "params": null, "return": null}, {"desc": "Move projectile", "label": "MoveProjectile", "addr": {"J": "4F954", "U": "4F954", "E": "4FA20"}, "size": "C4", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}, {"desc": "Distance", "type": "u8"}], "return": null}, {"desc": "Handle projectile trail", "label": "HandleProjectileTrail", "addr": {"J": "4FC38", "U": "4FC38", "E": "4FD04"}, "size": "A8", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}, {"desc": "Particle effect", "type": "u8", "enum": "ParticleEffect"}, {"desc": "Frequency (ANDed with frame counter)", "type": "u32"}], "return": null}, {"desc": "Move tumbling missile", "label": "MoveTumblingMissile", "addr": {"J": "4FCE0", "U": "4FCE0", "E": "4FDAC"}, "size": "68", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}], "return": null}, {"desc": "Get sprite weakness", "label": "GetSpriteWeakness", "addr": {"J": "50370", "U": "50370", "E": "5043C"}, "size": "30", "mode": "thumb", "params": [{"desc": "Sprite data pointer", "type": "ptr.SpriteData"}], "return": {"desc": "Sprite weakness", "type": "u8", "enum": "SpriteWeakness"}}, {"desc": "Ice beam deal damage", "label": "IceBeamDealDamage", "addr": {"J": "503A0", "U": "503A0", "E": "5046C"}, "size": "84", "mode": "thumb", "params": [{"desc": "Sprite data pointer", "type": "ptr.SpriteData"}, {"desc": "Damage", "type": "u16"}], "return": {"desc": "Sprite freeze timer (F0 if alive, 0 if dead)", "type": "u8"}}, {"desc": "Projectile deal damage", "label": "ProjectileDealDamage", "addr": {"J": "50424", "U": "50424", "E": "504F0"}, "size": "88", "mode": "thumb", "params": [{"desc": "Sprite data pointer", "type": "ptr.SpriteData"}, {"desc": "Damage", "type": "u16"}], "return": {"desc": "Sprite is dead", "type": "bool"}}, {"desc": "Projectile hit sprite immune to projectiles", "label": "ProjectileHitImmuneSprite", "addr": {"J": "504AC", "U": "504AC", "E": "50578"}, "size": "20", "mode": "thumb", "params": [{"desc": "Sprite data pointer", "type": "ptr.SpriteData"}], "return": {"desc": "Sprite data pointer", "type": "ptr.SpriteData"}}, {"desc": "Projectile hit solid sprite", "label": "ProjectileHitSolidSprite", "addr": {"J": "504CC", "U": "504CC", "E": "50598"}, "size": "20", "mode": "thumb", "params": [{"desc": "Sprite data pointer", "type": "ptr.SpriteData"}], "return": {"desc": "Sprite data pointer", "type": "ptr.SpriteData"}}, {"desc": "Power bomb deal damage", "label": "PowerBombDealDamage", "addr": {"J": "504EC", "U": "504EC", "E": "505B8"}, "size": "C0", "mode": "thumb", "params": [{"desc": "Sprite data pointer", "type": "ptr.SpriteData"}], "return": null}, {"desc": "Projectile hit sprite", "label": "ProjectileHitSprite", "addr": {"J": "505AC", "U": "505AC", "E": "50678"}, "size": "A8", "mode": "thumb", "params": [{"desc": "Sprite data pointer", "type": "ptr.SpriteData"}, {"desc": "Projectile Y position", "type": "u16"}, {"desc": "Projectile X position", "type": "u16"}, {"desc": "Damage", "type": "u16"}, {"desc": "Particle effect", "type": "u8", "enum": "ParticleEffect"}], "return": null}, {"desc": "Charged beam hit sprite", "label": "ChargedBeamHitSprite", "addr": {"J": "50654", "U": "50654", "E": "50720"}, "size": "A8", "mode": "thumb", "params": [{"desc": "Sprite data pointer", "type": "ptr.SpriteData"}, {"desc": "Projectile Y position", "type": "u16"}, {"desc": "Projectile X position", "type": "u16"}, {"desc": "Damage", "type": "u16"}, {"desc": "Particle effect", "type": "u8", "enum": "ParticleEffect"}], "return": null}, {"desc": "Freeze sprite", "label": "FreezeSprite", "addr": {"J": "506FC", "U": "506FC", "E": "507C8"}, "size": "28", "mode": "thumb", "params": [{"desc": "Sprite data pointer", "type": "ptr.SpriteData"}, {"desc": "Freeze timer", "type": "u8"}], "return": null}, {"desc": "Ice beam hit sprite", "label": "IceBeamHitSprite", "addr": {"J": "50724", "U": "50724", "E": "507F0"}, "size": "104", "mode": "thumb", "params": [{"desc": "Sprite data pointer", "type": "ptr.SpriteData"}, {"desc": "Projectile Y position", "type": "u16"}, {"desc": "Projectile X position", "type": "u16"}, {"desc": "Damage", "type": "u16"}, {"desc": "Particle effect", "type": "u8", "enum": "ParticleEffect"}], "return": null}, {"desc": "Charged ice beam hit sprite", "label": "ChargedIceBeamHitSprite", "addr": {"J": "50828", "U": "50828", "E": "508F4"}, "size": "EC", "mode": "thumb", "params": [{"desc": "Sprite data pointer", "type": "ptr.SpriteData"}, {"desc": "Projectile Y position", "type": "u16"}, {"desc": "Projectile X position", "type": "u16"}, {"desc": "Damage", "type": "u16"}, {"desc": "Particle effect", "type": "u8", "enum": "ParticleEffect"}], "return": null}, {"desc": "Start missile tumble", "label": "StartMissileTumble", "addr": {"J": "50914", "U": "50914", "E": "509E0"}, "size": "60", "mode": "thumb", "params": [{"desc": "Sprite data pointer", "type": "ptr.SpriteData"}, {"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}, {"desc": "Projectile type", "type": "u8", "enum": "ProjectileType"}], "return": null}, {"desc": "Start missile tumble for Kraid head", "label": "StartMissileTumble_KraidHead", "addr": {"J": "50974", "U": "50974", "E": "50A40"}, "size": "68", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}, {"desc": "Projectile type", "type": "u8", "enum": "ProjectileType"}], "return": null}, {"desc": "Missile hit sprite", "label": "MissileHitSprite", "addr": {"J": "509DC", "U": "509DC", "E": "50AA8"}, "size": "A0", "mode": "thumb", "params": [{"desc": "Sprite data pointer", "type": "ptr.SpriteData"}, {"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}, {"desc": "Projectile Y position", "type": "u16"}, {"desc": "Projectile X position", "type": "u16"}], "return": null}, {"desc": "Super missile hit sprite", "label": "SuperMissileHitSprite", "addr": {"J": "50A7C", "U": "50A7C", "E": "50B48"}, "size": "9C", "mode": "thumb", "params": [{"desc": "Sprite data pointer", "type": "ptr.SpriteData"}, {"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}, {"desc": "Projectile Y position", "type": "u16"}, {"desc": "Projectile X position", "type": "u16"}], "return": null}, {"desc": "Bomb hit sprite", "label": "BombHitSprite", "addr": {"J": "50B18", "U": "50B18", "E": "50BE4"}, "size": "4C", "mode": "thumb", "params": [{"desc": "Sprite data pointer", "type": "ptr.SpriteData"}], "return": null}, {"desc": "Process normal beam", "label": "ProcessNormalBeam", "addr": {"J": "50B64", "U": "50B64", "E": "50C30"}, "size": "F8", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}], "return": null}, {"desc": "Process long beam", "label": "ProcessLongBeam", "addr": {"J": "50C5C", "U": "50C5C", "E": "50D28"}, "size": "EC", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}], "return": null}, {"desc": "Process ice beam", "label": "ProcessIceBeam", "addr": {"J": "50D48", "U": "50D48", "E": "50E14"}, "size": "124", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}], "return": null}, {"desc": "Handle wave beam collision", "label": "HandleWaveBeamCollision", "addr": {"J": "50E6C", "U": "50E6C", "E": "50F38"}, "size": "1FC", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}], "return": {"desc": "Number of blocks touched (0-3)", "type": "u8"}}, {"desc": "Process wave beam", "label": "ProcessWaveBeam", "addr": {"J": "51068", "U": "51068", "E": "51134"}, "size": "130", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}], "return": null}, {"desc": "Process plasma beam", "label": "ProcessPlasmaBeam", "addr": {"J": "51198", "U": "51198", "E": "51264"}, "size": "1BC", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}], "return": null}, {"desc": "Process pistol", "label": "ProcessPistol", "addr": {"J": "51354", "U": "51354", "E": "51420"}, "size": "EC", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}], "return": null}, {"desc": "Process charged normal beam", "label": "ProcessChargedNormalBeam", "addr": {"J": "51440", "U": "51440", "E": "5150C"}, "size": "F8", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}], "return": null}, {"desc": "Process charged long beam", "label": "ProcessChargedLongBeam", "addr": {"J": "51538", "U": "51538", "E": "51604"}, "size": "F8", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}], "return": null}, {"desc": "Process charged ice beam", "label": "ProcessChargedIceBeam", "addr": {"J": "51630", "U": "51630", "E": "516FC"}, "size": "134", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}], "return": null}, {"desc": "Process charged wave beam", "label": "ProcessChargedWaveBeam", "addr": {"J": "51764", "U": "51764", "E": "51830"}, "size": "13C", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}], "return": null}, {"desc": "Process charged plasma beam", "label": "ProcessChargedPlasmaBeam", "addr": {"J": "518A0", "U": "518A0", "E": "5196C"}, "size": "1DC", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}], "return": null}, {"desc": "Process charged pistol", "label": "ProcessChargedPistol", "addr": {"J": "51A7C", "U": "51A7C", "E": "51B48"}, "size": "F8", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}], "return": null}, {"desc": "Decrement missile counter", "label": "DecrementMissileCounter", "addr": {"J": "51B74", "U": "51B74", "E": "51C40"}, "size": "38", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}], "return": null}, {"desc": "Process missile", "label": "ProcessMissile", "addr": {"J": "51BAC", "U": "51BAC", "E": "51C78"}, "size": "118", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}], "return": null}, {"desc": "Decrement super missile counter", "label": "DecrementSuperMissileCounter", "addr": {"J": "51CC4", "U": "51CC4", "E": "51D90"}, "size": "38", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}], "return": null}, {"desc": "Process super missile", "label": "ProcessSuperMissile", "addr": {"J": "51CFC", "U": "51CFC", "E": "51DC8"}, "size": "118", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}], "return": null}, {"desc": "Morph ball launcher launch Samus", "label": "MorphBallLauncherLaunchSamus", "addr": {"J": "51E14", "U": "51E14", "E": "51EE0"}, "size": "B8", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}], "return": null}, {"desc": "Check Samus bomb jump", "label": "CheckSamusBombJump", "addr": {"J": "51ECC", "U": "51ECC", "E": "51F98"}, "size": "12C", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}], "return": null}, {"desc": "Process bomb", "label": "ProcessBomb", "addr": {"J": "51FF8", "U": "51FF8", "E": "520C4"}, "size": "1F8", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}], "return": null}, {"desc": "Process projectile_Empty", "label": "ProcessProjectile_Empty", "addr": {"J": "521F0", "U": "521F0", "E": "522BC"}, "size": "4", "mode": "thumb", "params": null, "return": null, "notes": "Empty function"}, {"desc": "Process power bomb", "label": "ProcessPowerBomb", "addr": {"J": "521F4", "U": "521F4", "E": "522C0"}, "size": "114", "mode": "thumb", "params": [{"desc": "Projectile data pointer", "type": "ptr.ProjectileData"}], "return": null}, {"desc": "Draw HUD OAM", "label": "DrawHudOam", "addr": {"J": "52308", "U": "52308", "E": "523D4"}, "size": "35C", "mode": "thumb", "params": null, "return": null}, {"desc": "Draw HUD energy tanks", "label": "DrawHudEnergyTanks", "addr": {"J": "52664", "U": "52664", "E": "52730"}, "size": "70", "mode": "thumb", "params": [{"desc": "Destination address", "type": "ptr"}, {"desc": "Normal graphics source address", "type": "ptr"}, {"desc": "Refill graphics source address", "type": "ptr"}, {"desc": "Number of energy tanks", "type": "u8"}, {"desc": "Refill animation stage", "type": "u8"}], "return": null}, {"desc": "Draw HUD energy", "label": "DrawHudEnergy", "addr": {"J": "526D4", "U": "526D4", "E": "527A0"}, "size": "598", "mode": "thumb", "params": [{"desc": "File number (0 = in-game, 1 = file A, 2 = file B, 3 = file C)", "type": "u8"}], "return": null}, {"desc": "Draw HUD missile digits", "label": "DrawHudMissileDigits", "addr": {"J": "52C6C", "U": "52C6C", "E": "52D38"}, "size": "100", "mode": "thumb", "params": [{"desc": "Hundreds place", "type": "u16"}, {"desc": "Tens place", "type": "u16"}, {"desc": "Ones place", "type": "u16"}, {"desc": "Highlight flag", "type": "u16"}], "return": null}, {"desc": "Draw HUD super missile digits", "label": "DrawHudSuperMissileDigits", "addr": {"J": "52D6C", "U": "52D6C", "E": "52E38"}, "size": "D8", "mode": "thumb", "params": [{"desc": "Tens place", "type": "u16"}, {"desc": "Ones place", "type": "u16"}, {"desc": "Highlight flag", "type": "u16"}], "return": null}, {"desc": "Draw HUD power bomb digits", "label": "DrawHudPowerBombDigits", "addr": {"J": "52E44", "U": "52E44", "E": "52F10"}, "size": "D8", "mode": "thumb", "params": [{"desc": "Tens place", "type": "u16"}, {"desc": "Ones place", "type": "u16"}, {"desc": "Highlight flag", "type": "u16"}], "return": null}, {"desc": "Draw HUD missiles", "label": "DrawHudMissiles", "addr": {"J": "52F1C", "U": "52F1C", "E": "52FE8"}, "size": "220", "mode": "thumb", "params": [{"desc": "Update highlight flag", "type": "bool"}], "return": null}, {"desc": "Draw HUD power bombs", "label": "DrawHudPowerBombs", "addr": {"J": "5313C", "U": "5313C", "E": "53208"}, "size": "1F8", "mode": "thumb", "params": [{"desc": "Update highlight flag", "type": "bool"}], "return": null}, {"desc": "Draw HUD super missiles", "label": "DrawHudSuperMissiles", "addr": {"J": "53334", "U": "53334", "E": "53400"}, "size": "1F8", "mode": "thumb", "params": [{"desc": "Update highlight flag", "type": "bool"}], "return": null}, {"desc": "Draw HUD weapon highlight", "label": "DrawHudWeaponHighlight", "addr": {"J": "5352C", "U": "5352C", "E": "535F8"}, "size": "3BC", "mode": "thumb", "params": null, "return": null}, {"desc": "Draw HUD pistol bar", "label": "DrawHudPistolBar", "addr": {"J": "538E8", "U": "538E8", "E": "539B4"}, "size": "48", "mode": "thumb", "params": null, "return": null}, {"desc": "Draw HUD", "label": "DrawHud", "addr": {"J": "53930", "U": "53930", "E": "539FC"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Calls Draw HUD energy, missiles, super missiles, power bombs, weapon highlight, pistol bar, and OAM"}, {"desc": "Check timer displayed", "label": "CheckTimerDisplayed", "addr": {"J": "53968", "U": "53968", "E": "53A34"}, "size": "40", "mode": "thumb", "params": null, "return": {"desc": "1 for Mother Brain, 2 for Mecha Ridley, 0 otherwise", "type": "u8"}}, {"desc": "Check timer should stop", "label": "CheckTimerShouldStop", "addr": {"J": "539A8", "U": "539A8", "E": "53A74"}, "size": "38", "mode": "thumb", "params": null, "return": {"desc": "Timer should stop", "type": "bool"}}, {"desc": "Update escape timer OAM", "label": "UpdateEscapeTimerOam", "addr": {"J": "539E0", "U": "539E0", "E": "53AAC"}, "size": "38", "mode": "thumb", "params": null, "return": null}, {"desc": "Start timed escape", "label": "StartTimedEscape", "addr": {"J": "53A48", "U": "53A48", "E": "53B14"}, "size": "60", "mode": "thumb", "params": null, "return": null}, {"desc": "Set timer digits", "label": "SetTimerDigits", "addr": {"J": "53AA8", "U": "53AA8", "E": "53B74"}, "size": "BC", "mode": "thumb", "params": null, "return": null}, {"desc": "Update escape timer", "label": "UpdateEscapeTimer", "addr": {"J": "53B64", "U": "53B64", "E": "53C30"}, "size": "104", "mode": "thumb", "params": null, "return": null}, {"desc": "Load common sprite graphics", "label": "LoadCommonSpriteGfx", "addr": {"J": "53C68", "U": "53C68", "E": "53D34"}, "size": "24", "mode": "thumb", "params": null, "return": null}, {"desc": "Reset refill animations", "label": "ResetRefillAnimations", "addr": {"J": "53C8C", "U": "53C8C", "E": "53D58"}, "size": "24", "mode": "thumb", "params": null, "return": null}, {"desc": "Reset HUD digits animation", "label": "ResetHudDigitsAnimation", "addr": {"J": "53CB0", "U": "53CB0", "E": "53D7C"}, "size": "120", "mode": "thumb", "params": null, "return": null}, {"desc": "Check particle effect on screen", "label": "CheckParticleEffectOnScreen", "addr": {"J": "53DD0", "U": "53DD0", "E": "53E9C"}, "size": "98", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null}, {"desc": "Draw particle effect", "label": "DrawParticleEffect", "addr": {"J": "53E68", "U": "53E68", "E": "53F34"}, "size": "170", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null}, {"desc": "Process particle effects", "label": "ProcessParticleEffects", "addr": {"J": "53FD8", "U": "53FD8", "E": "540A4"}, "size": "114", "mode": "thumb", "params": null, "return": null}, {"desc": "Set particle effect", "label": "SetParticleEffect", "addr": {"J": "540EC", "U": "540EC", "E": "541B8"}, "size": "A0", "mode": "thumb", "params": [{"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}, {"desc": "Effect number", "type": "u8", "enum": "ParticleEffect"}], "return": null}, {"desc": "Update particle effect animation", "label": "UpdateParticleEffectAnimation", "addr": {"J": "5418C", "U": "5418C", "E": "54258"}, "size": "50", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}, {"desc": "OAM pointer", "type": "ptr"}], "return": {"desc": "Animation ended", "type": "bool"}}, {"desc": "Set current particle effect OAM frame pointer", "label": "SetCurrParticleEffectOamFramePtr", "addr": {"J": "541DC", "U": "541DC", "E": "542A8"}, "size": "14", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}, {"desc": "OAM pointer", "type": "ptr"}], "return": null}, {"desc": "Particle sprite splash water small", "label": "ParticleSpriteSplashWaterSmall", "addr": {"J": "541F0", "U": "541F0", "E": "542BC"}, "size": "44", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Sprite splash water small subroutine"}, {"desc": "Particle sprite splash water big", "label": "ParticleSpriteSplashWaterBig", "addr": {"J": "54234", "U": "54234", "E": "54300"}, "size": "44", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Sprite splash water big subroutine"}, {"desc": "Particle sprite splash water huge", "label": "ParticleSpriteSplashWaterHuge", "addr": {"J": "54278", "U": "54278", "E": "54344"}, "size": "44", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Sprite splash water huge subroutine"}, {"desc": "Particle sprite splash lava small", "label": "ParticleSpriteSplashLavaSmall", "addr": {"J": "542BC", "U": "542BC", "E": "54388"}, "size": "44", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Sprite splash lava small subroutine"}, {"desc": "Particle sprite splash lava big", "label": "ParticleSpriteSplashLavaBig", "addr": {"J": "54300", "U": "54300", "E": "543CC"}, "size": "44", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Sprite splash lava big subroutine"}, {"desc": "Particle sprite splash lava huge", "label": "ParticleSpriteSplashLavaHuge", "addr": {"J": "54344", "U": "54344", "E": "54410"}, "size": "44", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Sprite splash lava huge subroutine"}, {"desc": "Particle sprite splash acid small", "label": "ParticleSpriteSplashAcidSmall", "addr": {"J": "54388", "U": "54388", "E": "54454"}, "size": "44", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Sprite splash acid small subroutine"}, {"desc": "Particle sprite splash acid big", "label": "ParticleSpriteSplashAcidBig", "addr": {"J": "543CC", "U": "543CC", "E": "54498"}, "size": "44", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Sprite splash acid big subroutine"}, {"desc": "Particle particle sprite splash acid huge", "label": "ParticleParticleSpriteSplashAcidHuge", "addr": {"J": "54410", "U": "54410", "E": "544DC"}, "size": "44", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Sprite splash acid huge subroutine"}, {"desc": "Particle shooting beam left", "label": "ParticleShootingBeamLeft", "addr": {"J": "54454", "U": "54454", "E": "54520"}, "size": "38", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Shooting beam left subroutine"}, {"desc": "Particle shooting beam right", "label": "ParticleShootingBeamRight", "addr": {"J": "5448C", "U": "5448C", "E": "54558"}, "size": "38", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Shooting beam right subroutine"}, {"desc": "Particle shooting beam diagonally up left", "label": "ParticleShootingBeamDiagonallyUpLeft", "addr": {"J": "544C4", "U": "544C4", "E": "54590"}, "size": "38", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Shooting beam diagonally up left subroutine"}, {"desc": "Particle shooting beam diagonally up right", "label": "ParticleShootingBeamDiagonallyUpRight", "addr": {"J": "544FC", "U": "544FC", "E": "545C8"}, "size": "38", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Shooting beam diagonally up right subroutine"}, {"desc": "Particle shooting beam diagonally down left", "label": "ParticleShootingBeamDiagonallyDownLeft", "addr": {"J": "54534", "U": "54534", "E": "54600"}, "size": "38", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Shooting beam diagonally down left subroutine"}, {"desc": "Particle shooting beam diagonally down right", "label": "ParticleShootingBeamDiagonallyDownRight", "addr": {"J": "5456C", "U": "5456C", "E": "54638"}, "size": "38", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Shooting beam diagonally down right subroutine"}, {"desc": "Particle shooting beam up left", "label": "ParticleShootingBeamUpLeft", "addr": {"J": "545A4", "U": "545A4", "E": "54670"}, "size": "38", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Shooting beam up left subroutine"}, {"desc": "Particle shooting beam up right", "label": "ParticleShootingBeamUpRight", "addr": {"J": "545DC", "U": "545DC", "E": "546A8"}, "size": "38", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Shooting beam up right subroutine"}, {"desc": "Particle shooting beam down left", "label": "ParticleShootingBeamDownLeft", "addr": {"J": "54614", "U": "54614", "E": "546E0"}, "size": "38", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Shooting beam down left subroutine"}, {"desc": "Particle shooting beam down right", "label": "ParticleShootingBeamDownRight", "addr": {"J": "5464C", "U": "5464C", "E": "54718"}, "size": "38", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Shooting beam down right subroutine"}, {"desc": "Particle bomb", "label": "ParticleBomb", "addr": {"J": "54684", "U": "54684", "E": "54750"}, "size": "44", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Bomb subroutine"}, {"desc": "Particle missile trail", "label": "ParticleMissileTrail", "addr": {"J": "546C8", "U": "546C8", "E": "54794"}, "size": "38", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Missile trail subroutine"}, {"desc": "Particle super missile trail", "label": "ParticleSuperMissileTrail", "addr": {"J": "54700", "U": "54700", "E": "547CC"}, "size": "38", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Super missile trail subroutine"}, {"desc": "Particle beam trailing right", "label": "ParticleBeamTrailingRight", "addr": {"J": "54738", "U": "54738", "E": "54804"}, "size": "48", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Beam trailing right subroutine"}, {"desc": "Particle beam trailing left", "label": "ParticleBeamTrailingLeft", "addr": {"J": "54780", "U": "54780", "E": "5484C"}, "size": "48", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Beam trailing left subroutine"}, {"desc": "Particle charged long beam trail", "label": "ParticleChargedLongBeamTrail", "addr": {"J": "547C8", "U": "547C8", "E": "54894"}, "size": "34", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Charged long beam trail subroutine"}, {"desc": "Particle charged ice beam trail", "label": "ParticleChargedIceBeamTrail", "addr": {"J": "547FC", "U": "547FC", "E": "548C8"}, "size": "34", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Charged ice beam trail subroutine"}, {"desc": "Particle charged wave beam trail", "label": "ParticleChargedWaveBeamTrail", "addr": {"J": "54830", "U": "54830", "E": "548FC"}, "size": "34", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Charged wave beam trail subroutine"}, {"desc": "Particle charged plasma beam trail", "label": "ParticleChargedPlasmaBeamTrail", "addr": {"J": "54864", "U": "54864", "E": "54930"}, "size": "34", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Charged plasma beam trail subroutine"}, {"desc": "Particle charged full beam trail", "label": "ParticleChargedFullBeamTrail", "addr": {"J": "54898", "U": "54898", "E": "54964"}, "size": "34", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Charged full beam trail subroutine"}, {"desc": "Particle charged pistol trail", "label": "ParticleChargedPistolTrail", "addr": {"J": "548CC", "U": "548CC", "E": "54998"}, "size": "34", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Charged pistol trail subroutine"}, {"desc": "Particle sprite explosion huge", "label": "ParticleSpriteExplosionHuge", "addr": {"J": "54900", "U": "54900", "E": "549CC"}, "size": "38", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Sprite explosion huge subroutine"}, {"desc": "Particle sprite explosion small", "label": "ParticleSpriteExplosionSmall", "addr": {"J": "54938", "U": "54938", "E": "54A04"}, "size": "38", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Sprite explosion small subroutine"}, {"desc": "Particle sprite explosion medium", "label": "ParticleSpriteExplosionMedium", "addr": {"J": "54970", "U": "54970", "E": "54A3C"}, "size": "38", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Sprite explosion medium subroutine"}, {"desc": "Particle sprite explosion big", "label": "ParticleSpriteExplosionBig", "addr": {"J": "549A8", "U": "549A8", "E": "54A74"}, "size": "38", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Sprite explosion big subroutine"}, {"desc": "Particle sprite explosion single then big", "label": "ParticleSpriteExplosionSingleThenBig", "addr": {"J": "549E0", "U": "549E0", "E": "54AAC"}, "size": "38", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Sprite explosion single then big subroutine"}, {"desc": "Particle screw attack destroyed", "label": "ParticleScrewAttackDestroyed", "addr": {"J": "54A18", "U": "54A18", "E": "54AE4"}, "size": "38", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Screw attack destroyed subroutine"}, {"desc": "Particle shinespark destroyed", "label": "ParticleShinesparkDestroyed", "addr": {"J": "54A50", "U": "54A50", "E": "54B1C"}, "size": "38", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Shinespark destroyed subroutine"}, {"desc": "Particle sudo screw destroyed", "label": "ParticleSudoScrewDestroyed", "addr": {"J": "54A88", "U": "54A88", "E": "54B54"}, "size": "38", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Sudo screw destroyed subroutine"}, {"desc": "Particle speedbooster destroyed", "label": "ParticleSpeedboosterDestroyed", "addr": {"J": "54AC0", "U": "54AC0", "E": "54B8C"}, "size": "38", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Speedbooster destroyed subroutine"}, {"desc": "Particle main boss death", "label": "ParticleMainBossDeath", "addr": {"J": "54AF8", "U": "54AF8", "E": "54BC4"}, "size": "38", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Main boss death subroutine"}, {"desc": "Particle freezing sprite with ice", "label": "ParticleFreezingSpriteWithIce", "addr": {"J": "54B30", "U": "54B30", "E": "54BFC"}, "size": "40", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Freezing sprite with ice subroutine"}, {"desc": "Particle freezing sprite with charged ice", "label": "ParticleFreezingSpriteWithChargedIce", "addr": {"J": "54B70", "U": "54B70", "E": "54C3C"}, "size": "40", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Freezing sprite with charged ice subroutine"}, {"desc": "Particle hitting something with base beam", "label": "ParticleHittingSomethingWithBaseBeam", "addr": {"J": "54BB0", "U": "54BB0", "E": "54C7C"}, "size": "3C", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Hitting something with base beam or charged base beam subroutine"}, {"desc": "Particle hitting something with long beam", "label": "ParticleHittingSomethingWithLongBeam", "addr": {"J": "54BEC", "U": "54BEC", "E": "54CB8"}, "size": "40", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Hitting something with long beam or charged long beam subroutine"}, {"desc": "Particle hitting something with ice beam", "label": "ParticleHittingSomethingWithIceBeam", "addr": {"J": "54C2C", "U": "54C2C", "E": "54CF8"}, "size": "3C", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Hitting something with ice beam subroutine"}, {"desc": "Particle hitting something with wave beam", "label": "ParticleHittingSomethingWithWaveBeam", "addr": {"J": "54C68", "U": "54C68", "E": "54D34"}, "size": "40", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Hitting something with wave beam subroutine"}, {"desc": "Particle hitting something with full beam no plasma", "label": "ParticleHittingSomethingWithFullBeamNoPlasma", "addr": {"J": "54CA8", "U": "54CA8", "E": "54D74"}, "size": "3C", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Hitting something with full beam no plasma subroutine"}, {"desc": "Particle hitting something with plasma beam", "label": "ParticleHittingSomethingWithPlasmaBeam", "addr": {"J": "54CE4", "U": "54CE4", "E": "54DB0"}, "size": "3C", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Hitting something with plasma beam subroutine"}, {"desc": "Particle hitting something with full beam", "label": "ParticleHittingSomethingWithFullBeam", "addr": {"J": "54D20", "U": "54D20", "E": "54DEC"}, "size": "3C", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Hitting something with full beam subroutine"}, {"desc": "Particle hitting something invicible", "label": "ParticleHittingSomethingInvicible", "addr": {"J": "54D5C", "U": "54D5C", "E": "54E28"}, "size": "40", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Hitting something invicible subroutine"}, {"desc": "Particle hitting something with missile", "label": "ParticleHittingSomethingWithMissile", "addr": {"J": "54D9C", "U": "54D9C", "E": "54E68"}, "size": "40", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Hitting something with missile subroutine"}, {"desc": "Particle hitting something with super missile", "label": "ParticleHittingSomethingWithSuperMissile", "addr": {"J": "54DDC", "U": "54DDC", "E": "54EA8"}, "size": "50", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Hitting something with super missile subroutine"}, {"desc": "Particle small dust", "label": "ParticleSmallDust", "addr": {"J": "54E2C", "U": "54E2C", "E": "54EF8"}, "size": "34", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Small dust subroutine"}, {"desc": "Particle medium dust", "label": "ParticleMediumDust", "addr": {"J": "54E60", "U": "54E60", "E": "54F2C"}, "size": "34", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Medium dust subroutine"}, {"desc": "Particle two medium dust", "label": "ParticleTwoMediumDust", "addr": {"J": "54E94", "U": "54E94", "E": "54F60"}, "size": "34", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Two medium dust subroutine"}, {"desc": "Particle second small dust", "label": "ParticleSecondSmallDust", "addr": {"J": "54EC8", "U": "54EC8", "E": "54F94"}, "size": "38", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Second Small dust subroutine"}, {"desc": "Particle second medium dust", "label": "ParticleSecondMediumDust", "addr": {"J": "54F00", "U": "54F00", "E": "54FCC"}, "size": "38", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Second medium dust subroutine"}, {"desc": "Particle second two medium dust", "label": "ParticleSecondTwoMediumDust", "addr": {"J": "54F38", "U": "54F38", "E": "55004"}, "size": "38", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle effect Second two medium dust subroutine"}, {"desc": "Play begin to charge beam sound", "label": "PlayBeginToChargeBeamSound", "addr": {"J": "54F70", "U": "54F70", "E": "5503C"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Plays a sound depending on the beams activated when beginning to charge a beam"}, {"desc": "Play shooting charged beam sound", "label": "PlayShootingChargedBeamSound", "addr": {"J": "54FF8", "U": "54FF8", "E": "550C4"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Plays a sound depending on the beams activated when shooting a charged beam"}, {"desc": "Play beam fully charged sound", "label": "PlayBeamFullyChargedSound", "addr": {"J": "55080", "U": "55080", "E": "5514C"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Plays a sound depending on the beams activated when charging a fully charged beam"}, {"desc": "Particle charging beam", "label": "ParticleChargingBeam", "addr": {"J": "55108", "U": "55108", "E": "551D4"}, "size": "100", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle Charging beam subroutine"}, {"desc": "Particle escape", "label": "ParticleEscape", "addr": {"J": "55208", "U": "55208", "E": "552D4"}, "size": "A8", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle Escape subroutine"}, {"desc": "Particle Samus reflection", "label": "ParticleSamusReflection", "addr": {"J": "552B0", "U": "552B0", "E": "5537C"}, "size": "94", "mode": "thumb", "params": [{"desc": "Particle effect pointer", "type": "ptr.ParticleEffect"}], "return": null, "notes": "Particle Samus relfection subroutine"}, {"desc": "Start vertical screen shake", "label": "StartVerticalScreenShake", "addr": {"J": "55344", "U": "55344", "E": "55410"}, "size": "34", "mode": "thumb", "params": [{"desc": "Duration", "type": "u8"}, {"desc": "?", "type": "u8"}], "return": null}, {"desc": "Start horizontal screen shake", "label": "StartHorizontalScreenShake", "addr": {"J": "55378", "U": "55378", "E": "55444"}, "size": "34", "mode": "thumb", "params": [{"desc": "Duration", "type": "u8"}, {"desc": "?", "type": "u8"}], "return": {"desc": "Timer?", "type": "u8"}}, {"desc": "Start horizontal screen shake (unused)", "label": "StartHorizontalScreenShake_Unused", "addr": {"J": "553AC", "U": "553AC", "E": "55478"}, "size": "30", "mode": "thumb", "params": [{"desc": "Duration", "type": "u8"}], "return": {"desc": "Timer", "type": "u8"}}, {"desc": "Update vertical screen shake", "label": "UpdateVerticalScreenShake", "addr": {"J": "553DC", "U": "553DC", "E": "554A8"}, "size": "68", "mode": "thumb", "params": null, "return": {"desc": "Y position offset", "type": "u8"}}, {"desc": "Update horizontal screen shake", "label": "UpdateHorizontalScreenShake", "addr": {"J": "55444", "U": "55444", "E": "55510"}, "size": "68", "mode": "thumb", "params": null, "return": {"desc": "X position offset", "type": "u8"}}, {"desc": "Set transparency and background effects", "label": "SetTransparencyAndBGEffects", "addr": {"J": "554AC", "U": "554AC", "E": "55578"}, "size": "54C", "mode": "thumb", "params": null, "return": null, "notes": "Sets the BLDALPHA for the current room transparency and does some hardware registers magic for the background effects (gradient and dark room)"}, {"desc": "Get background size flag", "label": "GetBGSizeFlag", "addr": {"J": "559F8", "U": "559F8", "E": "55AC4"}, "size": "2C", "mode": "thumb", "params": [{"desc": "Background size", "type": "u8"}], "return": {"desc": "Size flag", "type": "u8"}, "notes": "Returns the corresponding size flag for the BG control registers"}, {"desc": "Check room is dark", "label": "CheckRoomIsDark", "addr": {"J": "55A24", "U": "55A24", "E": "55AF0"}, "size": "1C", "mode": "thumb", "params": null, "return": {"desc": "0xFFFF if room is dark, 0 otherwise", "type": "u16"}}, {"desc": "Update BLDCNT", "label": "UpdateBLDCNT", "addr": {"J": "55A40", "U": "55A40", "E": "55B0C"}, "size": "9C", "mode": "thumb", "params": [{"desc": "Action", "type": "u8"}, {"desc": "BLDCNT Value", "type": "u16"}], "return": null, "notes": "Updates the BLDCNT register value with r1"}, {"desc": "Update BLDALPHA", "label": "UpdateBLDALPHA", "addr": {"J": "55BD0", "U": "55BD0", "E": "55C9C"}, "size": "54", "mode": "thumb", "params": [{"desc": "EVA coefficient", "type": "u8"}, {"desc": "EVB coefficient", "type": "u8"}, {"desc": "?", "type": "u8"}, {"desc": "Fading related", "type": "u8"}], "return": null}, {"desc": "Apply new transparency effects", "label": "ApplyNewTransparencyEffects", "addr": {"J": "55C24", "U": "55C24", "E": "55CF0"}, "size": "B8", "mode": "thumb", "params": null, "return": null, "notes": "Applies the new transparency effects (BLDALPHA and BLDCNT?)"}, {"desc": "Apply new BLDALPHA", "label": "ApplyNewBLDALPHA", "addr": {"J": "55CDC", "U": "55CDC", "E": "55DA8"}, "size": "D8", "mode": "thumb", "params": [{"desc": "BLDALPHA related struct pointer?", "type": "ptr"}], "return": null}, {"desc": "Load room", "label": "LoadRoom", "addr": {"J": "55F7C", "U": "55F7C", "E": "56048"}, "size": "26C", "mode": "thumb", "params": null, "return": null}, {"desc": "Load tileset", "label": "LoadTileset", "addr": {"J": "561E8", "U": "561E8", "E": "562B4"}, "size": "21C", "mode": "thumb", "params": null, "return": null}, {"desc": "Load room entry", "label": "LoadRoomEntry", "addr": {"J": "56404", "U": "56404", "E": "564D0"}, "size": "168", "mode": "thumb", "params": null, "return": null}, {"desc": "Load room backgrounds", "label": "LoadRoomBackgrounds", "addr": {"J": "5656C", "U": "5656C", "E": "56638"}, "size": "158", "mode": "thumb", "params": null, "return": null}, {"desc": "Remove never reform blocks and collected tanks", "label": "RemoveNeverReformBlocksTanks", "addr": {"J": "566C4", "U": "566C4", "E": "56790"}, "size": "10", "mode": "thumb", "params": null, "return": null}, {"desc": "Reset room info on transition", "label": "ResetRoomInfoOnTransition", "addr": {"J": "566D4", "U": "566D4", "E": "567A0"}, "size": "3F4", "mode": "thumb", "params": null, "return": null}, {"desc": "Set automatic background movement", "label": "SetAutomaticBGMovement", "addr": {"J": "56AC8", "U": "56AC8", "E": "56B94"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Sets the automatic BG0 and BG3 scrolling depending on the room effect/BG3 scrolling method"}, {"desc": "RLE decompress", "label": "RleDecompress", "addr": {"J": "56D18", "U": "56D18", "E": "56DE4"}, "size": "110", "mode": "thumb", "params": [{"desc": "Data type (0 = tilemap, 1 = BG)", "type": "u8"}, {"desc": "Source address", "type": "ptr"}, {"desc": "Destination address", "type": "ptr"}], "return": {"desc": "Always 0 (maybe an error flag?)", "type": "bool"}}, {"desc": "Update room info", "label": "UpdateRoomInfo", "addr": {"J": "56FD0", "U": "56FD0", "E": "57098"}, "size": "DC", "mode": "thumb", "params": null, "return": null}, {"desc": "Update backgrounds positions", "label": "UpdateBGPositions", "addr": {"J": "570AC", "U": "570AC", "E": "57174"}, "size": "128", "mode": "thumb", "params": null, "return": null}, {"desc": "Check DMA3 ended", "label": "CheckDMA3Ended", "addr": {"J": "5743C", "U": "5743C", "E": "57504"}, "size": "20", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the DMA operation on the third channel has ended (probably unused)"}, {"desc": "Process power bomb explosion", "label": "ProcessPowerBombExplosion", "addr": {"J": "5745C", "U": "5745C", "E": "57524"}, "size": "48", "mode": "thumb", "params": null, "return": null}, {"desc": "Power bomb explosion", "label": "PowerBombExplosion", "addr": {"J": "574A4", "U": "574A4", "E": "5756C"}, "size": "248", "mode": "thumb", "params": null, "return": null, "notes": "Handles the power bomb explosion"}, {"desc": "Start power bomb explosion", "label": "StartPowerBombExplosion", "addr": {"J": "576EC", "U": "576EC", "E": "577B4"}, "size": "48", "mode": "thumb", "params": [{"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}, {"desc": "?", "type": "u8"}], "return": null}, {"desc": "Set current power bomb 0x12 to 0", "label": "SetCurrentPowerBomb0x12To0", "addr": {"J": "57734", "U": "57734", "E": "577FC"}, "size": "C", "mode": "thumb", "params": null, "return": null, "notes": "Sets Current Power Bomb + 0x12 to 0"}, {"desc": "Power bomb explosion begin", "label": "PowerBombExplosionBegin", "addr": {"J": "57740", "U": "57740", "E": "57808"}, "size": "78", "mode": "thumb", "params": null, "return": null}, {"desc": "Power bomb explosion end", "label": "PowerBombExplosionEnd", "addr": {"J": "577B8", "U": "577B8", "E": "57880"}, "size": "154", "mode": "thumb", "params": null, "return": null}, {"desc": "Update Gadora hatch", "label": "UpdateGadoraHatch", "addr": {"J": "5790C", "U": "5790C", "E": "579D4"}, "size": "AC", "mode": "thumb", "params": [{"desc": "X Position", "type": "u16"}, {"desc": "Y Position", "type": "u16"}, {"desc": "Action (0 = close, 1 = open)", "type": "u8"}], "return": null}, {"desc": "Update in-game timer", "label": "UpdateInGameTimer", "addr": {"J": "579B8", "U": "579B8", "E": "57A80"}, "size": "6C", "mode": "thumb", "params": null, "return": null}, {"desc": "Update DISPCNT", "label": "UpdateDISPCNT", "addr": {"J": "57BD8", "U": "57BD8", "E": "57CA0"}, "size": "74", "mode": "thumb", "params": [{"desc": "Operation (0 = remove, 1 = add)", "type": "u8"}, {"desc": "Value", "type": "u16"}], "return": null, "notes": "Updates the DISPCNT register value with r1 (used by Kraid at the end of the fight with r1 = 0x400, disables BG2)"}, {"desc": "Load exploding room during Zebes escape", "label": "LoadExplodingRoomDuringZebesEscape", "addr": {"J": "57D04", "U": "57D04", "E": "57DCC"}, "size": "C8", "mode": "thumb", "params": [{"desc": "Area ID", "type": "u8", "enum": "AreaID"}, {"desc": "Room ID + 1", "type": "u8"}, {"desc": "Background X position", "type": "u16"}, {"desc": "Background Y position", "type": "u16"}], "return": null}, {"desc": "Setup clipdata code", "label": "SetupClipdataCode", "addr": {"J": "57DCC", "U": "57DCC", "E": "57E94"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Copies to clipdata code to non gameplay RAM"}, {"desc": "Check hazard at position", "label": "CheckHazardAtPosition", "addr": {"J": "58080", "U": "58080", "E": "58148"}, "size": "40", "mode": "thumb", "params": [{"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}], "return": {"desc": "Hazard type", "type": "u8", "enum": "HazardType"}}, {"desc": "Check current affecting hazard and very special clipdata", "label": "CheckCurrentAffectingHazardAndVerySpecialClipdata", "addr": {"J": "580C0", "U": "580C0", "E": "58188"}, "size": "DC", "mode": "thumb", "params": [{"desc": "Y position", "type": "u16"}, {"desc": "Block Y position", "type": "u16"}, {"desc": "Block X position", "type": "u16"}, {"desc": "?", "type": "u8"}], "return": {"desc": "Hazard type", "type": "u8", "enum": "HazardType"}, "notes": "Sets the current affecting hazard, ; r3 = 1 when called in ClipdataRelated and 0 when called in CheckHazardAtPosition"}, {"desc": "Check can use elevator", "label": "CheckCanUseElevator", "addr": {"J": "5819C", "U": "5819C", "E": "58264"}, "size": "C4", "mode": "thumb", "params": null, "return": {"desc": "Cannot be used", "type": "bool"}}, {"desc": "Check ground type under Samus", "label": "CheckGroundTypeUnderSamus", "addr": {"J": "58260", "U": "58260", "E": "58328"}, "size": "64", "mode": "thumb", "params": [{"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}], "return": {"desc": "Ground type", "type": "u8", "enum": "GroundTypeUnderSamus"}}, {"desc": "Process scrolls", "label": "ProcessScrolls", "addr": {"J": "582C4", "U": "582C4", "E": "5838C"}, "size": "64", "mode": "thumb", "params": [{"desc": "Coordinates pointer", "type": "ptr"}], "return": null}, {"desc": "Scroll screen", "label": "ScrollScreen", "addr": {"J": "58328", "U": "58328", "E": "583F0"}, "size": "BC", "mode": "thumb", "params": [{"desc": "X position", "type": "u16"}, {"desc": "Y position", "type": "u16"}], "return": null}, {"desc": "Process scroll X", "label": "ProcessScrollX", "addr": {"J": "583E4", "U": "583E4", "E": "584AC"}, "size": "40", "mode": "thumb", "params": [{"desc": "Active scroll pointer", "type": "ptr.ActiveScroll"}, {"desc": "Coordinates pointer", "type": "ptr"}], "return": {"desc": "Screen X position", "type": "u16"}}, {"desc": "Process scroll Y", "label": "ProcessScrollY", "addr": {"J": "58424", "U": "58424", "E": "584EC"}, "size": "54", "mode": "thumb", "params": [{"desc": "Active scroll pointer", "type": "ptr.ActiveScroll"}, {"desc": "Coordinates pointer", "type": "ptr"}], "return": {"desc": "Screen Y position", "type": "u16"}}, {"desc": "Load room scrolls", "label": "LoadRoomScrolls", "addr": {"J": "58478", "U": "58478", "E": "58540"}, "size": "60", "mode": "thumb", "params": null, "return": null}, {"desc": "Update current scrolls", "label": "UpdateCurrScrolls", "addr": {"J": "584D8", "U": "584D8", "E": "585A0"}, "size": "168", "mode": "thumb", "params": [{"desc": "Coordinates pointer", "type": "ptr"}], "return": null, "notes": "Updates the 2 current scrolls, also checks for extended bounds (when taking an elevator and when triggered by a breakable block)"}, {"desc": "Process general scrolling", "label": "ProcessGeneralScrolling", "addr": {"J": "58640", "U": "58640", "E": "58708"}, "size": "1F4", "mode": "thumb", "params": null, "return": null, "notes": "Processes scrolling in general (automatic, slow, scrolls, lock screen)"}, {"desc": "Default scroll", "label": "DefaultScroll", "addr": {"J": "58834", "U": "58834", "E": "588FC"}, "size": "14", "mode": "thumb", "params": [{"desc": "Coordinates pointer", "type": "ptr"}], "return": null, "notes": "Handles the automatic scrolling on a room with no scrolls"}, {"desc": "Default scroll Y", "label": "DefaultScrollY", "addr": {"J": "58848", "U": "58848", "E": "58910"}, "size": "100", "mode": "thumb", "params": [{"desc": "Coordinates pointer", "type": "ptr"}], "return": null, "notes": "Handles the automatic Y scrolling on a room with no scrolls"}, {"desc": "Default scroll X", "label": "DefaultScrollX", "addr": {"J": "58948", "U": "58948", "E": "58A10"}, "size": "D0", "mode": "thumb", "params": [{"desc": "Coordinates pointer", "type": "ptr"}], "return": null, "notes": "Handles the automatic X scrolling on a room with no scrolls"}, {"desc": "Update room effect and haze position", "label": "UpdateRoomEffectAndHazePosition", "addr": {"J": "58A18", "U": "58A18", "E": "58AE0"}, "size": "2A8", "mode": "thumb", "params": [{"desc": "Coordinates pointer", "type": "ptr"}], "return": null}, {"desc": "Handle moving BG0", "label": "HandleMovingBG0", "addr": {"J": "58CC0", "U": "58CC0", "E": "58D88"}, "size": "60", "mode": "thumb", "params": null, "return": null}, {"desc": "Get BG3 scrolling values", "label": "GetBG3ScrollingValues", "addr": {"J": "58D20", "U": "58D20", "E": "58DE8"}, "size": "80", "mode": "thumb", "params": null, "return": {"desc": "X/Y scrolling value", "type": "u8"}}, {"desc": "Scroll BG3", "label": "ScrollBG3", "addr": {"J": "58DA0", "U": "58DA0", "E": "58E68"}, "size": "124", "mode": "thumb", "params": null, "return": null}, {"desc": "Handle moving BG3", "label": "HandleMovingBG3", "addr": {"J": "58F14", "U": "58F14", "E": "58FDC"}, "size": "2C", "mode": "thumb", "params": null, "return": null}, {"desc": "Scroll BG2", "label": "ScrollBG2", "addr": {"J": "58F40", "U": "58F40", "E": "59008"}, "size": "C8", "mode": "thumb", "params": null, "return": null}, {"desc": "Destroy non-reform blocks", "label": "DestroyNonReformBlocks", "addr": {"J": "592C4", "U": "592C4", "E": "5938C"}, "size": "6C", "mode": "thumb", "params": [{"desc": "Coordinates pointer?", "type": "ptr"}], "return": {"desc": "Valid block?", "type": "bool"}}, {"desc": "Bomb chain block related", "label": "BombChainBlockRelated", "addr": {"J": "59330", "U": "59330", "E": "593F8"}, "size": "3C", "mode": "thumb", "params": [{"desc": "Coordinates pointer?", "type": "ptr"}], "return": {"desc": "Always 1", "type": "bool"}, "notes": "Called when a bomb chain is getting destroyed"}, {"desc": "Destroy single breakable block", "label": "DestroySingleBreakableBlock", "addr": {"J": "5936C", "U": "5936C", "E": "59434"}, "size": "3C", "mode": "thumb", "params": [{"desc": "Coordinates pointer?", "type": "ptr"}], "return": {"desc": "Always 1", "type": "bool"}}, {"desc": "Destroy 2x2 block", "label": "Destroy2x2Block", "addr": {"J": "593A8", "U": "593A8", "E": "59470"}, "size": "D8", "mode": "thumb", "params": [{"desc": "Coordinates pointer?", "type": "ptr"}], "return": {"desc": "Always 1", "type": "bool"}}, {"desc": "Remove never reform blocks", "label": "RemoveNeverReformBlocks", "addr": {"J": "59500", "U": "59500", "E": "595C8"}, "size": "80", "mode": "thumb", "params": null, "return": null}, {"desc": "Remove never reform block in clipdata BG", "label": "RemoveNeverReformBlockInClipdataBG", "addr": {"J": "59580", "U": "59580", "E": "59648"}, "size": "64", "mode": "thumb", "params": [{"desc": "X position", "type": "u8"}, {"desc": "Y position", "type": "u8"}], "return": null, "notes": "Removes the never reform block from the clipdata/background"}, {"desc": "Apply current clipdata affecting action", "label": "ApplyCurrClipdataAffectingAction", "addr": {"J": "5987C", "U": "5987C", "E": "59944"}, "size": "164", "mode": "thumb", "params": [{"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}, {"desc": "Clipdata block value", "type": "u16"}], "return": {"desc": "Unused?", "type": "u32"}}, {"desc": "Samus apply screw attack or speedbooster damage to environment", "label": "SamusApplyScrewSpeedDamageToEnvironment", "addr": {"J": "59A9C", "U": "59A9C", "E": "59B64"}, "size": "B8", "mode": "thumb", "params": [{"desc": "X position", "type": "u16"}, {"desc": "Y position", "type": "u16"}, {"desc": "Destructing action (0 = none, 1 = speedbooster, 2 = screw attack, 3 = both)", "type": "u16"}], "return": {"desc": "Clipdata value?", "type": "u16"}}, {"desc": "Update broken reform blocks", "label": "UpdateBrokenReformBlocks", "addr": {"J": "59B54", "U": "59B54", "E": "59C1C"}, "size": "120", "mode": "thumb", "params": null, "return": null}, {"desc": "Breaking or reforming block animation", "label": "BreakingOrReformingBlockAnimation", "addr": {"J": "59C74", "U": "59C74", "E": "59D3C"}, "size": "134", "mode": "thumb", "params": [{"desc": "Broken reform block pointer", "type": "ptr"}], "return": null}, {"desc": "Store broken reform block", "label": "StoreBrokenReformBlock", "addr": {"J": "59DA8", "U": "59DA8", "E": "59E70"}, "size": "AC", "mode": "thumb", "params": [{"desc": "Block type", "type": "u8"}, {"desc": "X position", "type": "u16"}, {"desc": "Y position", "type": "u16"}, {"desc": "?", "type": "u8"}], "return": {"desc": "Stored", "type": "bool"}}, {"desc": "Store broken non-reform block", "label": "StoreBrokenNonReformBlock", "addr": {"J": "59E54", "U": "59E54", "E": "59F1C"}, "size": "A4", "mode": "thumb", "params": [{"desc": "X position", "type": "u16"}, {"desc": "Y position", "type": "u16"}, {"desc": "Block type", "type": "u8"}], "return": null}, {"desc": "Check Samus in reforming block", "label": "CheckSamusInReformingBlock", "addr": {"J": "59F70", "U": "59F70", "E": "5A038"}, "size": "70", "mode": "thumb", "params": [{"desc": "Block X position", "type": "u8"}, {"desc": "Block Y position", "type": "u8"}], "return": {"desc": "In block", "type": "bool"}}, {"desc": "Start bomb chain", "label": "StartBombChain", "addr": {"J": "59FE0", "U": "59FE0", "E": "5A0A8"}, "size": "B8", "mode": "thumb", "params": [{"desc": "Direction?", "type": "u8"}, {"desc": "X position", "type": "u16"}, {"desc": "Y position", "type": "u16"}], "return": {"desc": "Chain started", "type": "bool"}}, {"desc": "Process bomb chains", "label": "ProcessBombChains", "addr": {"J": "5A098", "U": "5A098", "E": "5A160"}, "size": "298", "mode": "thumb", "params": null, "return": null}, {"desc": "Mother brain update glass", "label": "MotherBrainUpdateGlass", "addr": {"J": "5A484", "U": "5A484", "E": "5A54C"}, "size": "D8", "mode": "thumb", "params": [{"desc": "Always 0?", "type": "u8"}, {"desc": "?", "type": "u16"}, {"desc": "?", "type": "u16"}, {"desc": "?", "type": "u16"}], "return": null, "notes": "Updates the graphics for the Mother Brain glass"}, {"desc": "Set BG1 block value", "label": "SetBG1BlockValue", "addr": {"J": "5A55C", "U": "5A55C", "E": "5A624"}, "size": "CC", "mode": "thumb", "params": [{"desc": "Value", "type": "u16"}, {"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}], "return": null}, {"desc": "Set raw BG1 block value", "label": "SetRawBG1BlockValue", "addr": {"J": "5A628", "U": "5A628", "E": "5A6F0"}, "size": "24", "mode": "thumb", "params": [{"desc": "Value", "type": "u16"}, {"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}], "return": null, "notes": "Does not update tilemap or VRAM"}, {"desc": "Set clipdata block value", "label": "SetClipdataBlockValue", "addr": {"J": "5A64C", "U": "5A64C", "E": "5A714"}, "size": "24", "mode": "thumb", "params": [{"desc": "Value", "type": "u16"}, {"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}], "return": null}, {"desc": "Check Samus touching code-triggering clipdata", "label": "CheckSamusTouchingCodeTriggeringClipdata", "addr": {"J": "5A670", "U": "5A670", "E": "5A738"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Checks if Samus is touching transitions, tanks, transparency triggers, or crumble blocks"}, {"desc": "Apply clipdata changing transparency", "label": "ApplyClipdataChangingTransparency", "addr": {"J": "5A6C8", "U": "5A6C8", "E": "5A790"}, "size": "A8", "mode": "thumb", "params": null, "return": null}, {"desc": "Check clipdata behavior value changes BLDALPHA", "label": "CheckClipBehaviorValueChangesBLDALPHA", "addr": {"J": "5A770", "U": "5A770", "E": "5A838"}, "size": "30", "mode": "thumb", "params": [{"desc": "Clipdata behavior value", "type": "u16", "enum": "ClipdataBehaviorType"}], "return": {"desc": "BLDALPHA", "type": "u16"}}, {"desc": "Check Samus on crumble block", "label": "CheckSamusOnCrumbleBlock", "addr": {"J": "5A7A0", "U": "5A7A0", "E": "5A868"}, "size": "108", "mode": "thumb", "params": null, "return": null}, {"desc": "Check touching transition on elevator", "label": "CheckTouchingTransitionOnElevator", "addr": {"J": "5A8A8", "U": "5A8A8", "E": "5A970"}, "size": "C4", "mode": "thumb", "params": null, "return": null}, {"desc": "Check touching transition or tank", "label": "CheckTouchingTransitionOrTank", "addr": {"J": "5A96C", "U": "5A96C", "E": "5AA34"}, "size": "420", "mode": "thumb", "params": null, "return": null}, {"desc": "Finish collecting tank", "label": "FinishCollectingTank", "addr": {"J": "5AD8C", "U": "5AD8C", "E": "5AE54"}, "size": "60", "mode": "thumb", "params": null, "return": null}, {"desc": "Finish collecting ability", "label": "FinishCollectedAbility", "addr": {"J": "5ADEC", "U": "5ADEC", "E": "5AEB4"}, "size": "30", "mode": "thumb", "params": null, "return": null}, {"desc": "Check grabbing crumble block", "label": "CheckGrabbingCrumbleBlock", "addr": {"J": "5AE1C", "U": "5AE1C", "E": "5AEE4"}, "size": "104", "mode": "thumb", "params": [{"desc": "Always 0", "type": "bool"}], "return": null}, {"desc": "Check opening hatch", "label": "CheckOpeningHatch", "addr": {"J": "5AF20", "U": "5AF20", "E": "5AFE8"}, "size": "180", "mode": "thumb", "params": [{"desc": "X position (blocks)", "type": "u16"}, {"desc": "Y position (blocks)", "type": "u16"}], "return": {"desc": "Door behavior (0 = not opening, 1 = opening, 2 = locked)", "type": "u8"}}, {"desc": "Set item as collected", "label": "SetItemAsCollected", "addr": {"J": "5B0A0", "U": "5B0A0", "E": "5B168"}, "size": "74", "mode": "thumb", "params": [{"desc": "X position", "type": "u16"}, {"desc": "Y position", "type": "u16"}, {"desc": "Item type", "type": "u8"}], "return": null}, {"desc": "Remove collected tanks", "label": "RemoveCollectedTanks", "addr": {"J": "5B114", "U": "5B114", "E": "5B1DC"}, "size": "C4", "mode": "thumb", "params": null, "return": null}, {"desc": "Call Mother Brain update glass", "label": "CallMotherBrainUpdateGlass", "addr": {"J": "5B1D8", "U": "5B1D8", "E": "5B2A0"}, "size": "74", "mode": "thumb", "params": [{"desc": "Stage", "type": "u8"}], "return": null}, {"desc": "Set yellow tint for power bomb explosion", "label": "SetYellowTintForPowerBombExplosion", "addr": {"J": "5B584", "U": "5B584", "E": "5B64C"}, "size": "A0", "mode": "thumb", "params": [{"desc": "?", "type": "u8"}], "return": null}, {"desc": "Play cutscene", "label": "PlayCutscene", "addr": {"J": "5BFD4", "U": "5BFD4", "E": "5C09C"}, "size": "A0", "mode": "thumb", "params": [{"desc": "Cutscene number", "type": "u8", "enum": "Cutscene"}], "return": null}, {"desc": "Start special background fading", "label": "StartSpecialBGFading", "addr": {"J": "5C074", "U": "5C074", "E": "5C13C"}, "size": "18", "mode": "thumb", "params": [{"desc": "Fade type", "type": "u8", "enum": "SpecialBGFadeType"}], "return": null}, {"desc": "BG3OFS related", "label": "BG3OFSRelated", "addr": {"J": "5C158", "U": "5C158", "E": "5C220"}, "size": "38", "mode": "thumb", "params": null, "return": null, "notes": "Changes the Which Background Position Is Written To BG3OFS global variable"}, {"desc": "Process special fading effect", "label": "ProcessSpecialFadingEffect", "addr": {"J": "5C460", "U": "5C460", "E": "5C528"}, "size": "60", "mode": "thumb", "params": null, "return": {"desc": "?", "type": "bool"}}, {"desc": "Escape failed fade", "label": "EscapeFailedFade", "addr": {"J": "5C77C", "U": "5C77C", "E": "5C844"}, "size": "98", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Subroutine for the escape failed fade"}, {"desc": "Before Chozodia escape fade", "label": "BeforeChozodiaEscapeFade", "addr": {"J": "5C814", "U": "5C814", "E": "5C8DC"}, "size": "98", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Subroutine for the before Chozodia escape fade"}, {"desc": "Before tourian escape fade", "label": "BeforeTourianEscapeFade", "addr": {"J": "5C924", "U": "5C924", "E": "5C9EC"}, "size": "78", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Subroutine for the before tourian escape fade"}, {"desc": "Before getting fully powered fade", "label": "BeforeGettingFullyPoweredFade", "addr": {"J": "5C99C", "U": "5C99C", "E": "5CA64"}, "size": "BC", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Subroutine for the before getting fully powered fade"}, {"desc": "Before Ridley spawn fade", "label": "BeforeRidleySpawnFade", "addr": {"J": "5CA58", "U": "5CA58", "E": "5CB20"}, "size": "80", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Subroutine for the before Ridley spawn fade"}, {"desc": "Before statue opening fade", "label": "BeforeStatueOpeningFade", "addr": {"J": "5CAD8", "U": "5CAD8", "E": "5CBA0"}, "size": "A0", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Subroutine for the before statue opening fade"}, {"desc": "Before intro text fade", "label": "BeforeIntroTextFade", "addr": {"J": "5CB78", "U": "5CB78", "E": "5CC40"}, "size": "A4", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Subroutine for the before intro text fade"}, {"desc": "Set background haze effect", "label": "SetBGHazeEffect", "addr": {"J": "5CFE0", "U": "5CFE0", "E": "5D0A8"}, "size": "54", "mode": "thumb", "params": null, "return": null, "notes": "Sets the background haze effect depending on the Haze Data table and the room effect"}, {"desc": "Setup haze code", "label": "SetupHazeCode", "addr": {"J": "5D118", "U": "5D118", "E": "5D1E0"}, "size": {"J": "2C0", "U": "2C0", "E": "2CC"}, "mode": "thumb", "params": [{"desc": "Haze value", "type": "u8", "enum": "HazeType"}], "return": null, "notes": "Sets current haze value to r0 and copies a function to RAM depending on the haze value (also sets the haze effect code pointer)"}, {"desc": "Reset haze loops", "label": "ResetHazeLoops", "addr": {"J": "5D3D8", "U": "5D3D8", "E": "5D4AC"}, "size": "3C", "mode": "thumb", "params": null, "return": null, "notes": "Resets the haze loops"}, {"desc": "Process haze", "label": "ProcessHaze", "addr": {"J": "5D5BC", "U": "5D5BC", "E": "5D690"}, "size": "1AC", "mode": "thumb", "params": null, "return": {"desc": "Power bomb ended and room has haze", "type": "bool"}, "notes": "Calls the haze process code, if a power bomb ended and the room has a haze effect, set background haze effect is called and the function returns 1"}, {"desc": "Haze BG3", "label": "HazeBG3", "addr": {"J": "5D768", "U": "5D768", "E": "5D83C"}, "size": "C0", "mode": "thumb", "params": null, "return": null, "notes": "Haze BG3 code"}, {"desc": "Haze BG3 strong effect weak outside", "label": "HazeBG3StrongEffectWeakOutside", "addr": {"J": "5D828", "U": "5D828", "E": "5D8FC"}, "size": "118", "mode": "thumb", "params": null, "return": null, "notes": "Haze BG3 (strong in effect, weak outside) code"}, {"desc": "Haze BG3 none effect weak outside", "label": "HazeBG3NoneEffectWeakOutside", "addr": {"J": "5D940", "U": "5D940", "E": "5DA14"}, "size": "70", "mode": "thumb", "params": null, "return": null, "notes": "Haze BG3 (none in effect, weak outside) code"}, {"desc": "Haze BG3 BG2 strong effect weak outside medium everywhere", "label": "HazeBG3BG2StrongEffectWeakOutsideMediumEverywhere", "addr": {"J": "5D9B0", "U": "5D9B0", "E": "5DA84"}, "size": "90", "mode": "thumb", "params": null, "return": null, "notes": "Haze BG3/BG2 (Strong In Effect, Weak Outside For BG3 And Medium Everywhere For BG2) code"}, {"desc": "Haze power bomb expanding", "label": "HazePowerBombExpanding", "addr": {"J": "5DB2C", "U": "5DB2C", "E": "5DC00"}, "size": "118", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Haze Power Bomb Expanding code"}, {"desc": "Haze power bomb retracting", "label": "HazePowerBombRetracting", "addr": {"J": "5DC44", "U": "5DC44", "E": "5DD18"}, "size": "118", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Haze Power Bomb Retracting code"}, {"desc": "Transfer animation graphics", "label": "TransferAnimatedGraphics", "addr": {"J": "5DD5C", "U": "5DD5C", "E": "5DE30"}, "size": {"J": "270", "U": "270", "E": "290"}, "mode": "thumb", "params": null, "return": null, "notes": "Transfers the animated graphics from WRAM to VRAM depending on the animated graphics to update"}, {"desc": "Update animated graphics", "label": "UpdateAnimatedGraphics", "addr": {"J": "5DFCC", "U": "5DFCC", "E": "5E0C0"}, "size": "164", "mode": "thumb", "params": null, "return": null}, {"desc": "Load animated tileset", "label": "LoadAnimatedTileset", "addr": {"J": "5E130", "U": "5E130", "E": "5E224"}, "size": "F4", "mode": "thumb", "params": null, "return": null}, {"desc": "Update animated palette", "label": "UpdateAnimatedPalette", "addr": {"J": "5E2B4", "U": "5E2B4", "E": "5E3A8"}, "size": "170", "mode": "thumb", "params": null, "return": null}, {"desc": "Load animated palette", "label": "LoadAnimatedPalette", "addr": {"J": "5E424", "U": "5E424", "E": "5E518"}, "size": "DC", "mode": "thumb", "params": null, "return": null}, {"desc": "Check play lightning effect", "label": "CheckPlayLightningEffect", "addr": {"J": "5E500", "U": "5E500", "E": "5E5F4"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Checks if the lightning effect should play, hardcoded to play in Crateria room 5"}, {"desc": "Process special background effect", "label": "ProcessSpecialBGEffect", "addr": {"J": "5E5CC", "U": "5E5CC", "E": "5E6C0"}, "size": "12C", "mode": "thumb", "params": null, "return": {"desc": "?", "type": "u8"}}, {"desc": "Start special background effect", "label": "StartSpecialBGEffect", "addr": {"J": "5E6F8", "U": "5E6F8", "E": "5E7EC"}, "size": "68", "mode": "thumb", "params": [{"desc": "Effect", "type": "u8", "enum": "SpecialBGEffect"}], "return": {"desc": "Effect started", "type": "bool"}}, {"desc": "Update hatch animation", "label": "UpdateHatchAnimation", "addr": {"J": "5E8F8", "U": "5E8F8", "E": "5E9EC"}, "size": "15C", "mode": "thumb", "params": [{"desc": "?", "type": "u8"}, {"desc": "Hatch number", "type": "u32"}], "return": null}, {"desc": "Check enter door", "label": "CheckEnterDoor", "addr": {"J": "5EBF0", "U": "5EBF0", "E": "5ECE4"}, "size": "1A4", "mode": "thumb", "params": [{"desc": "Y position", "type": "u16"}, {"desc": "X position", "type": "u16"}], "return": {"desc": "Door found", "type": "bool"}}, {"desc": "Check area connection", "label": "CheckAreaConnection", "addr": {"J": "5ED94", "U": "5ED94", "E": "5EE88"}, "size": "1B0", "mode": "thumb", "params": [{"desc": "Y position (blocks)", "type": "u16"}, {"desc": "X position (blocks)", "type": "u16"}], "return": {"desc": "Door found", "type": "bool"}}, {"desc": "Process door type", "label": "ProcessDoorType", "addr": {"J": "5EF44", "U": "5EF44", "E": "5F038"}, "size": "64", "mode": "thumb", "params": [{"desc": "Door type", "type": "u8", "enum": "DoorType"}], "return": null}, {"desc": "Find event based door number", "label": "FindEventBasedDoor", "addr": {"J": "5EFA8", "U": "5EFA8", "E": "5F09C"}, "size": "5C", "mode": "thumb", "params": [{"desc": "Source door number", "type": "u8"}], "return": {"desc": "Target door number if found, 0xFF otherwise", "type": "u8"}}, {"desc": "Set hatch as opened", "label": "SetHatchAsOpened", "addr": {"J": "5F004", "U": "5F004", "E": "5F0F8"}, "size": "A0", "mode": "thumb", "params": [{"desc": "0 for checking if opened, 1 for setting source and destination, 2 for setting source", "type": "u8"}, {"desc": "Door number", "type": "u8"}], "return": {"desc": "Hatch previously unopened", "type": "bool"}}, {"desc": "Check unlock hatches", "label": "CheckUnlockHatches", "addr": {"J": "5F0A4", "U": "5F0A4", "E": "5F198"}, "size": "40", "mode": "thumb", "params": null, "return": null}, {"desc": "Lock hatches", "label": "LockHatches", "addr": {"J": "5F120", "U": "5F120", "E": "5F214"}, "size": "174", "mode": "thumb", "params": [{"desc": "Is hatch lock event", "type": "bool"}], "return": null}, {"desc": "Load room doors", "label": "LoadRoomDoors", "addr": {"J": "5F294", "U": "5F294", "E": "5F388"}, "size": "320", "mode": "thumb", "params": null, "return": null}, {"desc": "Lock hatches with timer", "label": "LockHatchesWithTimer", "addr": {"J": "5F5B4", "U": "5F5B4", "E": "5F6A8"}, "size": "24", "mode": "thumb", "params": null, "return": null}, {"desc": "Check hatch lock events", "label": "CheckHatchLockEvents", "addr": {"J": "5F5D8", "U": "5F5D8", "E": "5F6CC"}, "size": "16C", "mode": "thumb", "params": null, "return": null}, {"desc": "Check play cutscene during transition", "label": "CheckPlayCutsceneDuringTransition", "addr": {"J": "5F744", "U": "5F744", "E": "5F838"}, "size": "B8", "mode": "thumb", "params": [{"desc": "Area", "type": "u8", "enum": "AreaID"}, {"desc": "Destination room + 1", "type": "u8"}], "return": null}, {"desc": "Check play cutscene during elevator", "label": "CheckPlayCutsceneDuringElevator", "addr": {"J": "5F7FC", "U": "5F7FC", "E": "5F8F0"}, "size": "F8", "mode": "thumb", "params": null, "return": null}, {"desc": "Intro Samus close-up", "label": "IntroSamusCloseUp", "addr": {"J": "5F8F4", "U": "5F8F4", "E": "5F9E8"}, "size": {"J": "464", "U": "464", "E": "460"}, "mode": "thumb", "params": null, "return": {"desc": "5 if ended, 0 otherwise", "type": "u8"}}, {"desc": "Upgrade suit cutscene", "label": "UpgradeSuitCutscene", "addr": {"J": "5FDCC", "U": "5FDCC", "E": "5FEBC"}, "size": {"J": "5A8", "U": "5A8", "E": "59C"}, "mode": "thumb", "params": [{"desc": "Cutscene number", "type": "u8"}, {"desc": "Cutscene flag", "type": "u8"}], "return": {"desc": "Ended", "type": "bool"}}, {"desc": "Make background flash", "label": "MakeBackgroundFlash", "addr": {"J": "603C4", "U": "603C4", "E": "604A8"}, "size": "58", "mode": "thumb", "params": [{"desc": "Flash type (0 = slight yellow flash, 1 = transparency change for statue long, 2 = heavy yellow flash 3 = quick flash)", "type": "u8"}], "return": null, "notes": "Starts a flash background effect"}, {"desc": "Set 300019F", "label": "Set300019F", "addr": {"J": "6041C", "U": "6041C", "E": "60500"}, "size": "18", "mode": "thumb", "params": [{"desc": "Value", "type": "u8"}], "return": null, "notes": "Sets 300019F to r0 if 300019F is different than 0"}, {"desc": "Event functions", "label": "EventFunctions", "addr": {"J": "608BC", "U": "608BC", "E": "609A0"}, "size": "6C", "mode": "thumb", "params": [{"desc": "0 if clearing event, 1 if setting event, 2 if toggling event, 3 if checking event", "type": "u8"}, {"desc": "Event", "type": "u8", "enum": "Event"}], "return": {"desc": "Event is set", "type": "bool"}}, {"desc": "Check play room music track", "label": "CheckPlayRoomMusicTrack", "addr": {"J": "60928", "U": "60928", "E": "60A0C"}, "size": "BC", "mode": "thumb", "params": [{"desc": "Area ID", "type": "u8", "enum": "AreaID"}, {"desc": "Room ID", "type": "u8"}], "return": null}, {"desc": "Check play loading jingle", "label": "CheckPlayLoadingJingle", "addr": {"J": "609E4", "U": "609E4", "E": "60AC8"}, "size": "64", "mode": "thumb", "params": null, "return": null}, {"desc": "Start new demo", "label": "StartNewDemo", "addr": {"J": "60B20", "U": "60B20", "E": "60C04"}, "size": "5C", "mode": "thumb", "params": null, "return": null}, {"desc": "Initialize new demo", "label": "InitNewDemo", "addr": {"J": "60B7C", "U": "60B7C", "E": "60C60"}, "size": "140", "mode": "thumb", "params": null, "return": null}, {"desc": "Return one", "label": "ReturnOne", "addr": {"J": "60E28", "U": "60E28", "E": "60F10"}, "size": "4", "mode": "thumb", "params": null, "return": {"desc": "Always 1", "type": "bool"}, "notes": "Returns 1"}, {"desc": "Zebes escape cutscene subroutine", "label": "ZebesEscapeCutsceneSubroutine", "addr": {"J": "60E2C", "U": "60E2C", "E": "60F14"}, "size": "94", "mode": "thumb", "params": null, "return": {"desc": "Cutscene ended", "type": "bool"}}, {"desc": "End cutscene", "label": "EndCutscene", "addr": {"J": "60EF4", "U": "60EF4", "E": "60FDC"}, "size": "150", "mode": "thumb", "params": null, "return": null}, {"desc": "Cutscenes subroutine", "label": "CutscenesSubroutine", "addr": {"J": "61044", "U": "61044", "E": "6112C"}, "size": "1E4", "mode": "thumb", "params": null, "return": {"desc": "Cutscene ended", "type": "bool"}}, {"desc": "End cutscene functions", "label": "EndCutsceneFunctions", "addr": {"J": "61228", "U": "61228", "E": "61310"}, "size": "4", "mode": "thumb", "params": null, "return": {"desc": "1 to indicate end of functions", "type": "bool"}, "notes": "Returns one, always used (except for story text cutscenes) as the last function in an array of cutscene subroutine data, marking the end of the cutscene"}, {"desc": "Kraid rising rising", "label": "KraidRisingRising", "addr": {"J": "6240C", "U": "6240C", "E": "62528"}, "size": "2EC", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the Kraid rising part of the Kraid rising cutscene"}, {"desc": "Kraid rising opening eyes", "label": "KraidRisingOpeningEyes", "addr": {"J": "6280C", "U": "6280C", "E": "62928"}, "size": "188", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles Kraid opening his eyes part of the Kraid rising cutscene"}, {"desc": "Kraid rising initialize", "label": "KraidRisingInit", "addr": {"J": "62994", "U": "62994", "E": "62AB0"}, "size": "190", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Initialize the Kraid rising cutscene"}, {"desc": "Kraid rising subroutine", "label": "KraidRisingSubroutine", "addr": {"J": "62B24", "U": "62B24", "E": "62C40"}, "size": "34", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Subroutine for the Kraid rising cutscene"}, {"desc": "Story text cutscenes initialize", "label": "StoryTextCutscenesInit", "addr": {"J": "62B90", "U": "62B90", "E": "62CAC"}, "size": "FC", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Initialize a story text cutscene"}, {"desc": "Story text cutscenes subroutine", "label": "StoryTextCutscenesSubroutine", "addr": {"J": "62FD8", "U": "62FD8", "E": "630F4"}, "size": "30", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Subroutine for the story text cutscenes (intro, after landing on Chozodia and another one?)"}, {"desc": "Mother brain close up looking at Samus", "label": "MotherBrainCloseUpLookingAtSamus", "addr": {"J": "63008", "U": "63008", "E": "63124"}, "size": "234", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the Mother Brain looking at Samus part of the Mother Brain close up cutscene"}, {"desc": "Mother brain close up eye opening", "label": "MotherBrainCloseUpEyeOpening", "addr": {"J": "63284", "U": "63284", "E": "633A0"}, "size": "23C", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the eye opening part of the Mother Brain close up cutscene"}, {"desc": "Mother brain close up tank view", "label": "MotherBrainCloseUpTankView", "addr": {"J": "634C0", "U": "634C0", "E": "635DC"}, "size": "C4", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the view of Mother Brain in her tank from up top (beginning) part of the Mother Brain close up cutscene"}, {"desc": "Mother brain close up initialize", "label": "MotherBrainCloseUpInit", "addr": {"J": "63584", "U": "63584", "E": "636A0"}, "size": "B8", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Initialize the Mother Brain close up cutscene"}, {"desc": "Mother brain close up subroutine", "label": "MotherBrainCloseUpSubroutine", "addr": {"J": "6363C", "U": "6363C", "E": "63758"}, "size": "34", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Mother brain close up cutscene subroutine"}, {"desc": "Ridley in space ship leaving", "label": "RidleyInSpaceShipLeaving", "addr": {"J": "63884", "U": "63884", "E": "639A0"}, "size": "298", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the ship leaving (end) part of the Ridley in space cutscene"}, {"desc": "Ridley in space Ridley suspicious", "label": "RidleyInSpaceRidleySuspicious", "addr": {"J": "63BE0", "U": "63BE0", "E": "63CFC"}, "size": "1B0", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the Ridley being suspicious part of the Ridley in space cutscene"}, {"desc": "Ridley in space red alert", "label": "RidleyInSpaceRedAlert", "addr": {"J": "63D90", "U": "63D90", "E": "63EAC"}, "size": "1C4", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the red alert part of the Ridley in space cutscene"}, {"desc": "Ridley in space view of ship", "label": "RidleyInSpaceViewOfShip", "addr": {"J": "63FB4", "U": "63FB4", "E": "640D0"}, "size": "1B4", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the view on the ship in space (beginning) part of the Ridley in space cutscene"}, {"desc": "Ridley in space cutscene initialize", "label": "RidleyInSpaceCutsceneInit", "addr": {"J": "642BC", "U": "642BC", "E": "643D8"}, "size": "15C", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Initialize the Ridley in space cutscene"}, {"desc": "Ridley in space subroutine", "label": "RidleyInSpaceSubroutine", "addr": {"J": "64418", "U": "64418", "E": "64534"}, "size": "34", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Subroutine for the Ridley in space cutscene"}, {"desc": "Ridley landing Ridley flying", "label": "RidleyLandingRidleyFlying", "addr": {"J": "647D0", "U": "647D0", "E": "648EC"}, "size": "178", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the Ridley flying part of the Ridley landing cutscene"}, {"desc": "Ridley landing ship landing", "label": "RidleyLandingShipLanding", "addr": {"J": "649B4", "U": "649B4", "E": "64AD0"}, "size": "5A8", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the shi landing part of the Ridley landing cutscene"}, {"desc": "Ridley landing ship in space", "label": "RidleyLandingShipInSpace", "addr": {"J": "64FE0", "U": "64FE0", "E": "650FC"}, "size": "108", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the ship in space part of the Ridley landing cutscene"}, {"desc": "Ridley landing initialize", "label": "RidleyLandingInit", "addr": {"J": "650E8", "U": "650E8", "E": "65204"}, "size": "19C", "mode": "thumb", "params": null, "return": {"desc": "Always 0?", "type": "bool"}, "notes": "Initialize the Ridley landing cutscene"}, {"desc": "Ridley landing subroutine", "label": "RidleyLandingSubroutine", "addr": {"J": "65284", "U": "65284", "E": "653A0"}, "size": "34", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Subroutine for the Ridley landing cutscene"}, {"desc": "Ridley spawn Ridley flying in", "label": "RidleySpawnRidleyFlyingIn", "addr": {"J": "65304", "U": "65304", "E": "65420"}, "size": "19C", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the Ridley flying towards the camera part of the Ridley spawn cutscene"}, {"desc": "Ridley spawn helmet reflection", "label": "RidleySpawnHelmetReflection", "addr": {"J": "65540", "U": "65540", "E": "6565C"}, "size": "12C", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the Ridley in the helmet reflection part of the Ridley spawn cutscene"}, {"desc": "Ridley spawn Samus looking up", "label": "RidleySpawnSamusLookingUp", "addr": {"J": "6566C", "U": "6566C", "E": "65788"}, "size": "7C", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the Samus looking up part of the Ridley spawn cutscene"}, {"desc": "Ridley spawn cutscene initialize", "label": "RidleySpawnCutsceneInit", "addr": {"J": "656E8", "U": "656E8", "E": "65804"}, "size": "1BC", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Initialize the Ridley spawn cutscene"}, {"desc": "Ridley spawn subroutine", "label": "RidleySpawnSubroutine", "addr": {"J": "658A4", "U": "658A4", "E": "659C0"}, "size": "34", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Subroutine for the Ridley spawn cutscene"}, {"desc": "Mecha Ridley sees Samus eye open", "label": "MechaRidleySeesSamusEyeOpen", "addr": {"J": "65924", "U": "65924", "E": "65A40"}, "size": "100", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the eye opening part (the entire cutscene) of the mecha Ridley sees Samus cutscene"}, {"desc": "Mecha Ridley sees Samus initialize", "label": "MechaRidleySeesSamusInit", "addr": {"J": "65A24", "U": "65A24", "E": "65B40"}, "size": "148", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Initialize the mecha Ridley sees Samus cutscene"}, {"desc": "Mecha Ridley sees Samus subroutine", "label": "MechaRidleySeesSamusSubroutine", "addr": {"J": "65B6C", "U": "65B6C", "E": "65C88"}, "size": "34", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Subroutine for the mecha Ridley sees Samus cutscene"}, {"desc": "Getting fully powered suit animation", "label": "GettingFullyPoweredSuitAnimation", "addr": {"J": "65BD8", "U": "65BD8", "E": "65CF4"}, "size": "204", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the animation (entire cutscene) part of the getting fully powered suit cutscene"}, {"desc": "Getting fully powered suit initialize", "label": "GettingFullyPoweredSuitInit", "addr": {"J": "66020", "U": "66020", "E": "6613C"}, "size": "33C", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Initialize the getting fully powered suit cutscene"}, {"desc": "Getting fully powered suit subroutine", "label": "GettingFullyPoweredSuitSubroutine", "addr": {"J": "6635C", "U": "6635C", "E": "66478"}, "size": "34", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Subroutine for the getting fully powered suit cutscene"}, {"desc": "Before Ruins Test Samus close up", "label": "BeforeRuinsTestSamusCloseUp", "addr": {"J": "663C8", "U": "663C8", "E": "664E4"}, "size": "270", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the Samus close up part of the before Ruins Test cutscene"}, {"desc": "Before Ruins Test wall and grey voice", "label": "BeforeRuinsTestWallAndGreyVoice", "addr": {"J": "66638", "U": "66638", "E": "66754"}, "size": "2D8", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the wall view and the grey voice part of the before Ruins Test cutscene"}, {"desc": "Before Ruins Test Chozo wall sides", "label": "BeforeRuinsTestChozoWallSides", "addr": {"J": "66A30", "U": "66A30", "E": "66B4C"}, "size": "70", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the view on the sides of the Chozo wall part of the before Ruins Test cutscene"}, {"desc": "Before Ruins Test initialize", "label": "BeforeRuinsTestInit", "addr": {"J": "66AA0", "U": "66AA0", "E": "66BBC"}, "size": "130", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Initialize the before Ruins Test cutscene"}, {"desc": "Before Ruins Test subroutine", "label": "BeforeRuinsTestSubroutine", "addr": {"J": "66BD0", "U": "66BD0", "E": "66CEC"}, "size": "30", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Subroutine for the before Ruins Test cutscene"}, {"desc": "Statue opening opening", "label": "StatueOpeningOpening", "addr": {"J": "66C00", "U": "66C00", "E": "66D1C"}, "size": "164", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the statue opening cutscene"}, {"desc": "Statue opening initialize", "label": "StatueOpeningInit", "addr": {"J": "66D64", "U": "66D64", "E": "66E80"}, "size": "2B0", "mode": "thumb", "params": null, "return": null, "notes": "Initialize the statue opening cutscene"}, {"desc": "Statue opening subroutine", "label": "StatueOpeningSubroutine", "addr": {"J": "67014", "U": "67014", "E": "67130"}, "size": "34", "mode": "thumb", "params": null, "return": {"desc": "?", "type": "u8"}, "notes": "Subroutine for the statue opening cutscene"}, {"desc": "Enter tourian animation", "label": "EnterTourianAnimation", "addr": {"J": "67080", "U": "67080", "E": "6719C"}, "size": "310", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the animation of the metroids (entire cutscene) part of the enter tourian cutscene"}, {"desc": "Enter tourian initialize", "label": "EnterTourianInit", "addr": {"J": "6794C", "U": "6794C", "E": "67A68"}, "size": "3C0", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Initialize the entering tourian cutscene"}, {"desc": "Enter tourian subroutine", "label": "EnterTourianSubroutine", "addr": {"J": "67D0C", "U": "67D0C", "E": "67E28"}, "size": "34", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Subroutine for the enter tourian cutscene"}, {"desc": "Samus in blue ship powering up", "label": "SamusInBlueShipPoweringUp", "addr": {"J": "67D8C", "U": "67D8C", "E": "67EA8"}, "size": "F8", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the blue ship powering up (entire cutscene) part of the Samus in blue ship cutscene"}, {"desc": "Samus in blue ship initialize", "label": "SamusInBlueShipInit", "addr": {"J": "67F90", "U": "67F90", "E": "680AC"}, "size": "12C", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Initialize the Samus in blue ship cutscene"}, {"desc": "Samus in blue ship subroutine", "label": "SamusInBlueShipSubroutine", "addr": {"J": "680BC", "U": "680BC", "E": "681D8"}, "size": "34", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Subroutine for the Samus in blue ship cutscene"}, {"desc": "Check draw in-game time and tanks", "label": "CheckDrawTimeAndTanks", "addr": {"J": "6895C", "U": "6895C", "E": "68A78"}, "size": "FC", "mode": "thumb", "params": [{"desc": "Don't draw flag", "type": "bool"}], "return": null}, {"desc": "Map screen OAM related", "label": "MapScreenOamRelated", "addr": {"J": "695BC", "U": "695BC", "E": "696D8"}, "size": "F0", "mode": "thumb", "params": null, "return": null, "notes": "OAM stuff related to the map screen"}, {"desc": "Map screen subroutine", "label": "MapScreenSubroutine", "addr": {"J": "6A180", "U": "6A180", "E": "6A29C"}, "size": "178", "mode": "thumb", "params": null, "return": {"desc": "Leaving map screen", "type": "bool"}}, {"desc": "Map screen initialize", "label": "MapScreenInit", "addr": {"J": "6A434", "U": "6A434", "E": "6A550"}, "size": {"J": "ABC", "U": "AA0", "E": "AA0"}, "mode": "thumb", "params": null, "return": null, "notes": "Initializes the map screen"}, {"desc": "Determine viewable area maps", "label": "DetermineViewableAreaMaps", "addr": {"J": "6AEF0", "U": "6AED4", "E": "6AFF0"}, "size": "138", "mode": "thumb", "params": null, "return": null}, {"desc": "Get minimap data", "label": "GetMinimapData", "addr": {"J": "6B114", "U": "6B0F8", "E": "6B214"}, "size": "148", "mode": "thumb", "params": [{"desc": "Minimap number", "type": "u8"}, {"desc": "Destination address", "type": "ptr"}], "return": null}, {"desc": "Check sustained input for scrolling", "label": "CheckSustainedInputForScrolling", "addr": {"J": "6C0FC", "U": "6C0E0", "E": "6C204"}, "size": {"J": "74", "U": "74", "E": "88"}, "mode": "thumb", "params": null, "return": null, "notes": "Checks for sustained input on the map screen, equipment screen, and easy sleep screen"}, {"desc": "Update minimap", "label": "UpdateMinimap", "addr": {"J": "6C170", "U": "6C154", "E": "6C28C"}, "size": "24", "mode": "thumb", "params": null, "return": null}, {"desc": "Set minimap square explored", "label": "SetMinimapSquareExplored", "addr": {"J": "6C194", "U": "6C178", "E": "6C2B0"}, "size": "4C", "mode": "thumb", "params": null, "return": null}, {"desc": "Check for unexplored minimap square", "label": "CheckForUnexploredMinimapSquare", "addr": {"J": "6C3B8", "U": "6C39C", "E": "6C4D4"}, "size": "D8", "mode": "thumb", "params": null, "return": null}, {"desc": "Check update minimap on door transition", "label": "CheckUpdateMinimapOnDoorTransition", "addr": {"J": "6C490", "U": "6C474", "E": "6C5AC"}, "size": "A4", "mode": "thumb", "params": null, "return": null}, {"desc": "Update corner minimap new square entered", "label": "UpdateCornerMinimapNewSquareEntered", "addr": {"J": "6C534", "U": "6C518", "E": "6C650"}, "size": "9C", "mode": "thumb", "params": null, "return": null}, {"desc": "Draw corner minimap", "label": "DrawCornerMinimap", "addr": {"J": "6C5D0", "U": "6C5B4", "E": "6C6EC"}, "size": {"J": "100", "U": "100", "E": "D4"}, "mode": "thumb", "params": null, "return": null}, {"desc": "Set minimap squares with obtained items", "label": "SetMinimapSquaresWithObtainedItems", "addr": {"J": "6CA60", "U": "6CA44", "E": "6CB50"}, "size": "6C", "mode": "thumb", "params": [{"desc": "Area ID", "type": "u8", "enum": "AreaID"}, {"desc": "Destination address", "type": "ptr"}], "return": null}, {"desc": "Minimap set downloaded squares", "label": "MinimapSetDownloadedSquares", "addr": {"J": "6CACC", "U": "6CAB0", "E": "6CBBC"}, "size": "128", "mode": "thumb", "params": [{"desc": "Area ID", "type": "u8", "enum": "AreaID"}, {"desc": "Destination address", "type": "ptr"}], "return": null}, {"desc": "Update minimap square for collected item", "label": "UpdateMinimapSquareForCollectedItem", "addr": {"J": "6CBF4", "U": "6CBD8", "E": "6CCE4"}, "size": "90", "mode": "thumb", "params": [{"desc": "Item X position", "type": "u8"}, {"desc": "Item Y position", "type": "u8"}], "return": null}, {"desc": "Load minimap squares with obtained items", "label": "LoadMinimapSquaresWithObtainedItems", "addr": {"J": "6CCE8", "U": "6CCCC", "E": "6CDD8"}, "size": "B8", "mode": "thumb", "params": null, "return": null}, {"desc": "Update minimap chunk", "label": "UpdateMinimapChunk", "addr": {"J": "6CDA0", "U": "6CD84", "E": "6CE90"}, "size": "174", "mode": "thumb", "params": [{"desc": "Event", "type": "u8", "enum": "Event"}], "return": null}, {"desc": "Count tanks in area", "label": "CountTanksInArea", "addr": {"J": "6CF14", "U": "6CEF8", "E": "6D004"}, "size": "168", "mode": "thumb", "params": null, "return": null}, {"desc": "Draw in-game time and tanks", "label": "DrawTimeAndTanks", "addr": {"J": "6D07C", "U": "6D060", "E": "6D16C"}, "size": "2D4", "mode": "thumb", "params": [{"desc": "?", "type": "u8"}, {"desc": "?", "type": "u8"}], "return": null}, {"desc": "Get all minimap data", "label": "GetAllMinimapData", "addr": {"J": "6DF9C", "U": "6DF80", "E": "6E070"}, "size": "7C", "mode": "thumb", "params": [{"desc": "Always 0xFF?", "type": "u8"}], "return": null}, {"desc": "Check explored areas", "label": "CheckExploredAreas", "addr": {"J": "6E018", "U": "6DFFC", "E": "6E0EC"}, "size": "50", "mode": "thumb", "params": null, "return": null}, {"desc": "Map screen check input", "label": "MapScreenCheckInput", "addr": {"J": "6E068", "U": "6E04C", "E": "6E13C"}, "size": "1A8", "mode": "thumb", "params": null, "return": null, "notes": "Checks for input on the map screen"}, {"desc": "Map screen change area", "label": "MapScreenChangeArea", "addr": {"J": "6E2EC", "U": "6E2D0", "E": "6E3C0"}, "size": "190", "mode": "thumb", "params": null, "return": null}, {"desc": "Get character width", "label": "GetCharacterWidth", "addr": {"J": "6E47C", "U": "6E460", "E": "6E550"}, "size": "24", "mode": "thumb", "params": [{"desc": "Character ID", "type": "u16"}], "return": {"desc": "Character width (0xA if invalid)", "type": "u8"}}, {"desc": "Draw character for text", "label": "DrawCharacterForText", "addr": {"J": "6E4A0", "U": "6E484", "E": "6E574"}, "size": {"J": "4B8", "U": "4B8", "E": "4E4"}, "mode": "thumb", "params": [{"desc": "Character ID", "type": "u16"}, {"desc": "Destination address", "type": "ptr"}, {"desc": "Indent", "type": "u16"}, {"desc": "Color", "type": "u8"}], "return": null, "notes": "Draws a character for text (description in equipment screen and story text)"}, {"desc": "Draw character for message", "label": "DrawCharacterForMessage", "addr": {"J": "6E958", "U": "6E93C", "E": "6EA58"}, "size": {"J": "5F0", "U": "5F0", "E": "614"}, "mode": "thumb", "params": [{"desc": "Character ID", "type": "u16"}, {"desc": "Destination address", "type": "ptr"}, {"desc": "Indent", "type": "u16"}, {"desc": "Color", "type": "u8"}], "return": null, "notes": "Draws a character for a message (item pop up, location name, map screen area name)"}, {"desc": "Draw character for location text", "label": "DrawCharacterForLocationText", "addr": {"J": "6EF48", "U": "6EF2C", "E": "6F06C"}, "size": "EC", "mode": "thumb", "params": [{"desc": "?", "type": "u8"}, {"desc": "Pointer to text pointer", "type": "ptr"}], "return": null}, {"desc": "Draw location text", "label": "DrawLocationText", "addr": {"J": "6F034", "U": "6F018", "E": "6F158"}, "size": {"J": "90", "U": "90", "E": "9C"}, "mode": "thumb", "params": [{"desc": "Location text ID", "type": "u8"}, {"desc": "Graphics slot", "type": "u8"}], "return": null}, {"desc": "Start story text", "label": "StartStoryText", "addr": {"J": "6F420", "U": "6F404", "E": "6F550"}, "size": "20", "mode": "thumb", "params": [{"desc": "Story text ID", "type": "u8"}], "return": null}, {"desc": "Start file screen text", "label": "StartFileScreenText", "addr": {"J": "6F5C0", "U": "6F5A4", "E": "6F6F0"}, "size": "20", "mode": "thumb", "params": [{"desc": "Message number", "type": "u8"}], "return": null, "notes": "Starts a file screen text"}, {"desc": "Process current message", "label": "ProcessCurrMessage", "addr": {"J": "6F9A8", "U": "6F98C", "E": "6FAD8"}, "size": "140", "mode": "thumb", "params": [{"desc": "Current message pointer", "type": "ptr.CurrMessage"}, {"desc": "Text pointer", "type": "ptr.char"}, {"desc": "Destination address", "type": "ptr"}], "return": {"desc": "Line state (0 = No new line, 1 = new line, 2 = message end)", "type": "u8"}}, {"desc": "Update minimap animated palettes", "label": "UpdateMinimapAnimatedPalettes", "addr": {"J": "6FD1C", "U": "6FD00", "E": "6FE4C"}, "size": "118", "mode": "thumb", "params": null, "return": null}, {"desc": "Update suit type", "label": "UpdateSuitType", "addr": {"J": "6FF00", "U": "6FEE4", "E": "70030"}, "size": "68", "mode": "thumb", "params": [{"desc": "New suit type", "type": "u8", "enum": "SuitType"}], "return": null}, {"desc": "Draw status screen items", "label": "DrawStatusScreenItems", "addr": {"J": "6FF68", "U": "6FF4C", "E": "70098"}, "size": "D4", "mode": "thumb", "params": [{"desc": "Row to draw", "type": "u8"}], "return": {"desc": "Done drawing", "type": "bool"}}, {"desc": "Draw status screen tanks amounts", "label": "DrawStatusScreenTanksAmounts", "addr": {"J": "7019C", "U": "70180", "E": "702CC"}, "size": "1A4", "mode": "thumb", "params": null, "return": null, "notes": "Draws all the status screen tank amouts"}, {"desc": "Draw status screen single tank amount", "label": "DrawStatusScreenSingleTankAmount", "addr": {"J": "70430", "U": "70414", "E": "70560"}, "size": "120", "mode": "thumb", "params": [{"desc": "Row to draw?", "type": "u8"}, {"desc": "Amount", "type": "u16"}, {"desc": "Always 0xB?", "type": "u8"}, {"desc": "Is at max flag", "type": "bool"}], "return": null, "notes": "Draws a single status screen tank amount"}, {"desc": "Set status screen bomb visibility", "label": "SetStatusScreenBombVisibility", "addr": {"J": "709DC", "U": "709C0", "E": "70B0C"}, "size": "26C", "mode": "thumb", "params": [{"desc": "Tilemap offset", "type": "u32"}], "return": null}, {"desc": "Check select pressed on status screen", "label": "CheckSelectPressedOnStatusScreen", "addr": {"J": "70F74", "U": "70F58", "E": "710A4"}, "size": "14", "mode": "thumb", "params": [{"desc": "Always 0x4 (select flag)", "type": "u8", "enum": "ButtonInput"}], "return": {"desc": "Select pressed", "type": "bool"}, "notes": "Checks if the select button is pressed when on the status screen"}, {"desc": "Status screen input related", "label": "StatusScreenInputRelated", "addr": {"J": "7181C", "U": "71800", "E": "7194C"}, "size": "94", "mode": "thumb", "params": null, "return": null, "notes": "To check"}, {"desc": "Get current equipment selected", "label": "GetCurrentEquipmentSelected", "addr": {"J": "718B0", "U": "71894", "E": "719E0"}, "size": "1A8", "mode": "thumb", "params": [{"desc": "Status Slot", "type": "u8"}], "return": {"desc": "Equipment ID (Enum in order starting with long beam = 0 and ending with space jump = 10, unknown item = 11, pistol = 12 and none = 80)", "type": "u8"}, "notes": "Gets the ID of the current equipment selected on the status screen"}, {"desc": "Easy sleep menu subroutine", "label": "EasySleepMenuSubroutine", "addr": {"J": "71F8C", "U": "71F70", "E": "720BC"}, "size": "1D4", "mode": "thumb", "params": null, "return": {"desc": "1 if leaving with input, 2 if leaving with \"no\" option, 0 otherwise", "type": "u8"}}, {"desc": "Chozo statue hint movement", "label": "ChozoStatueHintMovement", "addr": {"J": "72220", "U": "72204", "E": "72350"}, "size": "46C", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo statue hint scrolling", "label": "ChozoStatueHintScrolling", "addr": {"J": "7268C", "U": "72670", "E": "727BC"}, "size": "248", "mode": "thumb", "params": null, "return": null}, {"desc": "Chozo statue hint subroutine", "label": "ChozoStatueHintSubroutine", "addr": {"J": "728D4", "U": "728B8", "E": "72A04"}, "size": "25C", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}}, {"desc": "Chozo statue hint change area", "label": "ChozoStatueHintChangeArea", "addr": {"J": "72B30", "U": "72B14", "E": "72C60"}, "size": "A4", "mode": "thumb", "params": [{"desc": "Chozo statue X position pointer", "type": "ptr"}, {"desc": "Chozo statue Y position pointer", "type": "ptr"}, {"desc": "?", "type": "ptr"}, {"desc": "Chozo statue target path pointer?", "type": "ptr"}], "return": null}, {"desc": "Chozo statue hint check events", "label": "ChozoStatueHintCheckEvents", "addr": {"J": "7306C", "U": "73050", "E": "7319C"}, "size": "7C", "mode": "thumb", "params": [{"desc": "Array offset?", "type": "u8"}], "return": {"desc": "-1 if not activated, 0 if activated, 1 if de-activated", "type": "s8"}}, {"desc": "Check activated Chozo statue targets", "label": "CheckActivatedChozoStatueTargets", "addr": {"J": "730E8", "U": "730CC", "E": "73218"}, "size": "3C", "mode": "thumb", "params": null, "return": null}, {"desc": "Check unvisited area has Chozo hint", "label": "CheckUnvisitedAreaHasChozoHint", "addr": {"J": "73124", "U": "73108", "E": "73254"}, "size": "48", "mode": "thumb", "params": null, "return": null}, {"desc": "Draw map screen boss flames", "label": "DrawMapScreenBossFlames", "addr": {"J": "7316C", "U": "73150", "E": "7329C"}, "size": "F8", "mode": "thumb", "params": null, "return": null}, {"desc": "Read SRAM", "label": "ReadSram", "addr": {"J": "732B8", "U": "7329C", "E": "733E8"}, "size": {"J": "64", "U": "64", "E": "50"}, "mode": "thumb", "params": null, "return": null}, {"desc": "Write SRAM data", "label": "WriteSramData", "addr": {"J": "73D00", "U": "73CE4", "E": "73E1C"}, "size": "350", "mode": "thumb", "params": null, "return": null}, {"desc": "Load SRAM data", "label": "LoadSramData", "addr": {"J": "74050", "U": "74034", "E": "7416C"}, "size": "2AC", "mode": "thumb", "params": null, "return": null, "notes": "Loads the SRAM data of the current save file to RAM"}, {"desc": "Write ASCII string", "label": "WriteAsciiString", "addr": {"J": "742FC", "U": "742E0", "E": "74418"}, "size": "24", "mode": "thumb", "params": [{"desc": "Destination address", "type": "ptr"}, {"desc": "String pointer", "type": "ptr.ascii"}, {"desc": "Length", "type": "u8"}], "return": null}, {"desc": "Write SRAM arrays", "label": "WriteSramArrays", "addr": {"J": "747D8", "U": "747BC", "E": "748F4"}, "size": "100", "mode": "thumb", "params": null, "return": null}, {"desc": "Load SRAM arrays", "label": "LoadSramArrays", "addr": {"J": "748D8", "U": "748BC", "E": "749F4"}, "size": "128", "mode": "thumb", "params": null, "return": null}, {"desc": "Backup time attack for SRAM", "label": "BackupTimeAttackForSram", "addr": {"J": "74F74", "U": "74F58", "E": "75090"}, "size": "B8", "mode": "thumb", "params": null, "return": null, "notes": "Backups the time attack IGT and passwords in WRAM, and saves them in the SRAM"}, {"desc": "Load demo RAM values", "label": "LoadDemoRamValues", "addr": {"J": "75380", "U": "75364", "E": "7549C"}, "size": "130", "mode": "thumb", "params": [{"desc": "Loading Samus data flag", "type": "bool"}, {"desc": "Demo number", "type": "u8"}], "return": null}, {"desc": "Check load save file", "label": "CheckLoadSaveFile", "addr": {"J": "75990", "U": "7596C", "E": "75AB0"}, "size": "128", "mode": "thumb", "params": null, "return": null}, {"desc": "Initialize save file", "label": "InitSaveFile", "addr": {"J": "75AB8", "U": "75A94", "E": "75BD8"}, "size": "164", "mode": "thumb", "params": null, "return": null, "notes": "Initializes a new, blank save file"}, {"desc": "Erase SRAM menu subroutine", "label": "EraseSramMenuSubroutine", "addr": {"J": "75C54", "U": "75C30", "E": "75D74"}, "size": "14C", "mode": "thumb", "params": null, "return": {"desc": "Leaving", "type": "bool"}}, {"desc": "Erase SRAM menu process input", "label": "EraseSramMenuProcessInput", "addr": {"J": "75DA0", "U": "75D7C", "E": "75EC0"}, "size": "54", "mode": "thumb", "params": null, "return": {"desc": "Return value of EraseSramMenuCheckForInput", "type": "u8"}, "notes": "Processes the inputs"}, {"desc": "Erase SRAM menu check for input", "label": "EraseSramMenuCheckForInput", "addr": {"J": "75EA0", "U": "75E7C", "E": "75FC0"}, "size": "10C", "mode": "thumb", "params": null, "return": {"desc": "Input (0 = none, 1 = erasing, 2 = no first window)", "type": "u8"}, "notes": "Checks for input"}, {"desc": "Erase SRAM menu initialize", "label": "EraseSramMenuInit", "addr": {"J": "75FAC", "U": "75F88", "E": "760CC"}, "size": {"J": "244", "U": "24C", "E": "244"}, "mode": "thumb", "params": null, "return": null, "notes": "Initializes the SRAM Menu"}, {"desc": "Erase SRAM menu process OAM", "label": "EraseSramMenuProcessOAM", "addr": {"J": "76380", "U": "76364", "E": "764A0"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the OAM related stuff"}, {"desc": "Load special graphics data", "label": "LoadSpecialGraphicsData", "addr": {"J": "7640C", "U": "763F0", "E": "7652C"}, "size": "18", "mode": "thumb", "params": [{"desc": "Special graphics data pointer", "type": "ptr.lz.gfx"}], "return": null, "notes": "Calls LZ77UnCompReadNormalWrite16bit and loads the graphics data in r0"}, {"desc": "Load special graphics data_Copy", "label": "LoadSpecialGraphicsData_Copy", "addr": {"J": "76424", "U": "76408", "E": "76544"}, "size": "18", "mode": "thumb", "params": [{"desc": "Special graphics data pointer", "type": "ptr.lz.gfx"}], "return": null, "notes": "Calls LZ77UnCompReadNormalWrite16bit and loads the graphics data in r0, copy of above"}, {"desc": "Title screen process OAM", "label": "TitleScreenProcessOAM", "addr": {"J": "76468", "U": "7644C", "E": "76588"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the OAM related stuff"}, {"desc": "Title screen fading in", "label": "TitleScreenFadingIn", "addr": {"J": "764E4", "U": "764C8", "E": "76604"}, "size": "118", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Handles the fading in part of the title screen"}, {"desc": "Title screen subroutine", "label": "TitleScreenSubroutine", "addr": {"J": "771BC", "U": "771A0", "E": "77354"}, "size": {"J": "178", "U": "178", "E": "188"}, "mode": "thumb", "params": null, "return": {"desc": "Leaving", "type": "bool"}}, {"desc": "Title screen idle", "label": "TitleScreenIdle", "addr": {"J": "77334", "U": "77318", "E": "774DC"}, "size": "B0", "mode": "thumb", "params": null, "return": {"desc": "Action (0 = none, 1 = input detected 2 = starting demo)", "type": "u8"}, "notes": "Handles the sparkles and the logo glow animation"}, {"desc": "Title screen initialize", "label": "TitleScreenInit", "addr": {"J": "77478", "U": "7745C", "E": "77620"}, "size": {"J": "2A0", "U": "2A0", "E": "300"}, "mode": "thumb", "params": null, "return": null, "notes": "Initializes the title screen"}, {"desc": "Game over subroutine", "label": "GameOverSubroutine", "addr": {"J": "778E0", "U": "778C4", "E": "77BD0"}, "size": "210", "mode": "thumb", "params": null, "return": {"desc": "Leaving", "type": "bool"}}, {"desc": "Game over menu detect input", "label": "GameOverMenuDetectInput", "addr": {"J": "77AF0", "U": "77AD4", "E": "77DE0"}, "size": "78", "mode": "thumb", "params": null, "return": {"desc": "An option was selected", "type": "bool"}, "notes": "Checks for input"}, {"desc": "Game over menu update text graphics", "label": "GameOverMenuUpdateTextGfx", "addr": {"J": "77B68", "U": "77B4C", "E": "77E58"}, "size": "5C", "mode": "thumb", "params": null, "return": null, "notes": "Updates the text graphics depending on if it's selected"}, {"desc": "Game over menu initialize", "label": "GameOverMenuInit", "addr": {"J": "77BC4", "U": "77BA8", "E": "77EB4"}, "size": {"J": "230", "U": "230", "E": "228"}, "mode": "thumb", "params": null, "return": null, "notes": "Initializes the game over menu"}, {"desc": "Game over menu letters animation", "label": "GameOverMenuLettersAnimation", "addr": {"J": "78010", "U": "77FF4", "E": "782F4"}, "size": "180", "mode": "thumb", "params": null, "return": null, "notes": "Handles the animation of the GAME OVER letters"}, {"desc": "Game over menu process OAM", "label": "GameOverMenuProcessOAM", "addr": {"J": "78218", "U": "781FC", "E": "784FC"}, "size": "2C", "mode": "thumb", "params": null, "return": null, "notes": "Handles the OAM related stuff"}, {"desc": "File select menu process OAM", "label": "FileSelectMenuProcessOAM", "addr": {"J": "78268", "U": "7824C", "E": "7854C"}, "size": "60", "mode": "thumb", "params": null, "return": null, "notes": "Handles the OAM related stuff"}, {"desc": "Copy time attack time", "label": "CopyTimeAttackTime", "addr": {"J": "7A1C0", "U": "7A1A4", "E": "7A494"}, "size": "118", "mode": "thumb", "params": null, "return": null, "notes": "Copies the time attack time to non gameplay RAM"}, {"desc": "File select options subroutine", "label": "FileSelectOptionsSubroutine", "addr": {"J": "7A800", "U": "7A7E4", "E": "7AAD4"}, "size": "248", "mode": "thumb", "params": null, "return": {"desc": "Leaving", "type": "bool"}}, {"desc": "Reset IO transfter info", "label": "ResetIOTransfterInfo", "addr": {"J": "7AA48", "U": "7AA2C", "E": "7AD1C"}, "size": "48", "mode": "thumb", "params": null, "return": null, "notes": "Resets the IO transfer info"}, {"desc": "Start NES Metroid", "label": "StartNesMetroid", "addr": {"J": "7AA90", "U": "7AA74", "E": "7AD64"}, "size": "150", "mode": "thumb", "params": null, "return": {"desc": "Pressed B to cancel", "type": "bool"}}, {"desc": "Stereo selection subroutine", "label": "StereoSelectionSubroutine", "addr": {"J": "7AC70", "U": "7AC54", "E": "7AF44"}, "size": "BC", "mode": "thumb", "params": null, "return": {"desc": "Leaving", "type": "bool"}, "notes": "Subroutine for the stereo selection"}, {"desc": "Sound test subroutine", "label": "SoundTestSubroutine", "addr": {"J": "7AD2C", "U": "7AD10", "E": "7B000"}, "size": {"J": "2F8", "U": "2F8", "E": "300"}, "mode": "thumb", "params": null, "return": {"desc": "Leaving", "type": "bool"}, "notes": "Subroutine for the sound test"}, {"desc": "Time attack records subroutine", "label": "TimeAttackRecordsSubroutine", "addr": {"J": "7B160", "U": "7B144", "E": "7B43C"}, "size": "5D8", "mode": "thumb", "params": null, "return": {"desc": "Leaving", "type": "bool"}, "notes": "Subroutine for the time attack records"}, {"desc": "Load time attack time for record", "label": "LoadTimeAttackTimeForRecord", "addr": {"J": "7B760", "U": "7B744", "E": "7BA3C"}, "size": "110", "mode": "thumb", "params": [{"desc": "Time attack ID", "type": "u8"}], "return": null}, {"desc": "Load time attack password for record", "label": "LoadTimeAttackPasswordForRecord", "addr": {"J": "7B948", "U": "7B92C", "E": "7BC24"}, "size": "BC", "mode": "thumb", "params": [{"desc": "Part (0 = Normal First Half, 1 = Normal Second Half 2 = 100% First Half, 3 = 100% Second Half)", "type": "u8"}], "return": null, "notes": "Loads a part of a time attack password in VRAM for the time attack record menu"}, {"desc": "Metroid Fusion link subroutine", "label": "MetroidFusionLinkSubroutine", "addr": {"J": "7BA04", "U": "7B9E8", "E": "7BCE0"}, "size": "73C", "mode": "thumb", "params": null, "return": {"desc": "Leaving", "type": "bool"}, "notes": "Subroutine for the Metroid Fusion link"}, {"desc": "File select menu subroutine", "label": "FileSelectMenuSubroutine", "addr": {"J": "7C140", "U": "7C124", "E": "7C41C"}, "size": {"J": "1EC", "U": "1DC", "E": "1DC"}, "mode": "thumb", "params": null, "return": {"desc": "Leaving", "type": "bool"}, "notes": "Subroutine for the file select menu"}, {"desc": "File select fading", "label": "FileSelectFading", "addr": {"J": "7C32C", "U": "7C300", "E": "7C5F8"}, "size": "1B0", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Handles the fadings for the file select menu"}, {"desc": "File select menu initialize", "label": "FileSelectMenuInit", "addr": {"J": "7C614", "U": "7C5E0", "E": "7C8DC"}, "size": {"J": "414", "U": "448", "E": "480"}, "mode": "thumb", "params": null, "return": null, "notes": "Initializes the file select menu"}, {"desc": "Display save file info", "label": "DisplaySaveFileInfo", "addr": {"J": "7CB2C", "U": "7CB2C", "E": "7CE60"}, "size": "224", "mode": "thumb", "params": null, "return": null, "notes": "Main function that displays the info on the save files"}, {"desc": "Display save file health", "label": "DisplaySaveFileHealth", "addr": {"J": "7CD50", "U": "7CD50", "E": "7D084"}, "size": "74", "mode": "thumb", "params": [{"desc": "File number", "type": "u8"}], "return": null, "notes": "Display health on a save file"}, {"desc": "Check inputting time attack code", "label": "CheckInputtingTimeAttackCode", "addr": {"J": "7D610", "U": "7D588", "E": "7D8C0"}, "size": "A4", "mode": "thumb", "params": null, "return": {"desc": "Fully entered", "type": "bool"}, "notes": "Checks for the time attack input, to test"}, {"desc": "Soft reset subroutine", "label": "SoftResetSubroutine", "addr": {"J": "7EFF8", "U": "7EF9C", "E": "7F2D4"}, "size": {"J": "54", "U": "54", "E": "160"}, "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}}, {"desc": "Get value from time attack seed", "label": "GetValueFromTimeAttackSeed", "addr": {"J": "7F1A4", "U": "7F148", "E": "7F840"}, "size": "24", "mode": "thumb", "params": [{"desc": "Seed", "type": "u32"}, {"desc": "Value", "type": "u32"}], "return": {"desc": "Seed value", "type": "u32"}}, {"desc": "Generate time attack password", "label": "GenerateTimeAttackPassword", "addr": {"J": "7F30C", "U": "7F2B0", "E": "7F9A8"}, "size": "C0", "mode": "thumb", "params": [{"desc": "Seed", "type": "u32"}, {"desc": "Destination array", "type": "ptr"}, {"desc": "Size", "type": "u32"}], "return": null}, {"desc": "Is save file invalid", "label": "IsSaveFileInvalid", "addr": {"J": "7F3CC", "U": "7F370", "E": "7FA68"}, "size": "8C", "mode": "thumb", "params": null, "return": {"desc": "Invalid", "type": "bool"}}, {"desc": "Time attack password seed function 1", "label": "TimeAttackPasswordSeedFunction1", "addr": {"J": "7F6F0", "U": "7F694", "E": "7FD90"}, "size": "44", "mode": "thumb", "params": [{"desc": "?", "type": "u32"}, {"desc": "?", "type": "u32"}], "return": null}, {"desc": "Time attack password seed function 2", "label": "TimeAttackPasswordSeedFunction2", "addr": {"J": "7F734", "U": "7F6D8", "E": "7FDD4"}, "size": "44", "mode": "thumb", "params": [{"desc": "Seed", "type": "u32"}, {"desc": "?", "type": "u32"}], "return": null}, {"desc": "Time attack password seed function 3", "label": "TimeAttackPasswordSeedFunction3", "addr": {"J": "7F778", "U": "7F71C", "E": "7FE18"}, "size": "44", "mode": "thumb", "params": [{"desc": "Seed", "type": "u32"}, {"desc": "?", "type": "u32"}], "return": null}, {"desc": "Time attack password seed function 4", "label": "TimeAttackPasswordSeedFunction4", "addr": {"J": "7F7BC", "U": "7F760", "E": "7FE5C"}, "size": "50", "mode": "thumb", "params": [{"desc": "Seed", "type": "u32"}, {"desc": "?", "type": "u32"}], "return": null}, {"desc": "Time attack password seed function 5", "label": "TimeAttackPasswordSeedFunction5", "addr": {"J": "7F80C", "U": "7F7B0", "E": "7FEAC"}, "size": "44", "mode": "thumb", "params": [{"desc": "Seed", "type": "u32"}, {"desc": "?", "type": "u32"}], "return": null}, {"desc": "Time attack password seed function 6", "label": "TimeAttackPasswordSeedFunction6", "addr": {"J": "7F850", "U": "7F7F4", "E": "7FEF0"}, "size": "50", "mode": "thumb", "params": [{"desc": "Seed", "type": "u32"}, {"desc": "?", "type": "u32"}], "return": null}, {"desc": "Time attack password seed function 7", "label": "TimeAttackPasswordSeedFunction7", "addr": {"J": "7F8A0", "U": "7F844", "E": "7FF40"}, "size": "58", "mode": "thumb", "params": [{"desc": "Seed", "type": "u32"}, {"desc": "?", "type": "u32"}], "return": null}, {"desc": "Time attack password seed function 8", "label": "TimeAttackPasswordSeedFunction8", "addr": {"J": "7F8F8", "U": "7F89C", "E": "7FF98"}, "size": "60", "mode": "thumb", "params": [{"desc": "Seed", "type": "u32"}, {"desc": "?", "type": "u32"}], "return": null}, {"desc": "Randomize time attack password seed", "label": "RandomizeTimeAttackPasswordSeed", "addr": {"J": "7F958", "U": "7F8FC", "E": "7FFF8"}, "size": "84", "mode": "thumb", "params": [{"desc": "Seed", "type": "u32"}, {"desc": "Random number", "type": "u32"}], "return": null}, {"desc": "Generate time attack password seed", "label": "GenerateTimeAttackPasswordSeed", "addr": {"J": "7F9DC", "U": "7F980", "E": "8007C"}, "size": "1C8", "mode": "thumb", "params": [{"desc": "Time attack data pointer", "type": "ptr.TimeAttackData"}], "return": {"desc": "Always 0", "type": "bool"}}, {"desc": "Check set new time attack record", "label": "CheckSetNewTimeAttackRecord", "addr": {"J": "7FBA4", "U": "7FB48", "E": "80244"}, "size": "21C", "mode": "thumb", "params": null, "return": {"desc": "New record set", "type": "bool"}}, {"desc": "VBlank code during intro fuzz", "label": "VBlankCodeDuringIntroFuzz", "addr": {"J": "801E0", "U": "80184", "E": "80884"}, "size": "58", "mode": "thumb", "params": null, "return": null, "notes": "Vblank code during intro fuzz"}, {"desc": "Intro initialize", "label": "IntroInit", "addr": {"J": "80238", "U": "801DC", "E": "808DC"}, "size": {"J": "1D4", "U": "1D4", "E": "1E0"}, "mode": "thumb", "params": null, "return": null, "notes": "Initializes the intro"}, {"desc": "Intro text process OAM", "label": "IntroTextProcessOAM", "addr": {"J": "8040C", "U": "803B0", "E": "80ABC"}, "size": "1A0", "mode": "thumb", "params": null, "return": null, "notes": "Handles the OAM related stuff for the text of the intro"}, {"desc": "Intro emergency order", "label": "IntroEmergencyOrder", "addr": {"J": "8072C", "U": "806D0", "E": "80DDC"}, "size": "E8", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the \"Emergency Order\" part of the intro"}, {"desc": "Intro ship flying towards camera process OAM", "label": "IntroShipFlyingTowardsCameraProcessOAM", "addr": {"J": "80814", "U": "807B8", "E": "80EC4"}, "size": "134", "mode": "thumb", "params": null, "return": null, "notes": "Handles the OAM related stuff for the ship flying towards the camera"}, {"desc": "Intro ship flying towards camera", "label": "IntroShipFlyingTowardsCamera", "addr": {"J": "80948", "U": "808EC", "E": "80FF8"}, "size": "9C", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the ship flying towards the camera part of the intro"}, {"desc": "Intro Samus in her ship", "label": "IntroSamusInHerShip", "addr": {"J": "809E4", "U": "80988", "E": "81094"}, "size": "100", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the Samus in her ship part of the intro"}, {"desc": "Intro exterminate", "label": "IntroExterminate", "addr": {"J": "80AE4", "U": "80A88", "E": "81194"}, "size": "F0", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the \"Exterminate...\" part of the intro"}, {"desc": "Intro view of zebes process OAM", "label": "IntroViewOfZebesProcessOAM", "addr": {"J": "80BD4", "U": "80B78", "E": "81284"}, "size": "154", "mode": "thumb", "params": null, "return": null, "notes": "Handles the OAM related stuff for the view of zebes"}, {"desc": "Intro view of zebes", "label": "IntroViewOfZebes", "addr": {"J": "80D28", "U": "80CCC", "E": "813D8"}, "size": {"J": "12C", "U": "12C", "E": "134"}, "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the view of zebes part of the intro"}, {"desc": "Intro defeat", "label": "IntroDefeat", "addr": {"J": "80E54", "U": "80DF8", "E": "8150C"}, "size": "100", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the \"And defeat...\" part of the intro"}, {"desc": "Intro Mother Brain", "label": "IntroMotherBrain", "addr": {"J": "80F54", "U": "80EF8", "E": "8160C"}, "size": "120", "mode": "thumb", "params": null, "return": {"desc": "Always 0", "type": "bool"}, "notes": "Handles the Mother Brain view part of the intro"}, {"desc": "Intro fuzz process OAM", "label": "IntroFuzzProcessOAM", "addr": {"J": "81074", "U": "81018", "E": "8172C"}, "size": "88", "mode": "thumb", "params": null, "return": null, "notes": "Handles the OAM related stuff for the fuzz"}, {"desc": "Intro fuzz", "label": "IntroFuzz", "addr": {"J": "810FC", "U": "810A0", "E": "817B4"}, "size": {"J": "DC", "U": "DC", "E": "D4"}, "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Handles the fuzz part of the intro"}, {"desc": "Title intro subroutine", "label": "TitleIntroSubroutine", "addr": {"J": "811D8", "U": "8117C", "E": "81888"}, "size": "CC", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}}, {"desc": "VBlank code during intro", "label": "VBlankCodeDuringIntro", "addr": {"J": "812A4", "U": "81248", "E": "81954"}, "size": "D8", "mode": "thumb", "params": null, "return": null, "notes": "Vblank code during intro"}, {"desc": "Tourian escape Samus surrounded calculate BG2 position", "label": "TourianEscapeSamusSurroundedCalculateBG2Position", "addr": {"J": "816E0", "U": "81684", "E": "81D90"}, "size": "104", "mode": "thumb", "params": null, "return": null, "notes": "Calculates the new position and size of the BG2 for the camera zooming out effect"}, {"desc": "Tourian escape initialize", "label": "TourianEscapeInit", "addr": {"J": "81D60", "U": "81D04", "E": "823FC"}, "size": {"J": "12C", "U": "12C", "E": "120"}, "mode": "thumb", "params": null, "return": null, "notes": "Initializes the tourian escape"}, {"desc": "Tourian escape zebes exploding", "label": "TourianEscapeZebesExploding", "addr": {"J": "81E8C", "U": "81E30", "E": "8251C"}, "size": {"J": "834", "U": "834", "E": "830"}, "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Handles the rooms exploding and the ship leaving the planet with zebes exploding in the background part of the cutscene"}, {"desc": "Tourian escape Samus in her ship", "label": "TourianEscapeSamusInHerShip", "addr": {"J": "826C0", "U": "82664", "E": "82D4C"}, "size": {"J": "36C", "U": "36C", "E": "354"}, "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Handles the Samus in her ship part of the cutscene"}, {"desc": "Tourian escape Samus looking around", "label": "TourianEscapeSamusLookingAround", "addr": {"J": "82A2C", "U": "829D0", "E": "830A0"}, "size": {"J": "288", "U": "288", "E": "280"}, "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Handles the Samus looking left and right in her ship part of the cutscene"}, {"desc": "Tourian escape Samus surrounded", "label": "TourianEscapeSamusSurrounded", "addr": {"J": "82CB4", "U": "82C58", "E": "83320"}, "size": {"J": "178", "U": "178", "E": "174"}, "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Handles the Samus being surrounded by space pirates part of the cutscene"}, {"desc": "Tourian escape Samus flying in", "label": "TourianEscapeSamusFlyingIn", "addr": {"J": "82E2C", "U": "82DD0", "E": "83494"}, "size": "1D0", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Handles the Samus flying towards the camera part of the cutscene"}, {"desc": "Tourian escape Samus chased by pirates", "label": "TourianEscapeSamusChasedByPirates", "addr": {"J": "82FFC", "U": "82FA0", "E": "83664"}, "size": {"J": "424", "U": "424", "E": "420"}, "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Handles the Samus being chased by pirates part of the cutscene"}, {"desc": "Tourian escape Samus chased pirates firing", "label": "TourianEscapeSamusChasedPiratesFiring", "addr": {"J": "83420", "U": "833C4", "E": "83A84"}, "size": {"J": "49C", "U": "49C", "E": "488"}, "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Handles the Samus being chased by pirates that shoots beams part of the cutscene"}, {"desc": "Tourian escape Samus getting shot", "label": "TourianEscapeSamusGettingShot", "addr": {"J": "838BC", "U": "83860", "E": "83F0C"}, "size": {"J": "4B0", "U": "4B0", "E": "4A8"}, "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Handles the Samus flying in space and getting shot down part of the cutscene"}, {"desc": "Tourian escape Samus going to crash", "label": "TourianEscapeSamusGoingToCrash", "addr": {"J": "83D6C", "U": "83D10", "E": "843B4"}, "size": {"J": "198", "U": "198", "E": "194"}, "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Handles the Samus going to crash on zebes part of the cutscene"}, {"desc": "Tourian escape Samus crashing", "label": "TourianEscapeSamusCrashing", "addr": {"J": "83F04", "U": "83EA8", "E": "84548"}, "size": {"J": "25C", "U": "25C", "E": "250"}, "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Handles the Samus crashing on zebes part of the cutscene"}, {"desc": "Tourian escape Samus looking at sky", "label": "TourianEscapeSamusLookingAtSky", "addr": {"J": "84160", "U": "84104", "E": "84798"}, "size": {"J": "288", "U": "288", "E": "28C"}, "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Handles the Samus looking at the sky part of the cutscene"}, {"desc": "Tourian escape Samus looking at mother ship", "label": "TourianEscapeSamusLookingAtMotherShip", "addr": {"J": "843E8", "U": "8438C", "E": "84A24"}, "size": {"J": "388", "U": "388", "E": "378"}, "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Handles the Samus looking at the mother ship part of the cutscene"}, {"desc": "Tourian escape call subroutines", "label": "TourianEscapeCallSubroutines", "addr": {"J": "84770", "U": "84714", "E": "84D9C"}, "size": "E4", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Calls the other subroutines for the tourian escape cutscene, ends when the big monologue text ended"}, {"desc": "Fusion gallery initialize", "label": "FusionGalleryInit", "addr": {"J": "848CC", "U": "84870", "E": "84EF8"}, "size": {"J": "1D0", "U": "1D0", "E": "1D4"}, "mode": "thumb", "params": null, "return": null, "notes": "Initializes the fusion gallery"}, {"desc": "Fusion gallery display", "label": "FusionGalleryDisplay", "addr": {"J": "84A9C", "U": "84A40", "E": "850CC"}, "size": "120", "mode": "thumb", "params": null, "return": {"desc": "Leaving", "type": "bool"}, "notes": "Handles the gallery displaying the fusion images"}, {"desc": "Fusion gallery subroutine", "label": "FusionGallerySubroutine", "addr": {"J": "84BBC", "U": "84B60", "E": "851EC"}, "size": "D4", "mode": "thumb", "params": null, "return": {"desc": "Leaving", "type": "bool"}}, {"desc": "Load in game timer ending graphics", "label": "LoadInGameTimerEndingGraphics", "addr": {"J": "8500C", "U": "84FB0", "E": "85B44"}, "size": {"J": "204", "U": "204", "E": "234"}, "mode": "thumb", "params": null, "return": null, "notes": "Loads the graphics for the in game timer display at the end of the game"}, {"desc": "VBlank code during gallery", "label": "VBlankCodeDuringGallery", "addr": {"J": "85210", "U": "851B4", "E": "85D78"}, "size": "164", "mode": "thumb", "params": null, "return": null, "notes": "Vblank code during gallery and ending image"}, {"desc": "VBlank code during end screen", "label": "VBlankCodeDuringEndScreen", "addr": {"J": "85374", "U": "85318", "E": "85EDC"}, "size": "A8", "mode": "thumb", "params": null, "return": null, "notes": "Vblank code during end screen"}, {"desc": "VBlank code during unlocked options", "label": "VBlankCodeDuringUnlockedOptions", "addr": {"J": "8541C", "U": "853C0", "E": "85F84"}, "size": "A4", "mode": "thumb", "params": null, "return": null, "notes": "Vblank code during unlocked options"}, {"desc": "Credits initialize", "label": "CreditsInit", "addr": {"J": "854C0", "U": "85464", "E": "86028"}, "size": {"J": "1F8", "U": "1F8", "E": "1F4"}, "mode": "thumb", "params": null, "return": null, "notes": "Initializes the credits"}, {"desc": "Display credit line", "label": "DisplayCreditLine", "addr": {"J": "856B8", "U": "8565C", "E": "8621C"}, "size": {"J": "398", "U": "398", "E": "3F0"}, "mode": "thumb", "params": [{"desc": "Line Number", "type": "u32"}], "return": {"desc": "?", "type": "u32"}, "notes": "Displays a line of text in the credits"}, {"desc": "Display credits", "label": "DisplayCredits", "addr": {"J": "85A50", "U": "859F4", "E": "8660C"}, "size": "18C", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Displays the credits"}, {"desc": "Credits Chozo wall movement", "label": "CreditsChozoWallMovement", "addr": {"J": "85BDC", "U": "85B80", "E": "86798"}, "size": "90", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Handles the scrolling of the wall at the end of the credits"}, {"desc": "Credits Chozo wall zoom", "label": "CreditsChozoWallZoom", "addr": {"J": "85C6C", "U": "85C10", "E": "86828"}, "size": {"J": "1F8", "U": "1F8", "E": "1F0"}, "mode": "thumb", "params": null, "return": {"desc": "2 if ended, 0 otherwise", "type": "u8"}, "notes": "Handles the zooming on the Chozo wall at the end of the credits"}, {"desc": "End screen initialize", "label": "EndScreenInit", "addr": {"J": "85E64", "U": "85E08", "E": "86A18"}, "size": {"J": "248", "U": "248", "E": "244"}, "mode": "thumb", "params": null, "return": null, "notes": "Initializes the end screen (before the ending image and after the credits)"}, {"desc": "End screen Samus posing", "label": "EndScreenSamusPosing", "addr": {"J": "860AC", "U": "86050", "E": "86C5C"}, "size": {"J": "764", "U": "764", "E": "77C"}, "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Handles Samus posing before the ending image"}, {"desc": "Ending image initialize", "label": "EndingImageInit", "addr": {"J": "86810", "U": "867B4", "E": "873D8"}, "size": {"J": "29C", "U": "29C", "E": "320"}, "mode": "thumb", "params": null, "return": null, "notes": "Initializes the ending image"}, {"desc": "Ending image display text", "label": "EndingImageDisplayText", "addr": {"J": "86AAC", "U": "86A50", "E": "876F8"}, "size": {"J": "23C", "U": "23C", "E": "244"}, "mode": "thumb", "params": null, "return": null, "notes": "Displays the text on an ending image (IGT and completion percentage)"}, {"desc": "Ending image display", "label": "EndingImageDisplay", "addr": {"J": "86CE8", "U": "86C8C", "E": "8793C"}, "size": "1EC", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Handles the display of the ending image"}, {"desc": "Unlocked options initialize", "label": "UnlockedOptionsInit", "addr": {"J": "86ED4", "U": "86E78", "E": "87B28"}, "size": {"J": "158", "U": "158", "E": "148"}, "mode": "thumb", "params": null, "return": null, "notes": "Initializes the unlocked options pop up after the ending image"}, {"desc": "Unlocked options pop up", "label": "UnlockedOptionsPopUp", "addr": {"J": "8702C", "U": "86FD0", "E": "87C70"}, "size": "20C", "mode": "thumb", "params": null, "return": {"desc": "Action (0 = nothing, 1 = changing pop-up, 2 = leaving)", "type": "u8"}, "notes": "Handles the pop up displaying what has been unlocked after beating the game"}, {"desc": "Credits subroutine", "label": "CreditsSubroutine", "addr": {"J": "87238", "U": "871DC", "E": "87E7C"}, "size": "208", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Subroutine for the credits (goes up to the unlocked options)"}, {"desc": "Gallery initialize", "label": "GalleryInit", "addr": {"J": "87440", "U": "873E4", "E": "88084"}, "size": "238", "mode": "thumb", "params": null, "return": null, "notes": "Initializes the gallery"}, {"desc": "Gallery display", "label": "GalleryDisplay", "addr": {"J": "87678", "U": "8761C", "E": "882BC"}, "size": "15C", "mode": "thumb", "params": null, "return": {"desc": "Leaving", "type": "bool"}, "notes": "Handles the gallery displaying the ending images"}, {"desc": "Gallery subroutine", "label": "GallerySubroutine", "addr": {"J": "877D4", "U": "87778", "E": "88418"}, "size": "D4", "mode": "thumb", "params": null, "return": {"desc": "Leaving", "type": "bool"}}, {"desc": "VBlank during Chozodia escape", "label": "VBlankDuringChozodiaEscape", "addr": {"J": "878A8", "U": "8784C", "E": "884EC"}, "size": "EC", "mode": "thumb", "params": null, "return": null, "notes": "Vblank code during the Chozodia escape"}, {"desc": "Get percent and ending number", "label": "GetPercentAndEndingNum", "addr": {"J": "87B48", "U": "87AEC", "E": "8878C"}, "size": "11C", "mode": "thumb", "params": null, "return": {"desc": "Item counts and ending number", "type": "u32"}}, {"desc": "Chozodia escape process OAM", "label": "ChozodiaEscapeProcessOAM", "addr": {"J": "87C64", "U": "87C08", "E": "888A8"}, "size": "F4", "mode": "thumb", "params": null, "return": null, "notes": "Processes a part of the OAM related stuff (ship exploding, escape ship leaving the planet and mission accomplished text)"}, {"desc": "Chozodia escape process OAM2", "label": "ChozodiaEscapeProcessOAM2", "addr": {"J": "87D58", "U": "87CFC", "E": "8899C"}, "size": "150", "mode": "thumb", "params": null, "return": null, "notes": "Processes a part of the OAM related stuff (ship opening/escape ship leaving and escape ship arriving)"}, {"desc": "Chozodia escape initialize", "label": "ChozodiaEscapeInit", "addr": {"J": "87EA8", "U": "87E4C", "E": "88AEC"}, "size": {"J": "30C", "U": "30C", "E": "308"}, "mode": "thumb", "params": null, "return": null, "notes": "Initializes the Chozodia escape"}, {"desc": "Chozodia escape escape ship leaving", "label": "ChozodiaEscapeEscapeShipLeaving", "addr": {"J": "881B4", "U": "88158", "E": "88DF4"}, "size": "184", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Handles the escape ship leaving part"}, {"desc": "Chozodia escape mother ship heating up", "label": "ChozodiaEscapeMotherShipHeatingUp", "addr": {"J": "88338", "U": "882DC", "E": "88F78"}, "size": "22C", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Handles the mother ship heating up part"}, {"desc": "Chozodia escape mother ship blowing up", "label": "ChozodiaEscapeMotherShipBlowingUp", "addr": {"J": "88564", "U": "88508", "E": "891A4"}, "size": {"J": "3EC", "U": "3EC", "E": "3E4"}, "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Handles the mother ship blowing up part"}, {"desc": "Chozodia escape escape ship leaving planet", "label": "ChozodiaEscapeEscapeShipLeavingPlanet", "addr": {"J": "88950", "U": "888F4", "E": "89588"}, "size": {"J": "30C", "U": "30C", "E": "31C"}, "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}, "notes": "Handles the escape ship leaving the planet part"}, {"desc": "Chozodia escape mission accomplished", "label": "ChozodiaEscapeMissionAccomplished", "addr": {"J": "88C5C", "U": "88C00", "E": "898A4"}, "size": {"J": "15C", "U": "15C", "E": "144"}, "mode": "thumb", "params": null, "return": {"desc": "2 if ended, 0 otherwise", "type": "u8"}, "notes": "Handles the mission accomplished part"}, {"desc": "Chozodia escape subroutine", "label": "ChozodiaEscapeSubroutine", "addr": {"J": "88DB8", "U": "88D5C", "E": "899E8"}, "size": "144", "mode": "thumb", "params": null, "return": {"desc": "Ended", "type": "bool"}}, {"desc": "Set SIOCNT start bit active", "label": "SetSIOCNTStartBitActive", "addr": {"J": "89DC0", "U": "89D64", "E": "8A9F0"}, "size": "10", "mode": "thumb", "params": null, "return": null, "notes": "Sets the \"Start Bit\" flag of SIOCNT"}, {"desc": "Check error", "label": "CheckError", "addr": {"J": "89FF0", "U": "89F94", "E": "8AC20"}, "size": "198", "mode": "thumb", "params": null, "return": {"desc": "?", "type": "u32"}, "notes": "Checks if an error has occured and calls DisplayError? If yes"}, {"desc": "Detect error", "label": "DetectError", "addr": {"J": "8A408", "U": "8A3AC", "E": "8B038"}, "size": "120", "mode": "thumb", "params": [{"desc": "?", "type": "u32"}, {"desc": "?", "type": "u32"}, {"desc": "?", "type": "u32"}], "return": {"desc": "Error flag", "type": "bool"}, "notes": "Detects if an error has occured"}, {"desc": "Set SIOCNT start bit active_Duplicate", "label": "SetSIOCNTStartBitActive_Duplicate", "addr": {"J": "8A89C", "U": "8A840", "E": "8B4CC"}, "size": "10", "mode": "thumb", "params": null, "return": null, "notes": "Sets the \"Start Bit\" flag of SIOCNT (duplicate)"}, {"desc": "bx r0", "label": "bx_r0", "addr": {"J": "8AC54", "U": "8ABF8", "E": "8B884"}, "size": "4", "mode": "thumb", "params": null, "return": null}, {"desc": "bx r1", "label": "bx_r1", "addr": {"J": "8AC58", "U": "8ABFC", "E": "8B888"}, "size": "4", "mode": "thumb", "params": null, "return": null}, {"desc": "bx r2", "label": "bx_r2", "addr": {"J": "8AC5C", "U": "8AC00", "E": "8B88C"}, "size": "4", "mode": "thumb", "params": null, "return": null}, {"desc": "bx r3", "label": "bx_r3", "addr": {"J": "8AC60", "U": "8AC04", "E": "8B890"}, "size": "4", "mode": "thumb", "params": null, "return": null}, {"desc": "bx r4", "label": "bx_r4", "addr": {"J": "8AC64", "U": "8AC08", "E": "8B894"}, "size": "4", "mode": "thumb", "params": null, "return": null}, {"desc": "bx r5", "label": "bx_r5", "addr": {"J": "8AC68", "U": "8AC0C", "E": "8B898"}, "size": "4", "mode": "thumb", "params": null, "return": null}, {"desc": "bx r6", "label": "bx_r6", "addr": {"J": "8AC6C", "U": "8AC10", "E": "8B89C"}, "size": "4", "mode": "thumb", "params": null, "return": null}, {"desc": "bx r7", "label": "bx_r7", "addr": {"J": "8AC70", "U": "8AC14", "E": "8B8A0"}, "size": "4", "mode": "thumb", "params": null, "return": null}, {"desc": "bx r8", "label": "bx_r8", "addr": {"J": "8AC74", "U": "8AC18", "E": "8B8A4"}, "size": "4", "mode": "thumb", "params": null, "return": null}, {"desc": "bx r9", "label": "bx_r9", "addr": {"J": "8AC78", "U": "8AC1C", "E": "8B8A8"}, "size": "4", "mode": "thumb", "params": null, "return": null}, {"desc": "bx r10", "label": "bx_r10", "addr": {"J": "8AC7C", "U": "8AC20", "E": "8B8AC"}, "size": "4", "mode": "thumb", "params": null, "return": null}, {"desc": "bx r11", "label": "bx_r11", "addr": {"J": "8AC80", "U": "8AC24", "E": "8B8B0"}, "size": "4", "mode": "thumb", "params": null, "return": null}, {"desc": "bx r12", "label": "bx_r12", "addr": {"J": "8AC84", "U": "8AC28", "E": "8B8B4"}, "size": "4", "mode": "thumb", "params": null, "return": null}, {"desc": "bx r13", "label": "bx_r13", "addr": {"J": "8AC88", "U": "8AC2C", "E": "8B8B8"}, "size": "4", "mode": "thumb", "params": null, "return": null}, {"desc": "bx r14", "label": "bx_r14", "addr": {"J": "8AC8C", "U": "8AC30", "E": "8B8BC"}, "size": "4", "mode": "thumb", "params": null, "return": null}, {"desc": "Divide (signed)", "label": "Divide_Signed", "addr": {"J": "8AC90", "U": "8AC34", "E": "8B8C0"}, "size": "94", "mode": "thumb", "params": [{"desc": "Dividend", "type": "s32"}, {"desc": "Divisor", "type": "s32"}], "return": {"desc": "Quotient", "type": "s32"}, "notes": "Function __divsi3 from divmod.c in libgcc"}, {"desc": "Divide by 0 handler (empty)", "label": "DivideBy0Handler", "addr": {"J": "8AD24", "U": "8ACC8", "E": "8B954"}, "size": "4", "mode": "thumb", "params": null, "return": null}, {"desc": "Double to integer with overflow", "label": "DoubleToInt_Overflow", "addr": {"J": "8AD28", "U": "8ACCC", "E": "8B958"}, "size": "44", "mode": "thumb", "params": [{"desc": "Double upper 32 bits", "type": "u32"}, {"desc": "Double lower 32 bits", "type": "u32"}], "return": {"desc": "Integer", "type": "s32"}, "notes": "If the double is >= 2^31, treat as integer overflow and return a negative value"}, {"desc": "Modulo (signed)", "label": "Modulo_Signed", "addr": {"J": "8AD6C", "U": "8AD10", "E": "8B99C"}, "size": "D0", "mode": "thumb", "params": [{"desc": "Dividend", "type": "s32"}, {"desc": "Divisor", "type": "s32"}], "return": {"desc": "Remainder", "type": "s32"}, "notes": "Function __modsi3 from divmod.c in libgcc"}, {"desc": "Divide (unsigned)", "label": "Divide_Unsigned", "addr": {"J": "8AE3C", "U": "8ADE0", "E": "8BA6C"}, "size": "78", "mode": "thumb", "params": [{"desc": "Dividend", "type": "u32"}, {"desc": "Divisor", "type": "u32"}], "return": {"desc": "Quotient", "type": "u32"}, "notes": "Function __udivsi3 from udivmod.c in libgcc"}, {"desc": "Modulo (unsigned)", "label": "Modulo_Unsigned", "addr": {"J": "8AEB4", "U": "8AE58", "E": "8BAE4"}, "size": "C0", "mode": "thumb", "params": [{"desc": "Dividend", "type": "u32"}, {"desc": "Divisor", "type": "u32"}], "return": {"desc": "Remainder", "type": "u32"}, "notes": "Function __umodsi3 from udivmod.c in libgcc"}, {"desc": "Pack double", "label": "PackDouble", "addr": {"J": "8AF74", "U": "8AF18", "E": "8BBA4"}, "size": "148", "mode": "thumb", "params": [{"desc": "Pointer to unpacked data", "type": "ptr.FloatingPointNum"}], "return": {"desc": "Double value (uses r0 and r1)", "type": "u32"}, "notes": "Function pack_d from fp-bit.c in libgcc"}, {"desc": "Unpack double", "label": "UnpackDouble", "addr": {"J": "8B0BC", "U": "8B060", "E": "8BCEC"}, "size": "D8", "mode": "thumb", "params": [{"desc": "Pointer to double value", "type": "ptr"}, {"desc": "Pointer to unpacked data", "type": "ptr.FloatingPointNum"}], "return": null, "notes": "Function unpack_d in fp-bit.c in libgcc"}, {"desc": "Add double parts", "label": "AddDoubleParts", "addr": {"J": "8B194", "U": "8B138", "E": "8BDC4"}, "size": "26C", "mode": "thumb", "params": [{"desc": "Pointer to unpacked double 1", "type": "ptr.FloatingPointNum"}, {"desc": "Pointer to unpacked double 2", "type": "ptr.FloatingPointNum"}, {"desc": "Pointer to temp unpacked double", "type": "ptr.FloatingPointNum"}], "return": {"desc": "Pointer to unpacked double result", "type": "ptr.FloatingPointNum"}, "notes": "Function _fpadd_parts in fp-bit.c in libgcc"}, {"desc": "Add doubles", "label": "AddDoubles", "addr": {"J": "8B400", "U": "8B3A4", "E": "8C030"}, "size": "30", "mode": "thumb", "params": [{"desc": "Double 1 upper 32 bits", "type": "u32"}, {"desc": "Double 1 lower 32 bits", "type": "u32"}, {"desc": "Double 2 upper 32 bits", "type": "u32"}, {"desc": "Double 2 lower 32 bits", "type": "u32"}], "return": {"desc": "Double value (uses r0 and r1)", "type": "u32"}, "notes": "Function add from fp-bit.c in libgcc"}, {"desc": "Subtract doubles", "label": "SubtractDoubles", "addr": {"J": "8B430", "U": "8B3D4", "E": "8C060"}, "size": "38", "mode": "thumb", "params": [{"desc": "Double 1 upper 32 bits", "type": "u32"}, {"desc": "Double 1 lower 32 bits", "type": "u32"}, {"desc": "Double 2 upper 32 bits", "type": "u32"}, {"desc": "Double 2 lower 32 bits", "type": "u32"}], "return": {"desc": "Double value (uses r0 and r1)", "type": "u32"}, "notes": "Function sub from fp-bit.c in libgcc"}, {"desc": "Multiply doubles", "label": "MultiplyDoubles", "addr": {"J": "8B468", "U": "8B40C", "E": "8C098"}, "size": "2A8", "mode": "thumb", "params": [{"desc": "Double 1 upper 32 bits", "type": "u32"}, {"desc": "Double 1 lower 32 bits", "type": "u32"}, {"desc": "Double 2 upper 32 bits", "type": "u32"}, {"desc": "Double 2 lower 32 bits", "type": "u32"}], "return": {"desc": "Double value (uses r0 and r1)", "type": "u32"}, "notes": "Function multiply from fp-bit.c in libgcc"}, {"desc": "Divide doubles", "label": "DivideDoubles", "addr": {"J": "8B710", "U": "8B6B4", "E": "8C340"}, "size": "188", "mode": "thumb", "params": [{"desc": "Double 1 upper 32 bits", "type": "u32"}, {"desc": "Double 1 lower 32 bits", "type": "u32"}, {"desc": "Double 2 upper 32 bits", "type": "u32"}, {"desc": "Double 2 lower 32 bits", "type": "u32"}], "return": {"desc": "Double value (uses r0 and r1)", "type": "u32"}, "notes": "Function divide from fp-bit.c in libgcc"}, {"desc": "Compare double parts", "label": "CompareDoubleParts", "addr": {"J": "8B898", "U": "8B83C", "E": "8C4C8"}, "size": "100", "mode": "thumb", "params": [{"desc": "Pointer to unpacked double 1", "type": "ptr.FloatingPointNum"}, {"desc": "Pointer to unpacked double 2", "type": "ptr.FloatingPointNum"}], "return": {"desc": "Comparison result (-1 = less, 0 = equal, 1 = greater)", "type": "s8"}, "notes": "Function __fpcmp_parts from fp-bit.c in libgcc"}, {"desc": "Compare doubles", "label": "CompareDoubles", "addr": {"J": "8B998", "U": "8B93C", "E": "8C5C8"}, "size": "2C", "mode": "thumb", "params": [{"desc": "Double 1 upper 32 bits", "type": "u32"}, {"desc": "Double 1 lower 32 bits", "type": "u32"}, {"desc": "Double 2 upper 32 bits", "type": "u32"}, {"desc": "Double 2 lower 32 bits", "type": "u32"}], "return": {"desc": "Comparison result (-1 = less, 0 = equal, 1 = greater)", "type": "s8"}, "notes": "Function compare from fp-bit.c in libgcc"}, {"desc": "Doubles equal", "label": "DoublesEqual", "addr": {"J": "8B9C4", "U": "8B968", "E": "8C5F4"}, "size": "4C", "mode": "thumb", "params": [{"desc": "Double 1 upper 32 bits", "type": "u32"}, {"desc": "Double 1 lower 32 bits", "type": "u32"}, {"desc": "Double 2 upper 32 bits", "type": "u32"}, {"desc": "Double 2 lower 32 bits", "type": "u32"}], "return": {"desc": "Comparison result (-1 = less, 0 = equal, 1 = greater)", "type": "s8"}, "notes": "Function _eq_f2 from fp-bit.c in libgcc"}, {"desc": "Doubles not equal", "label": "DoublesNotEqual", "addr": {"J": "8BA10", "U": "8B9B4", "E": "8C640"}, "size": "4C", "mode": "thumb", "params": [{"desc": "Double 1 upper 32 bits", "type": "u32"}, {"desc": "Double 1 lower 32 bits", "type": "u32"}, {"desc": "Double 2 upper 32 bits", "type": "u32"}, {"desc": "Double 2 lower 32 bits", "type": "u32"}], "return": {"desc": "Comparison result (-1 = less, 0 = equal, 1 = greater)", "type": "s8"}, "notes": "Function _ne_f2 from fp-bit.c in libgcc"}, {"desc": "Doubles greater than", "label": "DoublesGreaterThan", "addr": {"J": "8BA5C", "U": "8BA00", "E": "8C68C"}, "size": "4C", "mode": "thumb", "params": [{"desc": "Double 1 upper 32 bits", "type": "u32"}, {"desc": "Double 1 lower 32 bits", "type": "u32"}, {"desc": "Double 2 upper 32 bits", "type": "u32"}, {"desc": "Double 2 lower 32 bits", "type": "u32"}], "return": {"desc": "Comparison result (-1 = less, 0 = equal, 1 = greater)", "type": "s8"}, "notes": "Function _gt_f2 from fp-bit.c in libgcc"}, {"desc": "Doubles greater equal", "label": "DoublesGreaterEqual", "addr": {"J": "8BAA8", "U": "8BA4C", "E": "8C6D8"}, "size": "4C", "mode": "thumb", "params": [{"desc": "Double 1 upper 32 bits", "type": "u32"}, {"desc": "Double 1 lower 32 bits", "type": "u32"}, {"desc": "Double 2 upper 32 bits", "type": "u32"}, {"desc": "Double 2 lower 32 bits", "type": "u32"}], "return": {"desc": "Comparison result (-1 = less, 0 = equal, 1 = greater)", "type": "s8"}, "notes": "Function _ge_f2 from fp-bit.c in libgcc"}, {"desc": "Doubles less than", "label": "DoublesLessThan", "addr": {"J": "8BAF4", "U": "8BA98", "E": "8C724"}, "size": "4C", "mode": "thumb", "params": [{"desc": "Double 1 upper 32 bits", "type": "u32"}, {"desc": "Double 1 lower 32 bits", "type": "u32"}, {"desc": "Double 2 upper 32 bits", "type": "u32"}, {"desc": "Double 2 lower 32 bits", "type": "u32"}], "return": {"desc": "Comparison result (-1 = less, 0 = equal, 1 = greater)", "type": "s8"}, "notes": "Function _lt_f2 from fp-bit.c in libgcc"}, {"desc": "Doubles less equal", "label": "DoublesLessEqual", "addr": {"J": "8BB40", "U": "8BAE4", "E": "8C770"}, "size": "4C", "mode": "thumb", "params": [{"desc": "Double 1 upper 32 bits", "type": "u32"}, {"desc": "Double 1 lower 32 bits", "type": "u32"}, {"desc": "Double 2 upper 32 bits", "type": "u32"}, {"desc": "Double 2 lower 32 bits", "type": "u32"}], "return": {"desc": "Comparison result (-1 = less, 0 = equal, 1 = greater)", "type": "s8"}, "notes": "Function _le_f2 from fp-bit.c in libgcc"}, {"desc": "Integer to double", "label": "IntToDouble", "addr": {"J": "8BB8C", "U": "8BB30", "E": "8C7BC"}, "size": "7C", "mode": "thumb", "params": [{"desc": "Integer", "type": "s32"}], "return": {"desc": "Double value (uses r0 and r1)", "type": "u32"}, "notes": "Function si_to_float from fp-bit.c in libgcc"}, {"desc": "Double to int", "label": "DoubleToInt", "addr": {"J": "8BC08", "U": "8BBAC", "E": "8C838"}, "size": "74", "mode": "thumb", "params": [{"desc": "Double upper 32 bits", "type": "u32"}, {"desc": "Double lower 32 bits", "type": "u32"}], "return": {"desc": "Integer", "type": "s32"}, "notes": "Function float_to_si from fp-bit.c in libgcc"}, {"desc": "Negate double", "label": "NegateDouble", "addr": {"J": "8BC7C", "U": "8BC20", "E": "8C8AC"}, "size": "28", "mode": "thumb", "params": [{"desc": "Double upper 32 bits", "type": "u32"}, {"desc": "Double lower 32 bits", "type": "u32"}], "return": {"desc": "Double value (uses r0 and r1)", "type": "u32"}, "notes": "Function negate from fp-bit.c in libgcc"}, {"desc": "Create double from parts", "label": "CreateDouble", "addr": {"J": "8BCA4", "U": "8BC48", "E": "8C8D4"}, "size": "28", "mode": "thumb", "params": [{"desc": "Class", "type": "u32", "enum": "FloatingPointClass"}, {"desc": "Sign", "type": "u32"}, {"desc": "Normalized exponent", "type": "s32"}, {"desc": "Fraction lower bits", "type": "u32"}, {"desc": "Fraction upper bits", "type": "u32"}], "return": {"desc": "Double value (uses r0 and r1)", "type": "u32"}, "notes": "Function __make_dp from fp-bit.c in libgcc"}, {"desc": "Convert double to float", "label": "DoubleToFloat", "addr": {"J": "8BCCC", "U": "8BC70", "E": "8C8FC"}, "size": "44", "mode": "thumb", "params": [{"desc": "Double upper 32 bits", "type": "u32"}, {"desc": "Double lower 32 bits", "type": "u32"}], "return": {"desc": "Float value", "type": "u32"}, "notes": "Function df_to_sf from fp-bit.c in libgcc"}, {"desc": "Pack float", "label": "PackFloat", "addr": {"J": "8BD10", "U": "8BCB4", "E": "8C940"}, "size": "B8", "mode": "thumb", "params": [{"desc": "Pointer to unpacked data", "type": "ptr.FloatingPointNum"}], "return": {"desc": "Float value", "type": "u32"}, "notes": "Function pack_d from fp-bit.c in libgcc"}, {"desc": "Unpack float", "label": "UnpackFloat", "addr": {"J": "8BDC8", "U": "8BD6C", "E": "8C9F8"}, "size": "7C", "mode": "thumb", "params": [{"desc": "Pointer to float value", "type": "ptr"}, {"desc": "Pointer to unpacked data", "type": "ptr.FloatingPointNum"}], "return": null, "notes": "Function unpack_d in fp-bit.c in libgcc"}, {"desc": "Add float parts", "label": "AddFloatParts", "addr": {"J": "8BE44", "U": "8BDE8", "E": "8CA74"}, "size": "17C", "mode": "thumb", "params": [{"desc": "Pointer to unpacked float 1", "type": "ptr.FloatingPointNum"}, {"desc": "Pointer to unpacked float 2", "type": "ptr.FloatingPointNum"}, {"desc": "Pointer to temp unpacked float", "type": "ptr.FloatingPointNum"}], "return": {"desc": "Pointer to unpacked float result", "type": "ptr.FloatingPointNum"}, "notes": "Function _fpadd_parts in fp-bit.c in libgcc"}, {"desc": "Add floats", "label": "AddFloats", "addr": {"J": "8BFC0", "U": "8BF64", "E": "8CBF0"}, "size": "2C", "mode": "thumb", "params": [{"desc": "Float 1", "type": "u32"}, {"desc": "Float 2", "type": "u32"}], "return": {"desc": "Float value", "type": "u32"}, "notes": "Function add from fp-bit.c in libgcc"}, {"desc": "Subtract floats", "label": "SubtractFloats", "addr": {"J": "8BFEC", "U": "8BF90", "E": "8CC1C"}, "size": "34", "mode": "thumb", "params": [{"desc": "Float 1", "type": "u32"}, {"desc": "Float 2", "type": "u32"}], "return": {"desc": "Float value", "type": "u32"}, "notes": "Function sub from fp-bit.c in libgcc"}, {"desc": "Multiply floats", "label": "MultiplyFloats", "addr": {"J": "8C020", "U": "8BFC4", "E": "8CC50"}, "size": "164", "mode": "thumb", "params": [{"desc": "Float 1", "type": "u32"}, {"desc": "Float 2", "type": "u32"}], "return": {"desc": "Float value", "type": "u32"}, "notes": "Function multiply from fp-bit.c in libgcc"}, {"desc": "Divide floats", "label": "DivideFloats", "addr": {"J": "8C184", "U": "8C128", "E": "8CDB4"}, "size": "EC", "mode": "thumb", "params": [{"desc": "Float 1", "type": "u32"}, {"desc": "Float 2", "type": "u32"}], "return": {"desc": "Float value", "type": "u32"}, "notes": "Function divide from fp-bit.c in libgcc"}, {"desc": "Compare float parts", "label": "CompareFloatParts", "addr": {"J": "8C270", "U": "8C214", "E": "8CEA0"}, "size": "E4", "mode": "thumb", "params": [{"desc": "Pointer to unpacked float 1", "type": "ptr.FloatingPointNum"}, {"desc": "Pointer to unpacked float 2", "type": "ptr.FloatingPointNum"}], "return": {"desc": "Comparison result (-1 = less, 0 = equal, 1 = greater)", "type": "s8"}, "notes": "Function __fpcmp_parts from fp-bit.c in libgcc"}, {"desc": "Compare floats", "label": "CompareFloats", "addr": {"J": "8C354", "U": "8C2F8", "E": "8CF84"}, "size": "28", "mode": "thumb", "params": [{"desc": "Float 1", "type": "u32"}, {"desc": "Float 2", "type": "u32"}], "return": {"desc": "Comparison result (-1 = less, 0 = equal, 1 = greater)", "type": "s8"}, "notes": "Function compare from fp-bit.c in libgcc"}, {"desc": "Floats equal", "label": "FloatsEqual", "addr": {"J": "8C37C", "U": "8C320", "E": "8CFAC"}, "size": "48", "mode": "thumb", "params": [{"desc": "Float 1", "type": "u32"}, {"desc": "Float 2", "type": "u32"}], "return": {"desc": "Comparison result (-1 = less, 0 = equal, 1 = greater)", "type": "s8"}, "notes": "Function _eq_f2 from fp-bit.c in libgcc"}, {"desc": "Floats not equal", "label": "FloatsNotEqual", "addr": {"J": "8C3C4", "U": "8C368", "E": "8CFF4"}, "size": "48", "mode": "thumb", "params": [{"desc": "Float 1", "type": "u32"}, {"desc": "Float 2", "type": "u32"}], "return": {"desc": "Comparison result (-1 = less, 0 = equal, 1 = greater)", "type": "s8"}, "notes": "Function _ne_f2 from fp-bit.c in libgcc"}, {"desc": "Floats greater than", "label": "FloatsGreaterThan", "addr": {"J": "8C40C", "U": "8C3B0", "E": "8D03C"}, "size": "48", "mode": "thumb", "params": [{"desc": "Float 1", "type": "u32"}, {"desc": "Float 2", "type": "u32"}], "return": {"desc": "Comparison result (-1 = less, 0 = equal, 1 = greater)", "type": "s8"}, "notes": "Function _gt_f2 from fp-bit.c in libgcc"}, {"desc": "Floats greater equal", "label": "FloatsGreaterEqual", "addr": {"J": "8C454", "U": "8C3F8", "E": "8D084"}, "size": "48", "mode": "thumb", "params": [{"desc": "Float 1", "type": "u32"}, {"desc": "Float 2", "type": "u32"}], "return": {"desc": "Comparison result (-1 = less, 0 = equal, 1 = greater)", "type": "s8"}, "notes": "Function _ge_f2 from fp-bit.c in libgcc"}, {"desc": "Floats less than", "label": "FloatsLessThan", "addr": {"J": "8C49C", "U": "8C440", "E": "8D0CC"}, "size": "48", "mode": "thumb", "params": [{"desc": "Float 1", "type": "u32"}, {"desc": "Float 2", "type": "u32"}], "return": {"desc": "Comparison result (-1 = less, 0 = equal, 1 = greater)", "type": "s8"}, "notes": "Function _lt_f2 from fp-bit.c in libgcc"}, {"desc": "Floats less equal", "label": "FloatsLessEqual", "addr": {"J": "8C4E4", "U": "8C488", "E": "8D114"}, "size": "48", "mode": "thumb", "params": [{"desc": "Float 1", "type": "u32"}, {"desc": "Float 2", "type": "u32"}], "return": {"desc": "Comparison result (-1 = less, 0 = equal, 1 = greater)", "type": "s8"}, "notes": "Function _le_f2 from fp-bit.c in libgcc"}, {"desc": "Integer to float", "label": "IntToFloat", "addr": {"J": "8C52C", "U": "8C4D0", "E": "8D15C"}, "size": "60", "mode": "thumb", "params": [{"desc": "Integer", "type": "s32"}], "return": {"desc": "Float value", "type": "u32"}, "notes": "Function si_to_float from fp-bit.c in libgcc"}, {"desc": "Float to int", "label": "FloatToInt", "addr": {"J": "8C58C", "U": "8C530", "E": "8D1BC"}, "size": "68", "mode": "thumb", "params": [{"desc": "Float value", "type": "u32"}], "return": {"desc": "Integer", "type": "s32"}, "notes": "Function float_to_si from fp-bit.c in libgcc"}, {"desc": "Negate float", "label": "NegateFloat", "addr": {"J": "8C5F4", "U": "8C598", "E": "8D224"}, "size": "24", "mode": "thumb", "params": [{"desc": "Float value", "type": "u32"}], "return": {"desc": "Float value", "type": "u32"}, "notes": "Function negate from fp-bit.c in libgcc"}, {"desc": "Create float from parts", "label": "CreateFloat", "addr": {"J": "8C618", "U": "8C5BC", "E": "8D248"}, "size": "18", "mode": "thumb", "params": [{"desc": "Class", "type": "u32", "enum": "FloatingPointClass"}, {"desc": "Sign", "type": "u32"}, {"desc": "Normalized exponent", "type": "s32"}, {"desc": "Fraction", "type": "u32"}], "return": {"desc": "Float value", "type": "u32"}, "notes": "Function __make_fp from fp-bit.c in libgcc"}, {"desc": "Convert float to double", "label": "FloatToDouble", "addr": {"J": "8C630", "U": "8C5D4", "E": "8D260"}, "size": "2C", "mode": "thumb", "params": [{"desc": "Float value", "type": "u32"}], "return": {"desc": "Double value (uses r0 and r1)", "type": "u32"}, "notes": "Function sf_to_df from fp-bit.c in libgcc"}, {"desc": "Right shift long integer", "label": "RightShiftLongInt", "addr": {"J": "8C65C", "U": "8C600", "E": "8D28C"}, "size": "34", "mode": "thumb", "params": [{"desc": "Long int lower 32 bits", "type": "u32"}, {"desc": "Long int upper 32 bits", "type": "u32"}, {"desc": "Shift amount", "type": "u32"}], "return": {"desc": "Long int (uses r0 and r1)", "type": "u32"}}, {"desc": "Multiply long integers", "label": "MultiplyLongInts", "addr": {"J": "8C690", "U": "8C634", "E": "8D2C0"}, "size": "70", "mode": "thumb", "params": [{"desc": "Long int 1 lower 32 bits", "type": "u32"}, {"desc": "Long int 1 upper 32 bits", "type": "u32"}, {"desc": "Long int 2 lower 32 bits", "type": "u32"}, {"desc": "Long int 2 upper 32 bits", "type": "u32"}], "return": {"desc": "Long int (uses r0 and r1)", "type": "u32"}}, {"desc": "Negate long integer", "label": "NegateLongInt", "addr": {"J": "8C700", "U": "8C6A4", "E": "8D330"}, "size": "18", "mode": "thumb", "params": [{"desc": "Long int lower 32 bits", "type": "u32"}, {"desc": "Long int upper 32 bits", "type": "u32"}], "return": {"desc": "Long int (uses r0 and r1)", "type": "u32"}}, {"desc": "Memory copy", "label": "MemoryCopy", "addr": {"J": "8C718", "U": "8C6BC", "E": "8D348"}, "size": "60", "mode": "thumb", "params": [{"desc": "Destination address", "type": "ptr"}, {"desc": "Source address", "type": "ptr"}, {"desc": "Size", "type": "u32"}], "return": {"desc": "Destination address", "type": "ptr"}, "notes": "Function memcpy from memcpy.c in libgcc"}]